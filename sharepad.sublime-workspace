{
	"auto_complete":
	{
		"selected_items":
		[
			[
				"pizza",
				"pizza"
			],
			[
				"row",
				"rows"
			]
		]
	},
	"buffers":
	[
		{
			"file": "sharepad.py",
			"settings":
			{
				"buffer_size": 3297,
				"line_ending": "Windows"
			}
		},
		{
			"contents": "Searching 536 files for \"init\"\n\nC:\\Users\\johan\\Documents\\GitHub\\sharepad\\sharepad.py:\n    4  from flask import Flask, flash, redirect, render_template, request, url_for, session, g\n    5  from collections import defaultdict\n    6: from sharepad_db import create_db, init_db, add_pizza\n    7  \n    8  # TODO: store this in a common locatio\n    .\n   21      return sqlite3.connect(app.config['DATABASE'])\n   22  \n   23: def init_db():\n   24      \"\"\"Creates the database tables.\"\"\"\n   25      sharepad_db.create_db()\n   26:     sharepad_db.init_db()\n   27      # with closing(connect_db()) as db:\n   28      #     with app.open_resource('schema.sql') as f:\n\nC:\\Users\\johan\\Documents\\GitHub\\sharepad\\sharepad_db.py:\n  112          cur.execute(\"CREATE TABLE IngredientTypes (Id INTEGER PRIMARY KEY AUTOINCREMENT, Name TEXT, DisplayName TEXT);\")\n  113  \n  114: def init_ingredienttypes_table():\n  115      con = connect_db()\n  116      with con:\n  ...\n  138          cur.execute(\"CREATE TABLE Ingredients (Id INTEGER PRIMARY KEY AUTOINCREMENT, Name TEXT, DisplayName TEXT, Type INTEGER, FOREIGN KEY (Type) REFERENCES IngredientTypes(Id));\")\n  139  \n  140: def init_ingredients_table():\n  141      con = connect_db()\n  142      with con:\n  ...\n  200      create_pizzasingredients_table()\n  201  \n  202: def init_db():\n  203:     \"\"\"Initialise the database\"\"\"\n  204:     init_ingredienttypes_table()\n  205:     init_ingredients_table()\n  206  \n  207  def show_ingredients():\n  ...\n  218  def main():\n  219      create_db()\n  220:     init_db()\n  221      show_ingredients()\n  222  \n\nC:\\Users\\johan\\Documents\\GitHub\\sharepad\\templates\\app.html:\n    3    <head>\n    4      <meta charset=\"utf-8\">\n    5:     <meta name=\"viewport\" content=\"width=device-width, initial-scale=1\"> \n    6      <title>Andiccio24 Share your own</title>\n    7      <link rel=\"stylesheet\"\n\nC:\\Users\\johan\\Documents\\GitHub\\sharepad\\templates\\layout.html:\n    3    <head>\n    4      <title>Share your own</title> \n    5:     <meta name=\"viewport\" content=\"width=device-width, initial-scale=1\"> \n    6      <link rel=\"stylesheet\" href=\"http://code.jquery.com/mobile/1.1.1/jquery.mobile-1.1.1.min.css\" />\n    7      <script src=\"http://code.jquery.com/jquery-1.7.1.min.js\"></script>\n\nC:\\Users\\johan\\Documents\\GitHub\\sharepad\\venv\\Include\\ceval.h:\n  108     Py_END_ALLOW_THREADS!!!\n  109  \n  110:    The function PyEval_InitThreads() should be called only from\n  111:    initthread() in \"threadmodule.c\".\n  112  \n  113     Note that not yet all candidates have been converted to use this\n  ...\n  120  #ifdef WITH_THREAD\n  121  \n  122: PyAPI_FUNC(int)  PyEval_ThreadsInitialized(void);\n  123: PyAPI_FUNC(void) PyEval_InitThreads(void);\n  124  PyAPI_FUNC(void) PyEval_AcquireLock(void);\n  125  PyAPI_FUNC(void) PyEval_ReleaseLock(void);\n  126  PyAPI_FUNC(void) PyEval_AcquireThread(PyThreadState *tstate);\n  127  PyAPI_FUNC(void) PyEval_ReleaseThread(PyThreadState *tstate);\n  128: PyAPI_FUNC(void) PyEval_ReInitThreads(void);\n  129  \n  130  #define Py_BEGIN_ALLOW_THREADS { \\\n\nC:\\Users\\johan\\Documents\\GitHub\\sharepad\\venv\\Include\\code.h:\n    1: /* Definitions for bytecode */\n    2  \n    3  #ifndef Py_CODE_H\n\nC:\\Users\\johan\\Documents\\GitHub\\sharepad\\venv\\Include\\codecs.h:\n   12  Written by Marc-Andre Lemburg (mal@lemburg.com).\n   13  \n   14: Copyright (c) Corporation for National Research Initiatives.\n   15  \n   16     ------------------------------------------------------------------------ */\n\nC:\\Users\\johan\\Documents\\GitHub\\sharepad\\venv\\Include\\cStringIO.h:\n   11    objects.\n   12  \n   13:   Before calling any of the functions or macros, you must initialize\n   14    the routines with:\n   15  \n   16      PycString_IMPORT\n   17  \n   18:   This would typically be done in your init function.\n   19  \n   20  */\n\nC:\\Users\\johan\\Documents\\GitHub\\sharepad\\venv\\Include\\dictobject.h:\n   20     Does not hold an active (key, value) pair now and never did.  Unused can\n   21     transition to Active upon key insertion.  This is the only case in which\n   22:    me_key is NULL, and is each slot's initial state.\n   23  \n   24  2. Active.  me_key != NULL and me_key != dummy and me_value != NULL\n\nC:\\Users\\johan\\Documents\\GitHub\\sharepad\\venv\\Include\\floatobject.h:\n   77   * specifies the number of bytes in the string.\n   78   *\n   79:  * On platforms that appear to use (see _PyFloat_Init()) IEEE-754 formats\n   80   * these functions work by copying bits.  On other platforms, the formats the\n   81   * 4- byte format is identical to the IEEE-754 single precision format, and\n   ..\n   98   * set, most likely OverflowError).\n   99   * There are two problems on non-IEEE platforms:\n  100:  * 1):  What this does is undefined if x is a NaN or infinity.\n  101   * 2):  -0.0 and +0.0 produce the same string.\n  102   */\n  ...\n  106  /* Used to get the important decimal digits of a double */\n  107  PyAPI_FUNC(int) _PyFloat_Digits(char *buf, double v, int *signum);\n  108: PyAPI_FUNC(void) _PyFloat_DigitsInit(void);\n  109  \n  110  /* The unpack routines read 4 or 8 bytes, starting at p.  le is a bool\n  ...\n  114   * PyErr_Occurred() is true (and an exception is set, most likely\n  115   * OverflowError).  Note that on a non-IEEE platform this will refuse\n  116:  * to unpack a string that represents a NaN or infinity.\n  117   */\n  118  PyAPI_FUNC(double) _PyFloat_Unpack4(const unsigned char *p, int le);\n\nC:\\Users\\johan\\Documents\\GitHub\\sharepad\\venv\\Include\\grammar.h:\n   17  } label;\n   18  \n   19: #define EMPTY 0		/* Label number 0 is by definition the empty label */\n   20  \n   21  /* A list of labels */\n   ..\n   51      int		 d_type;	/* Non-terminal this represents */\n   52      char	*d_name;	/* For printing */\n   53:     int		 d_initial;	/* Initial state */\n   54      int		 d_nstates;\n   55      state	*d_state;	/* Array of states */\n\nC:\\Users\\johan\\Documents\\GitHub\\sharepad\\venv\\Include\\import.h:\n    1  \n    2: /* Module definition and import interface */\n    3  \n    4  #ifndef Py_IMPORT_H\n    .\n   39  	const char *, PyObject *, char *, size_t, FILE **, PyObject **);\n   40  PyAPI_FUNC(int) _PyImport_IsScript(struct filedescr *);\n   41: PyAPI_FUNC(void) _PyImport_ReInitLock(void);\n   42  \n   43  PyAPI_FUNC(PyObject *)_PyImport_FindExtension(char *, char *);\n   44  PyAPI_FUNC(PyObject *)_PyImport_FixupExtension(char *, char *);\n   45  \n   46: struct _inittab {\n   47      char *name;\n   48:     void (*initfunc)(void);\n   49  };\n   50  \n   51  PyAPI_DATA(PyTypeObject) PyNullImporter_Type;\n   52: PyAPI_DATA(struct _inittab *) PyImport_Inittab;\n   53  \n   54: PyAPI_FUNC(int) PyImport_AppendInittab(const char *name, void (*initfunc)(void));\n   55: PyAPI_FUNC(int) PyImport_ExtendInittab(struct _inittab *newtab);\n   56  \n   57  struct _frozen {\n\nC:\\Users\\johan\\Documents\\GitHub\\sharepad\\venv\\Include\\intrcheck.h:\n    7  \n    8  PyAPI_FUNC(int) PyOS_InterruptOccurred(void);\n    9: PyAPI_FUNC(void) PyOS_InitInterrupts(void);\n   10  PyAPI_FUNC(void) PyOS_AfterFork(void);\n   11  \n\nC:\\Users\\johan\\Documents\\GitHub\\sharepad\\venv\\Include\\modsupport.h:\n   54  \n   55     The symbol PYTHON_API_STRING defines the same value as a string\n   56:    literal.  *** PLEASE MAKE SURE THE DEFINITIONS MATCH. ***\n   57  \n   58     Please add a line or two to the top of this log for each API\n   ..\n   87     10-Jan-1995	GvR	Renamed globals to new naming scheme\n   88  \n   89:    9-Jan-1995	GvR	Initial version (incompatible with older API)\n   90  */\n   91  \n   ..\n   98  \n   99  #if SIZEOF_SIZE_T != SIZEOF_INT\n  100: /* On a 64-bit system, rename the Py_InitModule4 so that 2.4\n  101     modules cannot get loaded into a 2.5 interpreter */\n  102: #define Py_InitModule4 Py_InitModule4_64\n  103  #endif\n  104  \n  105  #ifdef Py_TRACE_REFS\n  106:  /* When we are tracing reference counts, rename Py_InitModule4 so\n  107      modules compiled with incompatible settings will generate a\n  108      link-time error. */\n  109   #if SIZEOF_SIZE_T != SIZEOF_INT\n  110:  #undef Py_InitModule4\n  111:  #define Py_InitModule4 Py_InitModule4TraceRefs_64\n  112   #else\n  113:  #define Py_InitModule4 Py_InitModule4TraceRefs\n  114   #endif\n  115  #endif\n  116  \n  117: PyAPI_FUNC(PyObject *) Py_InitModule4(const char *name, PyMethodDef *methods,\n  118                                        const char *doc, PyObject *self,\n  119                                        int apiver);\n  120  \n  121: #define Py_InitModule(name, methods) \\\n  122: 	Py_InitModule4(name, methods, (char *)NULL, (PyObject *)NULL, \\\n  123  		       PYTHON_API_VERSION)\n  124  \n  125: #define Py_InitModule3(name, methods, doc) \\\n  126: 	Py_InitModule4(name, methods, doc, (PyObject *)NULL, \\\n  127  		       PYTHON_API_VERSION)\n  128  \n\nC:\\Users\\johan\\Documents\\GitHub\\sharepad\\venv\\Include\\object.h:\n   14  accessed through special macros and functions only.  (Type objects are\n   15  exceptions to the first rule; the standard types are represented by\n   16: statically initialized type objects, although work on type/class unification\n   17  for Python 2.2 made it possible to have heap-allocated type objects too).\n   18  \n   ..\n   68      struct _object *_ob_prev;\n   69  \n   70: #define _PyObject_EXTRA_INIT 0, 0,\n   71  \n   72  #else\n   73  #define _PyObject_HEAD_EXTRA\n   74: #define _PyObject_EXTRA_INIT\n   75  #endif\n   76  \n   77: /* PyObject_HEAD defines the initial segment of every PyObject. */\n   78  #define PyObject_HEAD                   \\\n   79      _PyObject_HEAD_EXTRA                \\\n   ..\n   81      struct _typeobject *ob_type;\n   82  \n   83: #define PyObject_HEAD_INIT(type)        \\\n   84:     _PyObject_EXTRA_INIT                \\\n   85      1, type,\n   86  \n   87: #define PyVarObject_HEAD_INIT(type, size)       \\\n   88:     PyObject_HEAD_INIT(type) size,\n   89  \n   90: /* PyObject_VAR_HEAD defines the initial segment of all variable-size\n   91   * container objects.  These end with a declaration of an array with 1\n   92   * element, but enough space is malloc'ed so that the array actually\n   ..\n  318  typedef PyObject *(*descrgetfunc) (PyObject *, PyObject *, PyObject *);\n  319  typedef int (*descrsetfunc) (PyObject *, PyObject *, PyObject *);\n  320: typedef int (*initproc)(PyObject *, PyObject *, PyObject *);\n  321  typedef PyObject *(*newfunc)(struct _typeobject *, PyObject *, PyObject *);\n  322  typedef PyObject *(*allocfunc)(struct _typeobject *, Py_ssize_t);\n  ...\n  386      descrsetfunc tp_descr_set;\n  387      Py_ssize_t tp_dictoffset;\n  388:     initproc tp_init;\n  389      allocfunc tp_alloc;\n  390      newfunc tp_new;\n  ...\n  402  \n  403  #ifdef COUNT_ALLOCS\n  404:     /* these must be last and never explicitly initialized */\n  405      Py_ssize_t tp_allocs;\n  406      Py_ssize_t tp_frees;\n  ...\n  525  \n  526  #ifdef Py_DEBUG\n  527: PyAPI_DATA(int) _Py_HashSecret_Initialized;\n  528  #endif\n  529  \n  ...\n  549  Python 1.5.2 introduced the bf_getcharbuffer slot into PyBufferProcs.\n  550  \n  551: Type definitions should use Py_TPFLAGS_DEFAULT for their tp_flags value.\n  552  \n  553  Code can use PyType_HasFeature(type_ob, flag_value) to test whether the\n  ...\n  595  #define Py_TPFLAGS_BASETYPE (1L<<10)\n  596  \n  597: /* Set if the type is 'ready' -- fully initialized */\n  598  #define Py_TPFLAGS_READY (1L<<12)\n  599  \n  ...\n  667  wherever a void expression is allowed.  The argument must not be a\n  668  NULL pointer.  If it may be NULL, use Py_XINCREF/Py_XDECREF instead.\n  669: The macro _Py_NewReference(op) initialize reference counts to 1, and\n  670  in special builds (Py_REF_DEBUG, Py_TRACE_REFS) performs additional\n  671  bookkeeping appropriate to the special build.\n  ...\n  869  compilers (notably SCO ODT 3.0, perhaps early AIX as well) botched the\n  870  static keyword when it was used with a forward declaration of a static\n  871: initialized structure.  Standard C allows the forward declaration with\n  872  static, and we've decided to stop catering to broken C compilers.\n  873  (In fact, we expect that the compilers are all fixed eight years later.)\n\nC:\\Users\\johan\\Documents\\GitHub\\sharepad\\venv\\Include\\objimpl.h:\n   28  \n   29   - PyObject_New(type, typeobj) allocates memory for a new object of the given\n   30:    type, and initializes part of it.  'type' must be the C structure type used\n   31     to represent the object, and 'typeobj' the address of the corresponding\n   32     type object.  Reference count and type pointer are filled in; the rest of\n   ..\n   42     run a destructor -- it only frees the memory.  PyObject_Free is identical.\n   43  \n   44:  - PyObject_Init(op, typeobj) and PyObject_InitVar(op, typeobj, n) don't\n   45     allocate memory.  Instead of a 'type' parameter, they take a pointer to a\n   46:    new object (allocated by an arbitrary allocator), and initialize its object\n   47     header fields.\n   48  \n   ..\n   55  must use the platform malloc heap(s), or shared memory, or C++ local storage or\n   56  operator new), you must first allocate the object with your custom allocator,\n   57: then pass its pointer to PyObject_{Init, InitVar} for filling in its Python-\n   58  specific fields:  reference count, type pointer, possibly others.  You should\n   59  be aware that Python no control over these objects because they don't\n   ..\n   92     so that you can exploit Python's small-block allocator for non-object\n   93     uses.  If you must use these routines to allocate object memory, make sure\n   94:    the object gets initialized via PyObject_{Init, InitVar} after obtaining\n   95     the raw memory.\n   96  */\n   ..\n  148  \n  149  /* Functions */\n  150: PyAPI_FUNC(PyObject *) PyObject_Init(PyObject *, PyTypeObject *);\n  151: PyAPI_FUNC(PyVarObject *) PyObject_InitVar(PyVarObject *,\n  152                                                   PyTypeObject *, Py_ssize_t);\n  153  PyAPI_FUNC(PyObject *) _PyObject_New(PyTypeObject *);\n  ...\n  161  /* Macros trading binary compatibility for speed. See also pymem.h.\n  162     Note that these macros expect non-NULL object pointers.*/\n  163: #define PyObject_INIT(op, typeobj) \\\n  164      ( Py_TYPE(op) = (typeobj), _Py_NewReference((PyObject *)(op)), (op) )\n  165: #define PyObject_INIT_VAR(op, typeobj, size) \\\n  166:     ( Py_SIZE(op) = (size), PyObject_INIT((op), (typeobj)) )\n  167  \n  168  #define _PyObject_SIZE(typeobj) ( (typeobj)->tp_basicsize )\n  ...\n  191  \n  192  #define PyObject_NEW(type, typeobj) \\\n  193: ( (type *) PyObject_Init( \\\n  194      (PyObject *) PyObject_MALLOC( _PyObject_SIZE(typeobj) ), (typeobj)) )\n  195  \n  196  #define PyObject_NEW_VAR(type, typeobj, n) \\\n  197: ( (type *) PyObject_InitVar( \\\n  198        (PyVarObject *) PyObject_MALLOC(_PyObject_VAR_SIZE((typeobj),(n)) ),\\\n  199        (typeobj), (n)) )\n  ...\n  203     distinction between two steps (at least):\n  204         1) the actual allocation of the object storage;\n  205:        2) the initialization of the Python specific fields\n  206:       in this storage with PyObject_{Init, InitVar}.\n  207  \n  208     PyObject *\n  ...\n  215         return PyErr_NoMemory();\n  216  \n  217:        PyObject_Init(op, &YourTypeStruct);\n  218  \n  219         op->ob_field = value;\n  ...\n  224     Note that in C++, the use of the new operator usually implies that\n  225     the 1st step is performed automatically for you, so in a C++ class\n  226:    constructor you would start directly with PyObject_Init/InitVar\n  227  */\n  228  \n  ...\n  335   * tracked by the GC. */\n  336  #define PyGC_HEAD_SIZE 0\n  337: #define PyObject_GC_Init(op)\n  338  #define PyObject_GC_Fini(op)\n  339  #define PyObject_AS_GC(op) (op)\n\nC:\\Users\\johan\\Documents\\GitHub\\sharepad\\venv\\Include\\opcode.h:\n  127  \n  128  #define RAISE_VARARGS	130	/* Number of raise arguments (1, 2 or 3) */\n  129: /* CALL_FUNCTION_XXX opcodes defined below depend on this definition */\n  130  #define CALL_FUNCTION	131	/* #args + (#kwargs<<8) */\n  131  #define MAKE_FUNCTION	132	/* #defaults */\n\nC:\\Users\\johan\\Documents\\GitHub\\sharepad\\venv\\Include\\py_curses.h:\n    6  /*\n    7  ** On Mac OS X 10.2 [n]curses.h and stdlib.h use different guards\n    8: ** against multiple definition of wchar_t.\n    9  */\n   10  #ifdef	_BSD_WCHAR_T_DEFINED_\n   ..\n   21  /*\n   22  ** On FreeBSD, [n]curses.h and stdlib.h/wchar.h use different guards\n   23: ** against multiple definition of wchar_t and wint_t.\n   24  */\n   25  #ifdef	_XOPEN_SOURCE_EXTENDED\n   ..\n   94  #define PyCursesWindow_Type (*(PyTypeObject *) PyCurses_API[0])\n   95  #define PyCursesSetupTermCalled  {if (! ((int (*)(void))PyCurses_API[1]) () ) return NULL;}\n   96: #define PyCursesInitialised      {if (! ((int (*)(void))PyCurses_API[2]) () ) return NULL;}\n   97: #define PyCursesInitialisedColor {if (! ((int (*)(void))PyCurses_API[3]) () ) return NULL;}\n   98  \n   99  #define import_curses() \\\n  ...\n  117  static PyObject *PyCurses_ ## X (PyObject *self) \\\n  118  { \\\n  119:   PyCursesInitialised \\\n  120    return PyCursesCheckERR(X(), # X); }\n  121  \n  ...\n  124  { \\\n  125    int flag = 0; \\\n  126:   PyCursesInitialised \\\n  127    switch(PyTuple_Size(args)) { \\\n  128    case 0: \\\n  ...\n  139  static PyObject *PyCurses_ ## X (PyObject *self) \\\n  140  { \\\n  141:  PyCursesInitialised \\\n  142   return PyInt_FromLong((long) X()); }\n  143  \n  ...\n  146  static PyObject *PyCurses_ ## X (PyObject *self) \\\n  147  { \\\n  148:   PyCursesInitialised \\\n  149    return PyString_FromString(X()); }\n  150  \n  ...\n  152  static PyObject *PyCurses_ ## X (PyObject *self) \\\n  153  { \\\n  154:   PyCursesInitialised \\\n  155    if (X () == FALSE) { \\\n  156      Py_INCREF(Py_False); \\\n  ...\n  163  static PyObject *PyCurses_ ## X (PyObject *self) \\\n  164  { \\\n  165:   PyCursesInitialised \\\n  166    X(); \\\n  167    Py_INCREF(Py_None); \\\n\nC:\\Users\\johan\\Documents\\GitHub\\sharepad\\venv\\Include\\pyconfig.h:\n  215  #include <float.h>\n  216  #define Py_IS_NAN _isnan\n  217: #define Py_IS_INFINITY(X) (!_finite(X) && !_isnan(X))\n  218: #define Py_IS_FINITE(X) _finite(X)\n  219  #define copysign _copysign\n  220  #define hypot _hypot\n  ...\n  444  /* Define if on AIX 3.\n  445     System headers sometimes define this.\n  446:    We just want to avoid a redefinition error message.  */\n  447  #ifndef _ALL_SOURCE\n  448  /* #undef _ALL_SOURCE */\n\nC:\\Users\\johan\\Documents\\GitHub\\sharepad\\venv\\Include\\pyerrors.h:\n   72  #endif\n   73  \n   74: /* Error handling definitions */\n   75  \n   76  PyAPI_FUNC(void) PyErr_SetNone(PyObject *);\n\nC:\\Users\\johan\\Documents\\GitHub\\sharepad\\venv\\Include\\pymacconfig.h:\n   86  \n   87      /*\n   88:      * The definition in pyconfig.h is only valid on the OS release\n   89       * where configure ran on and not necessarily for all systems where\n   90       * the executable can be used on.\n   ..\n   92       * Specifically: OSX 10.4 has limited supported for '%zd', while\n   93       * 10.5 has full support for '%zd'. A binary built on 10.5 won't\n   94:      * work properly on 10.4 unless we surpress the definition\n   95       * of PY_FORMAT_SIZE_T\n   96       */\n\nC:\\Users\\johan\\Documents\\GitHub\\sharepad\\venv\\Include\\pymactoolbox.h:\n   19  char *PyMac_StrError(int);			/* strerror with mac errors */\n   20  extern PyObject *PyMac_OSErrException;		/* Exception for OSErr */\n   21: PyObject *PyMac_GetOSErrException(void);	/* Initialize & return it */\n   22  PyObject *PyErr_Mac(PyObject *, int);		/* Exception with a mac error */\n   23  PyObject *PyMac_Error(OSErr);			/* Uses PyMac_GetOSErrException */\n   ..\n   59  ** The rest of the routines are implemented by extension modules. If they are\n   60  ** dynamically loaded mactoolboxglue will contain a stub implementation of the\n   61: ** routine, which imports the module, whereupon the module's init routine will\n   62  ** communicate the routine pointer back to the stub.\n   63  ** If USE_TOOLBOX_OBJECT_GLUE is not defined there is no glue code, and the\n   ..\n   69  #ifdef USE_TOOLBOX_OBJECT_GLUE\n   70  /*\n   71: ** These macros are used in the module init code. If we use toolbox object glue\n   72  ** it sets the function pointer to point to the real function.\n   73  */\n   74: #define PyMac_INIT_TOOLBOX_OBJECT_NEW(object, rtn) { \\\n   75  	extern PyObject *(*PyMacGluePtr_##rtn)(object); \\\n   76  	PyMacGluePtr_##rtn = _##rtn; \\\n   77  }\n   78: #define PyMac_INIT_TOOLBOX_OBJECT_CONVERT(object, rtn) { \\\n   79  	extern int (*PyMacGluePtr_##rtn)(PyObject *, object *); \\\n   80  	PyMacGluePtr_##rtn = _##rtn; \\\n   ..\n   82  #else\n   83  /*\n   84: ** If we don't use toolbox object glue the init macros are empty. Moreover, we define\n   85  ** _xxx_New to be the same as xxx_New, and the code in mactoolboxglue isn't included.\n   86  */\n   87: #define PyMac_INIT_TOOLBOX_OBJECT_NEW(object, rtn)\n   88: #define PyMac_INIT_TOOLBOX_OBJECT_CONVERT(object, rtn)\n   89  #endif /* USE_TOOLBOX_OBJECT_GLUE */\n   90  \n\nC:\\Users\\johan\\Documents\\GitHub\\sharepad\\venv\\Include\\pymath.h:\n   40  #ifdef _OSF_SOURCE\n   41  /* OSF1 5.1 doesn't make these available with XOPEN_SOURCE_EXTENDED defined */\n   42: extern int finite(double);\n   43  extern double copysign(double, double);\n   44  #endif\n   ..\n   99  #endif\n  100  \n  101: /* Py_IS_INFINITY(X)\n  102:  * Return 1 if float or double arg is an infinity, else 0.\n  103   * Caution:\n  104   *    X is evaluated more than once.\n  ...\n  107   *    Override in pyconfig.h if you have a better spelling on your platform.\n  108   *  Py_FORCE_DOUBLE is used to avoid getting false negatives from a\n  109:  *    non-infinite value v sitting in an 80-bit x87 register such that\n  110:  *    v becomes infinite when spilled from the register to 64-bit memory.\n  111:  * Note: PC/pyconfig.h defines Py_IS_INFINITY as _isinf\n  112   */\n  113: #ifndef Py_IS_INFINITY\n  114  #  if defined HAVE_DECL_ISINF && HAVE_DECL_ISINF == 1\n  115: #    define Py_IS_INFINITY(X) isinf(X)\n  116  #  else\n  117: #    define Py_IS_INFINITY(X) ((X) &&                                   \\\n  118                                 (Py_FORCE_DOUBLE(X)*0.5 == Py_FORCE_DOUBLE(X)))\n  119  #  endif\n  120  #endif\n  121  \n  122: /* Py_IS_FINITE(X)\n  123:  * Return 1 if float or double arg is neither infinite nor NAN, else 0.\n  124   * Some compilers (e.g. VisualStudio) have intrisics for this, so a special\n  125   * macro for this particular test is useful\n  126:  * Note: PC/pyconfig.h defines Py_IS_FINITE as _finite\n  127   */\n  128: #ifndef Py_IS_FINITE\n  129: #if defined HAVE_DECL_ISFINITE && HAVE_DECL_ISFINITE == 1\n  130: #define Py_IS_FINITE(X) isfinite(X)\n  131: #elif defined HAVE_FINITE\n  132: #define Py_IS_FINITE(X) finite(X)\n  133  #else\n  134: #define Py_IS_FINITE(X) (!Py_IS_INFINITY(X) && !Py_IS_NAN(X))\n  135  #endif\n  136  #endif\n  137  \n  138: /* HUGE_VAL is supposed to expand to a positive double infinity.  Python\n  139   * uses Py_HUGE_VAL instead because some platforms are broken in this\n  140   * respect.  We used to embed code in pyport.h to try to worm around that,\n  ...\n  164   *	  any exceptional condition, but does require +- HUGE_VAL return\n  165   *	  values on overflow.  A 754 box *probably* maps HUGE_VAL to a\n  166:  *	  double infinity, and we're cool if that's so, unless the input\n  167:  *	  was an infinity and an infinity is the expected result.  A C89\n  168   *	  system sets errno to ERANGE, so we check for that too.  We're\n  169   *	  out of luck if a C99 754 box doesn't map HUGE_VAL to +Inf, or\n\nC:\\Users\\johan\\Documents\\GitHub\\sharepad\\venv\\Include\\pyport.h:\n   18  C language & library operations whose spellings vary across platforms.\n   19  \n   20: Please try to make documentation here as clear as possible:  by definition,\n   21  the stuff here is trying to illuminate C's darkest corners.\n   22  \n   ..\n  178     SIZE_MAX is part of C99, so it might be defined on some\n  179     platforms. If it is not defined, (size_t)-1 is a portable\n  180:    definition for C89, due to the way signed->unsigned\n  181     conversion is defined. */\n  182  #ifdef SIZE_MAX\n  ...\n  307  \n  308  #ifdef HAVE_IEEEFP_H\n  309: #include <ieeefp.h>  /* needed for 'finite' declaration on some platforms */\n  310  #endif\n  311  \n  ...\n  520   *     #define HAVE_PY_SET_53BIT_PRECISION 1\n  521   *\n  522:  *  and also give appropriate definitions for the following three macros:\n  523   *\n  524   *    _PY_SET_53BIT_PRECISION_START : store original FPU settings, and\n  ...\n  550  #endif\n  551  \n  552: /* default definitions are empty */\n  553  #ifndef HAVE_PY_SET_53BIT_PRECISION\n  554  #define _Py_SET_53BIT_PRECISION_HEADER\n  ...\n  700    PyAPI_FUNC(type): Declares a public Python API function and return type\n  701    PyAPI_DATA(type): Declares public Python data and its type\n  702:   PyMODINIT_FUNC:   A Python module init function.  If these functions are\n  703                      inside the Python core, they are private to the core.\n  704                      If in an extension module, it may be declared with\n  ...\n  725  #                       define PyAPI_FUNC(RTYPE) __declspec(dllexport) RTYPE\n  726  #                       define PyAPI_DATA(RTYPE) extern __declspec(dllexport) RTYPE\n  727:         /* module init functions inside the core need no external linkage */\n  728          /* except for Cygwin to handle embedding (FIXME: BeOS too?) */\n  729  #                       if defined(__CYGWIN__)\n  730: #                               define PyMODINIT_FUNC __declspec(dllexport) void\n  731  #                       else /* __CYGWIN__ */\n  732: #                               define PyMODINIT_FUNC void\n  733  #                       endif /* __CYGWIN__ */\n  734  #               else /* Py_BUILD_CORE */\n  ...\n  742  #                       endif /* !__CYGWIN__ */\n  743  #                       define PyAPI_DATA(RTYPE) extern __declspec(dllimport) RTYPE\n  744:         /* module init functions outside the core must be exported */\n  745  #                       if defined(__cplusplus)\n  746: #                               define PyMODINIT_FUNC extern \"C\" __declspec(dllexport) void\n  747  #                       else /* __cplusplus */\n  748: #                               define PyMODINIT_FUNC __declspec(dllexport) void\n  749  #                       endif /* __cplusplus */\n  750  #               endif /* Py_BUILD_CORE */\n  ...\n  759  #       define PyAPI_DATA(RTYPE) extern RTYPE\n  760  #endif\n  761: #ifndef PyMODINIT_FUNC\n  762  #       if defined(__cplusplus)\n  763: #               define PyMODINIT_FUNC extern \"C\" void\n  764  #       else /* __cplusplus */\n  765: #               define PyMODINIT_FUNC void\n  766  #       endif /* __cplusplus */\n  767  #endif\n  ...\n  847   * overflows.\n  848   */\n  849: #error \"LONG_BIT definition appears wrong for platform (bad gcc/glibc config?).\"\n  850  #endif\n  851  \n\nC:\\Users\\johan\\Documents\\GitHub\\sharepad\\venv\\Include\\pystate.h:\n  107  PyAPI_FUNC(PyThreadState *) PyThreadState_New(PyInterpreterState *);\n  108  PyAPI_FUNC(PyThreadState *) _PyThreadState_Prealloc(PyInterpreterState *);\n  109: PyAPI_FUNC(void) _PyThreadState_Init(PyThreadState *);\n  110  PyAPI_FUNC(void) PyThreadState_Clear(PyThreadState *);\n  111  PyAPI_FUNC(void) PyThreadState_Delete(PyThreadState *);\n\nC:\\Users\\johan\\Documents\\GitHub\\sharepad\\venv\\Include\\pystrtod.h:\n   35  \n   36  /* PyOS_double_to_string's \"type\", if non-NULL, will be set to one of: */\n   37: #define Py_DTST_FINITE 0\n   38: #define Py_DTST_INFINITE 1\n   39  #define Py_DTST_NAN 2\n   40  \n\nC:\\Users\\johan\\Documents\\GitHub\\sharepad\\venv\\Include\\Python.h:\n  156  #include \"pyfpe.h\"\n  157  \n  158: /* These definitions must match corresponding definitions in graminit.h.\n  159     There's code in compile.c that checks that they are the same. */\n  160  #define Py_single_input 256\n\nC:\\Users\\johan\\Documents\\GitHub\\sharepad\\venv\\Include\\pythonrun.h:\n   26  PyAPI_FUNC(char *) Py_GetPythonHome(void);\n   27  \n   28: PyAPI_FUNC(void) Py_Initialize(void);\n   29: PyAPI_FUNC(void) Py_InitializeEx(int);\n   30  PyAPI_FUNC(void) Py_Finalize(void);\n   31: PyAPI_FUNC(int) Py_IsInitialized(void);\n   32  PyAPI_FUNC(PyThreadState *) Py_NewInterpreter(void);\n   33  PyAPI_FUNC(void) Py_EndInterpreter(PyThreadState *);\n   ..\n  118  PyAPI_FUNC(const char *) _Py_hgversion(void);\n  119  \n  120: /* Internal -- various one-time initializations */\n  121: PyAPI_FUNC(PyObject *) _PyBuiltin_Init(void);\n  122: PyAPI_FUNC(PyObject *) _PySys_Init(void);\n  123: PyAPI_FUNC(void) _PyImport_Init(void);\n  124: PyAPI_FUNC(void) _PyExc_Init(void);\n  125: PyAPI_FUNC(void) _PyImportHooks_Init(void);\n  126: PyAPI_FUNC(int) _PyFrame_Init(void);\n  127: PyAPI_FUNC(int) _PyInt_Init(void);\n  128: PyAPI_FUNC(int) _PyLong_Init(void);\n  129: PyAPI_FUNC(void) _PyFloat_Init(void);\n  130: PyAPI_FUNC(int) PyByteArray_Init(void);\n  131: PyAPI_FUNC(void) _PyRandom_Init(void);\n  132  \n  133  /* Various internal finalizers */\n\nC:\\Users\\johan\\Documents\\GitHub\\sharepad\\venv\\Include\\pythread.h:\n   10  #endif\n   11  \n   12: PyAPI_FUNC(void) PyThread_init_thread(void);\n   13  PyAPI_FUNC(long) PyThread_start_new_thread(void (*)(void *), void *);\n   14  PyAPI_FUNC(void) PyThread_exit_thread(void);\n   ..\n   33  \n   34  /* Cleanup after a fork */\n   35: PyAPI_FUNC(void) PyThread_ReInitTLS(void);\n   36  \n   37  #ifdef __cplusplus\n\nC:\\Users\\johan\\Documents\\GitHub\\sharepad\\venv\\Include\\structseq.h:\n   22  extern char* PyStructSequence_UnnamedField;\n   23  \n   24: PyAPI_FUNC(void) PyStructSequence_InitType(PyTypeObject *type,\n   25  					   PyStructSequence_Desc *desc);\n   26  \n\nC:\\Users\\johan\\Documents\\GitHub\\sharepad\\venv\\Include\\token.h:\n    8  #endif\n    9  \n   10: #undef TILDE   /* Prevent clash of our definition with system macro. Ex AIX, ioctl.h */\n   11  \n   12  #define ENDMARKER	0\n   ..\n   66  #define N_TOKENS	53\n   67  \n   68: /* Special definitions for cooperation with parser */\n   69  \n   70  #define NT_OFFSET		256\n\nC:\\Users\\johan\\Documents\\GitHub\\sharepad\\venv\\Include\\unicodeobject.h:\n   10  Unicode Integration Proposal (see file Misc/unicode.txt).\n   11  \n   12: Copyright (c) Corporation for National Research Initiatives.\n   13  \n   14  \n   ..\n  214  # define _PyUnicode_AsDefaultEncodedString _PyUnicodeUCS2_AsDefaultEncodedString\n  215  # define _PyUnicode_Fini _PyUnicodeUCS2_Fini\n  216: # define _PyUnicode_Init _PyUnicodeUCS2_Init\n  217  # define _PyUnicode_IsAlpha _PyUnicodeUCS2_IsAlpha\n  218  # define _PyUnicode_IsDecimalDigit _PyUnicodeUCS2_IsDecimalDigit\n  ...\n  301  # define _PyUnicode_AsDefaultEncodedString _PyUnicodeUCS4_AsDefaultEncodedString\n  302  # define _PyUnicode_Fini _PyUnicodeUCS4_Fini\n  303: # define _PyUnicode_Init _PyUnicodeUCS4_Init\n  304  # define _PyUnicode_IsAlpha _PyUnicodeUCS4_IsAlpha\n  305  # define _PyUnicode_IsDecimalDigit _PyUnicodeUCS4_IsDecimalDigit\n\nC:\\Users\\johan\\Documents\\GitHub\\sharepad\\venv\\Include\\warnings.h:\n    5  #endif\n    6  \n    7: PyAPI_FUNC(void) _PyWarnings_Init(void);\n    8  \n    9  PyAPI_FUNC(int) PyErr_WarnEx(PyObject *, const char *, Py_ssize_t);\n\nC:\\Users\\johan\\Documents\\GitHub\\sharepad\\venv\\Lib\\_abcoll.py:\n  137  \n  138  class Set(Sized, Iterable, Container):\n  139:     \"\"\"A set is a finite, iterable container.\n  140  \n  141      This class provides concrete generic implementations of all\n  ...\n  385  class MappingView(Sized):\n  386  \n  387:     def __init__(self, mapping):\n  388          self._mapping = mapping\n  389  \n  ...\n  518      \"\"\"All the operations on a read-only sequence.\n  519  \n  520:     Concrete subclasses must override __new__ or __init__,\n  521      __getitem__, and __len__.\n  522      \"\"\"\n\nC:\\Users\\johan\\Documents\\GitHub\\sharepad\\venv\\Lib\\_weakrefset.py:\n   14      # This technique should be relatively thread-safe (since sets are).\n   15  \n   16:     def __init__(self, weakcontainer):\n   17          # Don't create cycles\n   18          self.weakcontainer = ref(weakcontainer)\n   ..\n   34  \n   35  class WeakSet(object):\n   36:     def __init__(self, data=None):\n   37          self.data = set()\n   38          def _remove(item, selfref=ref(self)):\n\nC:\\Users\\johan\\Documents\\GitHub\\sharepad\\venv\\Lib\\codecs.py:\n  160      the state of the Encoding process between calls to encode().\n  161      \"\"\"\n  162:     def __init__(self, errors='strict'):\n  163          \"\"\"\n  164          Creates an IncrementalEncoder instance.\n  ...\n  179      def reset(self):\n  180          \"\"\"\n  181:         Resets the encoder to the initial state.\n  182          \"\"\"\n  183  \n  ...\n  200      buffer between calls to encode().\n  201      \"\"\"\n  202:     def __init__(self, errors='strict'):\n  203:         IncrementalEncoder.__init__(self, errors)\n  204          self.buffer = \"\" # unencoded input that is kept between calls to encode()\n  205  \n  ...\n  233      remembers the state of the decoding process between calls to decode().\n  234      \"\"\"\n  235:     def __init__(self, errors='strict'):\n  236          \"\"\"\n  237          Creates a IncrementalDecoder instance.\n  ...\n  251      def reset(self):\n  252          \"\"\"\n  253:         Resets the decoder to the initial state.\n  254          \"\"\"\n  255  \n  ...\n  263          additional_state_info must be a non-negative integer\n  264          representing the state of the decoder WITHOUT yet having\n  265:         processed the contents of buffered_input.  In the initial state\n  266          and after reset(), getstate() must return (b\"\", 0).\n  267          \"\"\"\n  ...\n  282      sequences.\n  283      \"\"\"\n  284:     def __init__(self, errors='strict'):\n  285:         IncrementalDecoder.__init__(self, errors)\n  286          self.buffer = \"\" # undecoded input that is kept between calls to decode()\n  287  \n  ...\n  320  class StreamWriter(Codec):\n  321  \n  322:     def __init__(self, stream, errors='strict'):\n  323  \n  324          \"\"\" Creates a StreamWriter instance.\n  ...\n  393  class StreamReader(Codec):\n  394  \n  395:     def __init__(self, stream, errors='strict'):\n  396  \n  397          \"\"\" Creates a StreamReader instance.\n  ...\n  446              The method should use a greedy read strategy meaning that\n  447              it should read as much data as is allowed within the\n  448:             definition of the encoding and the given size, e.g.  if\n  449              optional encoding endings or state markers are available\n  450              on the stream, these should be read too.\n  ...\n  649      encoding = 'unknown'\n  650  \n  651:     def __init__(self, stream, Reader, Writer, errors='strict'):\n  652  \n  653          \"\"\" Creates a StreamReaderWriter instance.\n  ...\n  744      file_encoding = 'unknown'\n  745  \n  746:     def __init__(self, stream, encode, decode, Reader, Writer,\n  747                   errors='strict'):\n  748  \n\nC:\\Users\\johan\\Documents\\GitHub\\sharepad\\venv\\Lib\\copy_reg.py:\n   49      else:\n   50          obj = base.__new__(cls, state)\n   51:         if base.__init__ != object.__init__:\n   52:             base.__init__(obj, state)\n   53      return obj\n   54  \n   ..\n  153  _extension_cache = {}                   # code -> object\n  154  # Don't ever rebind those names:  cPickle grabs a reference to them when\n  155: # it's initialized, and won't see a rebinding.\n  156  \n  157  def add_extension(module, name, code):\n\nC:\\Users\\johan\\Documents\\GitHub\\sharepad\\venv\\Lib\\fnmatch.py:\n   32      [!seq]  matches any char not in seq\n   33  \n   34:     An initial period in FILENAME is not special.\n   35      Both FILENAME and PATTERN are first case-normalized\n   36      if the operating system requires it.\n\nC:\\Users\\johan\\Documents\\GitHub\\sharepad\\venv\\Lib\\locale.py:\n  120          if interval == CHAR_MAX:\n  121              return\n  122:         # 0: re-use last group ad infinitum\n  123          if interval == 0:\n  124              if last_interval is None:\n  ...\n  586  # The following data was extracted from the locale.alias file which\n  587  # comes with X11 and then hand edited removing the explicit encoding\n  588: # definitions and adding some more aliases. The file is usually\n  589  # available as /usr/lib/X11/locale/locale.alias.\n  590  #\n  ...\n 1806      \"\"\"\n 1807      categories = {}\n 1808:     def _init_categories(categories=categories):\n 1809          for k,v in globals().items():\n 1810              if k[:3] == 'LC_':\n 1811                  categories[k] = v\n 1812:     _init_categories()\n 1813      del categories['LC_ALL']\n 1814  \n\nC:\\Users\\johan\\Documents\\GitHub\\sharepad\\venv\\Lib\\ntpath.py:\n  418      # is any better behaviour for such edge cases.\n  419      if prefix == '':\n  420:         # No drive letter - preserve initial backslashes\n  421          while path[:1] == \"\\\\\":\n  422              prefix = prefix + backslash\n  423              path = path[1:]\n  424      else:\n  425:         # We have a drive letter - collapse initial backslashes\n  426          if path.startswith(\"\\\\\"):\n  427              prefix = prefix + backslash\n\nC:\\Users\\johan\\Documents\\GitHub\\sharepad\\venv\\Lib\\os.py:\n  412          # But we store them as upper case\n  413          class _Environ(UserDict.IterableUserDict):\n  414:             def __init__(self, environ):\n  415:                 UserDict.UserDict.__init__(self)\n  416                  data = self.data\n  417                  for k, v in environ.items():\n  ...\n  465      else:  # Where Env Var Names Can Be Mixed Case\n  466          class _Environ(UserDict.IterableUserDict):\n  467:             def __init__(self, environ):\n  468:                 UserDict.UserDict.__init__(self)\n  469                  self.data = environ\n  470              def __setitem__(self, key, item):\n\nC:\\Users\\johan\\Documents\\GitHub\\sharepad\\venv\\Lib\\posixpath.py:\n  316      if path == '':\n  317          return dot\n  318:     initial_slashes = path.startswith('/')\n  319:     # POSIX allows one or two initial slashes, but treats three or more\n  320      # as single slash.\n  321:     if (initial_slashes and\n  322          path.startswith('//') and not path.startswith('///')):\n  323:         initial_slashes = 2\n  324      comps = path.split('/')\n  325      new_comps = []\n  ...\n  327          if comp in ('', '.'):\n  328              continue\n  329:         if (comp != '..' or (not initial_slashes and not new_comps) or\n  330               (new_comps and new_comps[-1] == '..')):\n  331              new_comps.append(comp)\n  ...\n  334      comps = new_comps\n  335      path = slash.join(comps)\n  336:     if initial_slashes:\n  337:         path = slash*initial_slashes + path\n  338      return path or dot\n  339  \n  ...\n  367              resolved = _resolve_link(component)\n  368              if resolved is None:\n  369:                 # Infinite loop -- return original component + rest of the path\n  370                  return abspath(join(*([component] + bits[i:])))\n  371              else:\n\nC:\\Users\\johan\\Documents\\GitHub\\sharepad\\venv\\Lib\\re.py:\n  289  \n  290  class Scanner:\n  291:     def __init__(self, lexicon, flags=0):\n  292          from sre_constants import BRANCH, SUBPATTERN\n  293          self.lexicon = lexicon\n\nC:\\Users\\johan\\Documents\\GitHub\\sharepad\\venv\\Lib\\site.py:\n    2  \n    3  ****************************************************************\n    4: * This module is automatically imported during initialization. *\n    5  ****************************************************************\n    6  \n    .\n  114      \"\"\" Remove duplicate entries from sys.path along with making them\n  115      absolute\"\"\"\n  116:     # This ensures that the initial path provided by the interpreter contains\n  117      # only absolute pathnames, even if we're running from the build directory.\n  118      L = []\n  ...\n  141      sys.path.append(s)\n  142  \n  143: def _init_pathinfo():\n  144      \"\"\"Return a set containing all existing directory entries from sys.path\"\"\"\n  145      d = set()\n  ...\n  157      sitedir if it starts with 'import'\"\"\"\n  158      if known_paths is None:\n  159:         _init_pathinfo()\n  160          reset = 1\n  161      else:\n  ...\n  188      'sitedir'\"\"\"\n  189      if known_paths is None:\n  190:         known_paths = _init_pathinfo()\n  191          reset = 1\n  192      else:\n  ...\n  390  \n  391      class Quitter(object):\n  392:         def __init__(self, name):\n  393              self.name = name\n  394          def __repr__(self):\n  ...\n  412      MAXLINES = 23\n  413  \n  414:     def __init__(self, name, data, files=(), dirs=()):\n  415          self.__name = name\n  416          self.__data = data\n  ...\n  527      default is 'ascii', but if you're willing to experiment, you can\n  528      change this.\"\"\"\n  529:     encoding = \"ascii\" # Default value set by _PyUnicode_Init()\n  530      if 0:\n  531          # Enable to support locale aware default string encodings.\n  ...\n  692          execusercustomize()\n  693      # Remove sys.setdefaultencoding() so that users cannot change the\n  694:     # encoding after initialization.  The test for presence is needed when\n  695      # this module is run as a script, because this code is executed twice.\n  696      if hasattr(sys, \"setdefaultencoding\"):\n\nC:\\Users\\johan\\Documents\\GitHub\\sharepad\\venv\\Lib\\sre_parse.py:\n   65  class Pattern:\n   66      # master pattern object.  keeps track of global attributes\n   67:     def __init__(self):\n   68          self.flags = 0\n   69          self.open = []\n   ..\n   76              ogid = self.groupdict.get(name, None)\n   77              if ogid is not None:\n   78:                 raise error, (\"redefinition of group name %s as group %d; \"\n   79                                \"was group %d\" % (repr(name), gid,  ogid))\n   80              self.groupdict[name] = gid\n   ..\n   88  class SubPattern:\n   89      # a subpattern, in intermediate form\n   90:     def __init__(self, pattern, data=None):\n   91          self.pattern = pattern\n   92          if data is None:\n   ..\n  176  \n  177  class Tokenizer:\n  178:     def __init__(self, string):\n  179          self.string = string\n  180          self.index = 0\n\nC:\\Users\\johan\\Documents\\GitHub\\sharepad\\venv\\Lib\\UserDict.py:\n    2  \n    3  class UserDict:\n    4:     def __init__(self, dict=None, **kwargs):\n    5          self.data = {}\n    6          if dict is not None:\n    .\n   89      # a minimum dictionary interface including getitem, setitem, delitem,\n   90      # and keys. Without knowledge of the subclass constructor, the mixin\n   91:     # does not define __init__() or copy().  In addition to the four base\n   92      # methods, progressively more efficiency comes with defining\n   93      # __contains__(), __iter__(), and iteritems().\n   94  \n   95:     # second level definitions support higher levels\n   96      def __iter__(self):\n   97          for k in self.keys():\n   ..\n  106          return self.has_key(key)\n  107  \n  108:     # third level takes advantage of second level definitions\n  109      def iteritems(self):\n  110          for k in self:\n  ...\n  113          return self.__iter__()\n  114  \n  115:     # fourth level uses definitions from lower levels\n  116      def itervalues(self):\n  117          for _, v in self.iteritems():\n\nC:\\Users\\johan\\Documents\\GitHub\\sharepad\\venv\\Lib\\warnings.py:\n  286                          \"line\")\n  287  \n  288:     def __init__(self, message, category, filename, lineno, file=None,\n  289                      line=None):\n  290          local_values = locals()\n  ...\n  316      \"\"\"\n  317  \n  318:     def __init__(self, record=False, module=None):\n  319          \"\"\"Specify whether to record warnings and if an alternative module\n  320          should be used other than sys.modules['warnings'].\n  ...\n  381  \n  382  \n  383: # Module initialization\n  384  _processoptions(sys.warnoptions)\n  385  if not _warnings_defaults:\n\nC:\\Users\\johan\\Documents\\GitHub\\sharepad\\venv\\Lib\\encodings\\bz2_codec.py:\n   53  \n   54  class IncrementalEncoder(codecs.IncrementalEncoder):\n   55:     def __init__(self, errors='strict'):\n   56          assert errors == 'strict'\n   57          self.errors = errors\n   ..\n   69  \n   70  class IncrementalDecoder(codecs.IncrementalDecoder):\n   71:     def __init__(self, errors='strict'):\n   72          assert errors == 'strict'\n   73          self.errors = errors\n\nC:\\Users\\johan\\Documents\\GitHub\\sharepad\\venv\\Lib\\encodings\\charmap.py:\n   23  \n   24  class IncrementalEncoder(codecs.IncrementalEncoder):\n   25:     def __init__(self, errors='strict', mapping=None):\n   26:         codecs.IncrementalEncoder.__init__(self, errors)\n   27          self.mapping = mapping\n   28  \n   ..\n   31  \n   32  class IncrementalDecoder(codecs.IncrementalDecoder):\n   33:     def __init__(self, errors='strict', mapping=None):\n   34:         codecs.IncrementalDecoder.__init__(self, errors)\n   35          self.mapping = mapping\n   36  \n   ..\n   40  class StreamWriter(Codec,codecs.StreamWriter):\n   41  \n   42:     def __init__(self,stream,errors='strict',mapping=None):\n   43:         codecs.StreamWriter.__init__(self,stream,errors)\n   44          self.mapping = mapping\n   45  \n   ..\n   49  class StreamReader(Codec,codecs.StreamReader):\n   50  \n   51:     def __init__(self,stream,errors='strict',mapping=None):\n   52:         codecs.StreamReader.__init__(self,stream,errors)\n   53          self.mapping = mapping\n   54  \n\nC:\\Users\\johan\\Documents\\GitHub\\sharepad\\venv\\Lib\\encodings\\cp1006.py:\n  226      u'\\ufe8e'   #  0xB2 -> ARABIC LETTER ALEF FINAL FORM\n  227      u'\\ufe8f'   #  0xB3 -> ARABIC LETTER BEH ISOLATED FORM\n  228:     u'\\ufe91'   #  0xB4 -> ARABIC LETTER BEH INITIAL FORM\n  229      u'\\ufb56'   #  0xB5 -> ARABIC LETTER PEH ISOLATED FORM\n  230:     u'\\ufb58'   #  0xB6 -> ARABIC LETTER PEH INITIAL FORM\n  231      u'\\ufe93'   #  0xB7 -> ARABIC LETTER TEH MARBUTA ISOLATED FORM\n  232      u'\\ufe95'   #  0xB8 -> ARABIC LETTER TEH ISOLATED FORM\n  233:     u'\\ufe97'   #  0xB9 -> ARABIC LETTER TEH INITIAL FORM\n  234      u'\\ufb66'   #  0xBA -> ARABIC LETTER TTEH ISOLATED FORM\n  235:     u'\\ufb68'   #  0xBB -> ARABIC LETTER TTEH INITIAL FORM\n  236      u'\\ufe99'   #  0xBC -> ARABIC LETTER THEH ISOLATED FORM\n  237:     u'\\ufe9b'   #  0xBD -> ARABIC LETTER THEH INITIAL FORM\n  238      u'\\ufe9d'   #  0xBE -> ARABIC LETTER JEEM ISOLATED FORM\n  239:     u'\\ufe9f'   #  0xBF -> ARABIC LETTER JEEM INITIAL FORM\n  240      u'\\ufb7a'   #  0xC0 -> ARABIC LETTER TCHEH ISOLATED FORM\n  241:     u'\\ufb7c'   #  0xC1 -> ARABIC LETTER TCHEH INITIAL FORM\n  242      u'\\ufea1'   #  0xC2 -> ARABIC LETTER HAH ISOLATED FORM\n  243:     u'\\ufea3'   #  0xC3 -> ARABIC LETTER HAH INITIAL FORM\n  244      u'\\ufea5'   #  0xC4 -> ARABIC LETTER KHAH ISOLATED FORM\n  245:     u'\\ufea7'   #  0xC5 -> ARABIC LETTER KHAH INITIAL FORM\n  246      u'\\ufea9'   #  0xC6 -> ARABIC LETTER DAL ISOLATED FORM\n  247      u'\\ufb84'   #  0xC7 -> ARABIC LETTER DAHAL ISOLATED FORMN\n  ...\n  252      u'\\ufb8a'   #  0xCC -> ARABIC LETTER JEH ISOLATED FORM\n  253      u'\\ufeb1'   #  0xCD -> ARABIC LETTER SEEN ISOLATED FORM\n  254:     u'\\ufeb3'   #  0xCE -> ARABIC LETTER SEEN INITIAL FORM\n  255      u'\\ufeb5'   #  0xCF -> ARABIC LETTER SHEEN ISOLATED FORM\n  256:     u'\\ufeb7'   #  0xD0 -> ARABIC LETTER SHEEN INITIAL FORM\n  257      u'\\ufeb9'   #  0xD1 -> ARABIC LETTER SAD ISOLATED FORM\n  258:     u'\\ufebb'   #  0xD2 -> ARABIC LETTER SAD INITIAL FORM\n  259      u'\\ufebd'   #  0xD3 -> ARABIC LETTER DAD ISOLATED FORM\n  260:     u'\\ufebf'   #  0xD4 -> ARABIC LETTER DAD INITIAL FORM\n  261      u'\\ufec1'   #  0xD5 -> ARABIC LETTER TAH ISOLATED FORM\n  262      u'\\ufec5'   #  0xD6 -> ARABIC LETTER ZAH ISOLATED FORM\n  263      u'\\ufec9'   #  0xD7 -> ARABIC LETTER AIN ISOLATED FORM\n  264      u'\\ufeca'   #  0xD8 -> ARABIC LETTER AIN FINAL FORM\n  265:     u'\\ufecb'   #  0xD9 -> ARABIC LETTER AIN INITIAL FORM\n  266      u'\\ufecc'   #  0xDA -> ARABIC LETTER AIN MEDIAL FORM\n  267      u'\\ufecd'   #  0xDB -> ARABIC LETTER GHAIN ISOLATED FORM\n  268      u'\\ufece'   #  0xDC -> ARABIC LETTER GHAIN FINAL FORM\n  269:     u'\\ufecf'   #  0xDD -> ARABIC LETTER GHAIN INITIAL FORM\n  270      u'\\ufed0'   #  0xDE -> ARABIC LETTER GHAIN MEDIAL FORM\n  271      u'\\ufed1'   #  0xDF -> ARABIC LETTER FEH ISOLATED FORM\n  272:     u'\\ufed3'   #  0xE0 -> ARABIC LETTER FEH INITIAL FORM\n  273      u'\\ufed5'   #  0xE1 -> ARABIC LETTER QAF ISOLATED FORM\n  274:     u'\\ufed7'   #  0xE2 -> ARABIC LETTER QAF INITIAL FORM\n  275      u'\\ufed9'   #  0xE3 -> ARABIC LETTER KAF ISOLATED FORM\n  276:     u'\\ufedb'   #  0xE4 -> ARABIC LETTER KAF INITIAL FORM\n  277      u'\\ufb92'   #  0xE5 -> ARABIC LETTER GAF ISOLATED FORM\n  278:     u'\\ufb94'   #  0xE6 -> ARABIC LETTER GAF INITIAL FORM\n  279      u'\\ufedd'   #  0xE7 -> ARABIC LETTER LAM ISOLATED FORM\n  280:     u'\\ufedf'   #  0xE8 -> ARABIC LETTER LAM INITIAL FORM\n  281      u'\\ufee0'   #  0xE9 -> ARABIC LETTER LAM MEDIAL FORM\n  282      u'\\ufee1'   #  0xEA -> ARABIC LETTER MEEM ISOLATED FORM\n  283:     u'\\ufee3'   #  0xEB -> ARABIC LETTER MEEM INITIAL FORM\n  284      u'\\ufb9e'   #  0xEC -> ARABIC LETTER NOON GHUNNA ISOLATED FORM\n  285      u'\\ufee5'   #  0xED -> ARABIC LETTER NOON ISOLATED FORM\n  286:     u'\\ufee7'   #  0xEE -> ARABIC LETTER NOON INITIAL FORM\n  287      u'\\ufe85'   #  0xEF -> ARABIC LETTER WAW WITH HAMZA ABOVE ISOLATED FORM\n  288      u'\\ufeed'   #  0xF0 -> ARABIC LETTER WAW ISOLATED FORM\n  289      u'\\ufba6'   #  0xF1 -> ARABIC LETTER HEH GOAL ISOLATED FORM\n  290:     u'\\ufba8'   #  0xF2 -> ARABIC LETTER HEH GOAL INITIAL FORM\n  291      u'\\ufba9'   #  0xF3 -> ARABIC LETTER HEH GOAL MEDIAL FORM\n  292      u'\\ufbaa'   #  0xF4 -> ARABIC LETTER HEH DOACHASHMEE ISOLATED FORM\n  ...\n  294      u'\\ufe89'   #  0xF6 -> ARABIC LETTER YEH WITH HAMZA ABOVE ISOLATED FORM\n  295      u'\\ufe8a'   #  0xF7 -> ARABIC LETTER YEH WITH HAMZA ABOVE FINAL FORM\n  296:     u'\\ufe8b'   #  0xF8 -> ARABIC LETTER YEH WITH HAMZA ABOVE INITIAL FORM\n  297      u'\\ufef1'   #  0xF9 -> ARABIC LETTER YEH ISOLATED FORM\n  298      u'\\ufef2'   #  0xFA -> ARABIC LETTER YEH FINAL FORM\n  299:     u'\\ufef3'   #  0xFB -> ARABIC LETTER YEH INITIAL FORM\n  300      u'\\ufbb0'   #  0xFC -> ARABIC LETTER YEH BARREE WITH HAMZA ABOVE ISOLATED FORM\n  301      u'\\ufbae'   #  0xFD -> ARABIC LETTER YEH BARREE ISOLATED FORM\n\nC:\\Users\\johan\\Documents\\GitHub\\sharepad\\venv\\Lib\\encodings\\cp437.py:\n  154      0x00ea: 0x03a9,     #  GREEK CAPITAL LETTER OMEGA\n  155      0x00eb: 0x03b4,     #  GREEK SMALL LETTER DELTA\n  156:     0x00ec: 0x221e,     #  INFINITY\n  157      0x00ed: 0x03c6,     #  GREEK SMALL LETTER PHI\n  158      0x00ee: 0x03b5,     #  GREEK SMALL LETTER EPSILON\n  ...\n  415      u'\\u03a9'   #  0x00ea -> GREEK CAPITAL LETTER OMEGA\n  416      u'\\u03b4'   #  0x00eb -> GREEK SMALL LETTER DELTA\n  417:     u'\\u221e'   #  0x00ec -> INFINITY\n  418      u'\\u03c6'   #  0x00ed -> GREEK SMALL LETTER PHI\n  419      u'\\u03b5'   #  0x00ee -> GREEK SMALL LETTER EPSILON\n  ...\n  638      0x2219: 0x00f9,     #  BULLET OPERATOR\n  639      0x221a: 0x00fb,     #  SQUARE ROOT\n  640:     0x221e: 0x00ec,     #  INFINITY\n  641      0x2229: 0x00ef,     #  INTERSECTION\n  642      0x2248: 0x00f7,     #  ALMOST EQUAL TO\n\nC:\\Users\\johan\\Documents\\GitHub\\sharepad\\venv\\Lib\\encodings\\cp860.py:\n  154      0x00ea: 0x03a9,     #  GREEK CAPITAL LETTER OMEGA\n  155      0x00eb: 0x03b4,     #  GREEK SMALL LETTER DELTA\n  156:     0x00ec: 0x221e,     #  INFINITY\n  157      0x00ed: 0x03c6,     #  GREEK SMALL LETTER PHI\n  158      0x00ee: 0x03b5,     #  GREEK SMALL LETTER EPSILON\n  ...\n  415      u'\\u03a9'   #  0x00ea -> GREEK CAPITAL LETTER OMEGA\n  416      u'\\u03b4'   #  0x00eb -> GREEK SMALL LETTER DELTA\n  417:     u'\\u221e'   #  0x00ec -> INFINITY\n  418      u'\\u03c6'   #  0x00ed -> GREEK SMALL LETTER PHI\n  419      u'\\u03b5'   #  0x00ee -> GREEK SMALL LETTER EPSILON\n  ...\n  639      0x2219: 0x00f9,     #  BULLET OPERATOR\n  640      0x221a: 0x00fb,     #  SQUARE ROOT\n  641:     0x221e: 0x00ec,     #  INFINITY\n  642      0x2229: 0x00ef,     #  INTERSECTION\n  643      0x2248: 0x00f7,     #  ALMOST EQUAL TO\n\nC:\\Users\\johan\\Documents\\GitHub\\sharepad\\venv\\Lib\\encodings\\cp861.py:\n  154      0x00ea: 0x03a9,     #  GREEK CAPITAL LETTER OMEGA\n  155      0x00eb: 0x03b4,     #  GREEK SMALL LETTER DELTA\n  156:     0x00ec: 0x221e,     #  INFINITY\n  157      0x00ed: 0x03c6,     #  GREEK SMALL LETTER PHI\n  158      0x00ee: 0x03b5,     #  GREEK SMALL LETTER EPSILON\n  ...\n  415      u'\\u03a9'   #  0x00ea -> GREEK CAPITAL LETTER OMEGA\n  416      u'\\u03b4'   #  0x00eb -> GREEK SMALL LETTER DELTA\n  417:     u'\\u221e'   #  0x00ec -> INFINITY\n  418      u'\\u03c6'   #  0x00ed -> GREEK SMALL LETTER PHI\n  419      u'\\u03b5'   #  0x00ee -> GREEK SMALL LETTER EPSILON\n  ...\n  638      0x2219: 0x00f9,     #  BULLET OPERATOR\n  639      0x221a: 0x00fb,     #  SQUARE ROOT\n  640:     0x221e: 0x00ec,     #  INFINITY\n  641      0x2229: 0x00ef,     #  INTERSECTION\n  642      0x2248: 0x00f7,     #  ALMOST EQUAL TO\n\nC:\\Users\\johan\\Documents\\GitHub\\sharepad\\venv\\Lib\\encodings\\cp862.py:\n  154      0x00ea: 0x03a9,     #  GREEK CAPITAL LETTER OMEGA\n  155      0x00eb: 0x03b4,     #  GREEK SMALL LETTER DELTA\n  156:     0x00ec: 0x221e,     #  INFINITY\n  157      0x00ed: 0x03c6,     #  GREEK SMALL LETTER PHI\n  158      0x00ee: 0x03b5,     #  GREEK SMALL LETTER EPSILON\n  ...\n  415      u'\\u03a9'   #  0x00ea -> GREEK CAPITAL LETTER OMEGA\n  416      u'\\u03b4'   #  0x00eb -> GREEK SMALL LETTER DELTA\n  417:     u'\\u221e'   #  0x00ec -> INFINITY\n  418      u'\\u03c6'   #  0x00ed -> GREEK SMALL LETTER PHI\n  419      u'\\u03b5'   #  0x00ee -> GREEK SMALL LETTER EPSILON\n  ...\n  638      0x2219: 0x00f9,     #  BULLET OPERATOR\n  639      0x221a: 0x00fb,     #  SQUARE ROOT\n  640:     0x221e: 0x00ec,     #  INFINITY\n  641      0x2229: 0x00ef,     #  INTERSECTION\n  642      0x2248: 0x00f7,     #  ALMOST EQUAL TO\n\nC:\\Users\\johan\\Documents\\GitHub\\sharepad\\venv\\Lib\\encodings\\cp863.py:\n  154      0x00ea: 0x03a9,     #  GREEK CAPITAL LETTER OMEGA\n  155      0x00eb: 0x03b4,     #  GREEK SMALL LETTER DELTA\n  156:     0x00ec: 0x221e,     #  INFINITY\n  157      0x00ed: 0x03c6,     #  GREEK SMALL LETTER PHI\n  158      0x00ee: 0x03b5,     #  GREEK SMALL LETTER EPSILON\n  ...\n  415      u'\\u03a9'   #  0x00ea -> GREEK CAPITAL LETTER OMEGA\n  416      u'\\u03b4'   #  0x00eb -> GREEK SMALL LETTER DELTA\n  417:     u'\\u221e'   #  0x00ec -> INFINITY\n  418      u'\\u03c6'   #  0x00ed -> GREEK SMALL LETTER PHI\n  419      u'\\u03b5'   #  0x00ee -> GREEK SMALL LETTER EPSILON\n  ...\n  638      0x2219: 0x00f9,     #  BULLET OPERATOR\n  639      0x221a: 0x00fb,     #  SQUARE ROOT\n  640:     0x221e: 0x00ec,     #  INFINITY\n  641      0x2229: 0x00ef,     #  INTERSECTION\n  642      0x2248: 0x00f7,     #  ALMOST EQUAL TO\n\nC:\\Users\\johan\\Documents\\GitHub\\sharepad\\venv\\Lib\\encodings\\cp864.py:\n   64      0x008f: 0x2518,     #  FORMS LIGHT UP AND LEFT\n   65      0x0090: 0x03b2,     #  GREEK SMALL BETA\n   66:     0x0091: 0x221e,     #  INFINITY\n   67      0x0092: 0x03c6,     #  GREEK SMALL PHI\n   68      0x0093: 0x00b1,     #  PLUS-OR-MINUS SIGN\n   ..\n  114      0x00c4: 0xfe85,     #  ARABIC LETTER WAW WITH HAMZA ABOVE ISOLATED FORM\n  115      0x00c5: 0xfeca,     #  ARABIC LETTER AIN FINAL FORM\n  116:     0x00c6: 0xfe8b,     #  ARABIC LETTER YEH WITH HAMZA ABOVE INITIAL FORM\n  117      0x00c7: 0xfe8d,     #  ARABIC LETTER ALEF ISOLATED FORM\n  118:     0x00c8: 0xfe91,     #  ARABIC LETTER BEH INITIAL FORM\n  119      0x00c9: 0xfe93,     #  ARABIC LETTER TEH MARBUTA ISOLATED FORM\n  120:     0x00ca: 0xfe97,     #  ARABIC LETTER TEH INITIAL FORM\n  121:     0x00cb: 0xfe9b,     #  ARABIC LETTER THEH INITIAL FORM\n  122:     0x00cc: 0xfe9f,     #  ARABIC LETTER JEEM INITIAL FORM\n  123:     0x00cd: 0xfea3,     #  ARABIC LETTER HAH INITIAL FORM\n  124:     0x00ce: 0xfea7,     #  ARABIC LETTER KHAH INITIAL FORM\n  125      0x00cf: 0xfea9,     #  ARABIC LETTER DAL ISOLATED FORM\n  126      0x00d0: 0xfeab,     #  ARABIC LETTER THAL ISOLATED FORM\n  127      0x00d1: 0xfead,     #  ARABIC LETTER REH ISOLATED FORM\n  128      0x00d2: 0xfeaf,     #  ARABIC LETTER ZAIN ISOLATED FORM\n  129:     0x00d3: 0xfeb3,     #  ARABIC LETTER SEEN INITIAL FORM\n  130:     0x00d4: 0xfeb7,     #  ARABIC LETTER SHEEN INITIAL FORM\n  131:     0x00d5: 0xfebb,     #  ARABIC LETTER SAD INITIAL FORM\n  132:     0x00d6: 0xfebf,     #  ARABIC LETTER DAD INITIAL FORM\n  133      0x00d7: 0xfec1,     #  ARABIC LETTER TAH ISOLATED FORM\n  134      0x00d8: 0xfec5,     #  ARABIC LETTER ZAH ISOLATED FORM\n  135:     0x00d9: 0xfecb,     #  ARABIC LETTER AIN INITIAL FORM\n  136:     0x00da: 0xfecf,     #  ARABIC LETTER GHAIN INITIAL FORM\n  137      0x00db: 0x00a6,     #  BROKEN VERTICAL BAR\n  138      0x00dc: 0x00ac,     #  NOT SIGN\n  ...\n  141      0x00df: 0xfec9,     #  ARABIC LETTER AIN ISOLATED FORM\n  142      0x00e0: 0x0640,     #  ARABIC TATWEEL\n  143:     0x00e1: 0xfed3,     #  ARABIC LETTER FEH INITIAL FORM\n  144:     0x00e2: 0xfed7,     #  ARABIC LETTER QAF INITIAL FORM\n  145:     0x00e3: 0xfedb,     #  ARABIC LETTER KAF INITIAL FORM\n  146:     0x00e4: 0xfedf,     #  ARABIC LETTER LAM INITIAL FORM\n  147:     0x00e5: 0xfee3,     #  ARABIC LETTER MEEM INITIAL FORM\n  148:     0x00e6: 0xfee7,     #  ARABIC LETTER NOON INITIAL FORM\n  149:     0x00e7: 0xfeeb,     #  ARABIC LETTER HEH INITIAL FORM\n  150      0x00e8: 0xfeed,     #  ARABIC LETTER WAW ISOLATED FORM\n  151      0x00e9: 0xfeef,     #  ARABIC LETTER ALEF MAKSURA ISOLATED FORM\n  152:     0x00ea: 0xfef3,     #  ARABIC LETTER YEH INITIAL FORM\n  153      0x00eb: 0xfebd,     #  ARABIC LETTER DAD ISOLATED FORM\n  154      0x00ec: 0xfecc,     #  ARABIC LETTER AIN MEDIAL FORM\n  ...\n  322      u'\\u2518'   #  0x008f -> FORMS LIGHT UP AND LEFT\n  323      u'\\u03b2'   #  0x0090 -> GREEK SMALL BETA\n  324:     u'\\u221e'   #  0x0091 -> INFINITY\n  325      u'\\u03c6'   #  0x0092 -> GREEK SMALL PHI\n  326      u'\\xb1'     #  0x0093 -> PLUS-OR-MINUS SIGN\n  ...\n  375      u'\\ufe85'   #  0x00c4 -> ARABIC LETTER WAW WITH HAMZA ABOVE ISOLATED FORM\n  376      u'\\ufeca'   #  0x00c5 -> ARABIC LETTER AIN FINAL FORM\n  377:     u'\\ufe8b'   #  0x00c6 -> ARABIC LETTER YEH WITH HAMZA ABOVE INITIAL FORM\n  378      u'\\ufe8d'   #  0x00c7 -> ARABIC LETTER ALEF ISOLATED FORM\n  379:     u'\\ufe91'   #  0x00c8 -> ARABIC LETTER BEH INITIAL FORM\n  380      u'\\ufe93'   #  0x00c9 -> ARABIC LETTER TEH MARBUTA ISOLATED FORM\n  381:     u'\\ufe97'   #  0x00ca -> ARABIC LETTER TEH INITIAL FORM\n  382:     u'\\ufe9b'   #  0x00cb -> ARABIC LETTER THEH INITIAL FORM\n  383:     u'\\ufe9f'   #  0x00cc -> ARABIC LETTER JEEM INITIAL FORM\n  384:     u'\\ufea3'   #  0x00cd -> ARABIC LETTER HAH INITIAL FORM\n  385:     u'\\ufea7'   #  0x00ce -> ARABIC LETTER KHAH INITIAL FORM\n  386      u'\\ufea9'   #  0x00cf -> ARABIC LETTER DAL ISOLATED FORM\n  387      u'\\ufeab'   #  0x00d0 -> ARABIC LETTER THAL ISOLATED FORM\n  388      u'\\ufead'   #  0x00d1 -> ARABIC LETTER REH ISOLATED FORM\n  389      u'\\ufeaf'   #  0x00d2 -> ARABIC LETTER ZAIN ISOLATED FORM\n  390:     u'\\ufeb3'   #  0x00d3 -> ARABIC LETTER SEEN INITIAL FORM\n  391:     u'\\ufeb7'   #  0x00d4 -> ARABIC LETTER SHEEN INITIAL FORM\n  392:     u'\\ufebb'   #  0x00d5 -> ARABIC LETTER SAD INITIAL FORM\n  393:     u'\\ufebf'   #  0x00d6 -> ARABIC LETTER DAD INITIAL FORM\n  394      u'\\ufec1'   #  0x00d7 -> ARABIC LETTER TAH ISOLATED FORM\n  395      u'\\ufec5'   #  0x00d8 -> ARABIC LETTER ZAH ISOLATED FORM\n  396:     u'\\ufecb'   #  0x00d9 -> ARABIC LETTER AIN INITIAL FORM\n  397:     u'\\ufecf'   #  0x00da -> ARABIC LETTER GHAIN INITIAL FORM\n  398      u'\\xa6'     #  0x00db -> BROKEN VERTICAL BAR\n  399      u'\\xac'     #  0x00dc -> NOT SIGN\n  ...\n  402      u'\\ufec9'   #  0x00df -> ARABIC LETTER AIN ISOLATED FORM\n  403      u'\\u0640'   #  0x00e0 -> ARABIC TATWEEL\n  404:     u'\\ufed3'   #  0x00e1 -> ARABIC LETTER FEH INITIAL FORM\n  405:     u'\\ufed7'   #  0x00e2 -> ARABIC LETTER QAF INITIAL FORM\n  406:     u'\\ufedb'   #  0x00e3 -> ARABIC LETTER KAF INITIAL FORM\n  407:     u'\\ufedf'   #  0x00e4 -> ARABIC LETTER LAM INITIAL FORM\n  408:     u'\\ufee3'   #  0x00e5 -> ARABIC LETTER MEEM INITIAL FORM\n  409:     u'\\ufee7'   #  0x00e6 -> ARABIC LETTER NOON INITIAL FORM\n  410:     u'\\ufeeb'   #  0x00e7 -> ARABIC LETTER HEH INITIAL FORM\n  411      u'\\ufeed'   #  0x00e8 -> ARABIC LETTER WAW ISOLATED FORM\n  412      u'\\ufeef'   #  0x00e9 -> ARABIC LETTER ALEF MAKSURA ISOLATED FORM\n  413:     u'\\ufef3'   #  0x00ea -> ARABIC LETTER YEH INITIAL FORM\n  414      u'\\ufebd'   #  0x00eb -> ARABIC LETTER DAD ISOLATED FORM\n  415      u'\\ufecc'   #  0x00ec -> ARABIC LETTER AIN MEDIAL FORM\n  ...\n  601      0x2219: 0x0082,     #  BULLET OPERATOR\n  602      0x221a: 0x0083,     #  SQUARE ROOT\n  603:     0x221e: 0x0091,     #  INFINITY\n  604      0x2248: 0x0096,     #  ALMOST EQUAL TO\n  605      0x2500: 0x0085,     #  FORMS LIGHT HORIZONTAL\n  ...\n  623      0xfe84: 0x00a5,     #  ARABIC LETTER ALEF WITH HAMZA ABOVE FINAL FORM\n  624      0xfe85: 0x00c4,     #  ARABIC LETTER WAW WITH HAMZA ABOVE ISOLATED FORM\n  625:     0xfe8b: 0x00c6,     #  ARABIC LETTER YEH WITH HAMZA ABOVE INITIAL FORM\n  626      0xfe8d: 0x00c7,     #  ARABIC LETTER ALEF ISOLATED FORM\n  627      0xfe8e: 0x00a8,     #  ARABIC LETTER ALEF FINAL FORM\n  628      0xfe8f: 0x00a9,     #  ARABIC LETTER BEH ISOLATED FORM\n  629:     0xfe91: 0x00c8,     #  ARABIC LETTER BEH INITIAL FORM\n  630      0xfe93: 0x00c9,     #  ARABIC LETTER TEH MARBUTA ISOLATED FORM\n  631      0xfe95: 0x00aa,     #  ARABIC LETTER TEH ISOLATED FORM\n  632:     0xfe97: 0x00ca,     #  ARABIC LETTER TEH INITIAL FORM\n  633      0xfe99: 0x00ab,     #  ARABIC LETTER THEH ISOLATED FORM\n  634:     0xfe9b: 0x00cb,     #  ARABIC LETTER THEH INITIAL FORM\n  635      0xfe9d: 0x00ad,     #  ARABIC LETTER JEEM ISOLATED FORM\n  636:     0xfe9f: 0x00cc,     #  ARABIC LETTER JEEM INITIAL FORM\n  637      0xfea1: 0x00ae,     #  ARABIC LETTER HAH ISOLATED FORM\n  638:     0xfea3: 0x00cd,     #  ARABIC LETTER HAH INITIAL FORM\n  639      0xfea5: 0x00af,     #  ARABIC LETTER KHAH ISOLATED FORM\n  640:     0xfea7: 0x00ce,     #  ARABIC LETTER KHAH INITIAL FORM\n  641      0xfea9: 0x00cf,     #  ARABIC LETTER DAL ISOLATED FORM\n  642      0xfeab: 0x00d0,     #  ARABIC LETTER THAL ISOLATED FORM\n  ...\n  644      0xfeaf: 0x00d2,     #  ARABIC LETTER ZAIN ISOLATED FORM\n  645      0xfeb1: 0x00bc,     #  ARABIC LETTER SEEN ISOLATED FORM\n  646:     0xfeb3: 0x00d3,     #  ARABIC LETTER SEEN INITIAL FORM\n  647      0xfeb5: 0x00bd,     #  ARABIC LETTER SHEEN ISOLATED FORM\n  648:     0xfeb7: 0x00d4,     #  ARABIC LETTER SHEEN INITIAL FORM\n  649      0xfeb9: 0x00be,     #  ARABIC LETTER SAD ISOLATED FORM\n  650:     0xfebb: 0x00d5,     #  ARABIC LETTER SAD INITIAL FORM\n  651      0xfebd: 0x00eb,     #  ARABIC LETTER DAD ISOLATED FORM\n  652:     0xfebf: 0x00d6,     #  ARABIC LETTER DAD INITIAL FORM\n  653      0xfec1: 0x00d7,     #  ARABIC LETTER TAH ISOLATED FORM\n  654      0xfec5: 0x00d8,     #  ARABIC LETTER ZAH ISOLATED FORM\n  655      0xfec9: 0x00df,     #  ARABIC LETTER AIN ISOLATED FORM\n  656      0xfeca: 0x00c5,     #  ARABIC LETTER AIN FINAL FORM\n  657:     0xfecb: 0x00d9,     #  ARABIC LETTER AIN INITIAL FORM\n  658      0xfecc: 0x00ec,     #  ARABIC LETTER AIN MEDIAL FORM\n  659      0xfecd: 0x00ee,     #  ARABIC LETTER GHAIN ISOLATED FORM\n  660      0xfece: 0x00ed,     #  ARABIC LETTER GHAIN FINAL FORM\n  661:     0xfecf: 0x00da,     #  ARABIC LETTER GHAIN INITIAL FORM\n  662      0xfed0: 0x00f7,     #  ARABIC LETTER GHAIN MEDIAL FORM\n  663      0xfed1: 0x00ba,     #  ARABIC LETTER FEH ISOLATED FORM\n  664:     0xfed3: 0x00e1,     #  ARABIC LETTER FEH INITIAL FORM\n  665      0xfed5: 0x00f8,     #  ARABIC LETTER QAF ISOLATED FORM\n  666:     0xfed7: 0x00e2,     #  ARABIC LETTER QAF INITIAL FORM\n  667      0xfed9: 0x00fc,     #  ARABIC LETTER KAF ISOLATED FORM\n  668:     0xfedb: 0x00e3,     #  ARABIC LETTER KAF INITIAL FORM\n  669      0xfedd: 0x00fb,     #  ARABIC LETTER LAM ISOLATED FORM\n  670:     0xfedf: 0x00e4,     #  ARABIC LETTER LAM INITIAL FORM\n  671      0xfee1: 0x00ef,     #  ARABIC LETTER MEEM ISOLATED FORM\n  672:     0xfee3: 0x00e5,     #  ARABIC LETTER MEEM INITIAL FORM\n  673      0xfee5: 0x00f2,     #  ARABIC LETTER NOON ISOLATED FORM\n  674:     0xfee7: 0x00e6,     #  ARABIC LETTER NOON INITIAL FORM\n  675      0xfee9: 0x00f3,     #  ARABIC LETTER HEH ISOLATED FORM\n  676:     0xfeeb: 0x00e7,     #  ARABIC LETTER HEH INITIAL FORM\n  677      0xfeec: 0x00f4,     #  ARABIC LETTER HEH MEDIAL FORM\n  678      0xfeed: 0x00e8,     #  ARABIC LETTER WAW ISOLATED FORM\n  ...\n  681      0xfef1: 0x00fd,     #  ARABIC LETTER YEH ISOLATED FORM\n  682      0xfef2: 0x00f6,     #  ARABIC LETTER YEH FINAL FORM\n  683:     0xfef3: 0x00ea,     #  ARABIC LETTER YEH INITIAL FORM\n  684      0xfef5: 0x00f9,     #  ARABIC LIGATURE LAM WITH ALEF WITH MADDA ABOVE ISOLATED FORM\n  685      0xfef6: 0x00fa,     #  ARABIC LIGATURE LAM WITH ALEF WITH MADDA ABOVE FINAL FORM\n\nC:\\Users\\johan\\Documents\\GitHub\\sharepad\\venv\\Lib\\encodings\\cp865.py:\n  154      0x00ea: 0x03a9,     #  GREEK CAPITAL LETTER OMEGA\n  155      0x00eb: 0x03b4,     #  GREEK SMALL LETTER DELTA\n  156:     0x00ec: 0x221e,     #  INFINITY\n  157      0x00ed: 0x03c6,     #  GREEK SMALL LETTER PHI\n  158      0x00ee: 0x03b5,     #  GREEK SMALL LETTER EPSILON\n  ...\n  415      u'\\u03a9'   #  0x00ea -> GREEK CAPITAL LETTER OMEGA\n  416      u'\\u03b4'   #  0x00eb -> GREEK SMALL LETTER DELTA\n  417:     u'\\u221e'   #  0x00ec -> INFINITY\n  418      u'\\u03c6'   #  0x00ed -> GREEK SMALL LETTER PHI\n  419      u'\\u03b5'   #  0x00ee -> GREEK SMALL LETTER EPSILON\n  ...\n  638      0x2219: 0x00f9,     #  BULLET OPERATOR\n  639      0x221a: 0x00fb,     #  SQUARE ROOT\n  640:     0x221e: 0x00ec,     #  INFINITY\n  641      0x2229: 0x00ef,     #  INTERSECTION\n  642      0x2248: 0x00f7,     #  ALMOST EQUAL TO\n\nC:\\Users\\johan\\Documents\\GitHub\\sharepad\\venv\\Lib\\encodings\\mac_croatian.py:\n  222      u'\\u017d'   #  0xAE -> LATIN CAPITAL LETTER Z WITH CARON\n  223      u'\\xd8'     #  0xAF -> LATIN CAPITAL LETTER O WITH STROKE\n  224:     u'\\u221e'   #  0xB0 -> INFINITY\n  225      u'\\xb1'     #  0xB1 -> PLUS-MINUS SIGN\n  226      u'\\u2264'   #  0xB2 -> LESS-THAN OR EQUAL TO\n\nC:\\Users\\johan\\Documents\\GitHub\\sharepad\\venv\\Lib\\encodings\\mac_cyrillic.py:\n  222      u'\\u0403'   #  0xAE -> CYRILLIC CAPITAL LETTER GJE\n  223      u'\\u0453'   #  0xAF -> CYRILLIC SMALL LETTER GJE\n  224:     u'\\u221e'   #  0xB0 -> INFINITY\n  225      u'\\xb1'     #  0xB1 -> PLUS-MINUS SIGN\n  226      u'\\u2264'   #  0xB2 -> LESS-THAN OR EQUAL TO\n\nC:\\Users\\johan\\Documents\\GitHub\\sharepad\\venv\\Lib\\encodings\\mac_iceland.py:\n  222      u'\\xc6'     #  0xAE -> LATIN CAPITAL LETTER AE\n  223      u'\\xd8'     #  0xAF -> LATIN CAPITAL LETTER O WITH STROKE\n  224:     u'\\u221e'   #  0xB0 -> INFINITY\n  225      u'\\xb1'     #  0xB1 -> PLUS-MINUS SIGN\n  226      u'\\u2264'   #  0xB2 -> LESS-THAN OR EQUAL TO\n\nC:\\Users\\johan\\Documents\\GitHub\\sharepad\\venv\\Lib\\encodings\\mac_roman.py:\n  222      u'\\xc6'     #  0xAE -> LATIN CAPITAL LETTER AE\n  223      u'\\xd8'     #  0xAF -> LATIN CAPITAL LETTER O WITH STROKE\n  224:     u'\\u221e'   #  0xB0 -> INFINITY\n  225      u'\\xb1'     #  0xB1 -> PLUS-MINUS SIGN\n  226      u'\\u2264'   #  0xB2 -> LESS-THAN OR EQUAL TO\n\nC:\\Users\\johan\\Documents\\GitHub\\sharepad\\venv\\Lib\\encodings\\mac_romanian.py:\n  222      u'\\u0102'   #  0xAE -> LATIN CAPITAL LETTER A WITH BREVE\n  223      u'\\u0218'   #  0xAF -> LATIN CAPITAL LETTER S WITH COMMA BELOW # for Unicode 3.0 and later\n  224:     u'\\u221e'   #  0xB0 -> INFINITY\n  225      u'\\xb1'     #  0xB1 -> PLUS-MINUS SIGN\n  226      u'\\u2264'   #  0xB2 -> LESS-THAN OR EQUAL TO\n\nC:\\Users\\johan\\Documents\\GitHub\\sharepad\\venv\\Lib\\encodings\\mac_turkish.py:\n  222      u'\\xc6'     #  0xAE -> LATIN CAPITAL LETTER AE\n  223      u'\\xd8'     #  0xAF -> LATIN CAPITAL LETTER O WITH STROKE\n  224:     u'\\u221e'   #  0xB0 -> INFINITY\n  225      u'\\xb1'     #  0xB1 -> PLUS-MINUS SIGN\n  226      u'\\u2264'   #  0xB2 -> LESS-THAN OR EQUAL TO\n\nC:\\Users\\johan\\Documents\\GitHub\\sharepad\\venv\\Lib\\encodings\\punycode.py:\n  108  def generate_integers(baselen, deltas):\n  109      \"\"\"3.4 Bias adaptation\"\"\"\n  110:     # Punycode parameters: initial bias = 72, damp = 700, skew = 38\n  111      result = []\n  112      bias = 72\n\nC:\\Users\\johan\\Documents\\GitHub\\sharepad\\venv\\Lib\\encodings\\utf_16.py:\n   17  \n   18  class IncrementalEncoder(codecs.IncrementalEncoder):\n   19:     def __init__(self, errors='strict'):\n   20:         codecs.IncrementalEncoder.__init__(self, errors)\n   21          self.encoder = None\n   22  \n   ..\n   52  \n   53  class IncrementalDecoder(codecs.BufferedIncrementalDecoder):\n   54:     def __init__(self, errors='strict'):\n   55:         codecs.BufferedIncrementalDecoder.__init__(self, errors)\n   56          self.decoder = None\n   57  \n   ..\n   74  \n   75  class StreamWriter(codecs.StreamWriter):\n   76:     def __init__(self, stream, errors='strict'):\n   77:         codecs.StreamWriter.__init__(self, stream, errors)\n   78          self.encoder = None\n   79  \n\nC:\\Users\\johan\\Documents\\GitHub\\sharepad\\venv\\Lib\\encodings\\utf_32.py:\n   12  \n   13  class IncrementalEncoder(codecs.IncrementalEncoder):\n   14:     def __init__(self, errors='strict'):\n   15:         codecs.IncrementalEncoder.__init__(self, errors)\n   16          self.encoder = None\n   17  \n   ..\n   47  \n   48  class IncrementalDecoder(codecs.BufferedIncrementalDecoder):\n   49:     def __init__(self, errors='strict'):\n   50:         codecs.BufferedIncrementalDecoder.__init__(self, errors)\n   51          self.decoder = None\n   52  \n   ..\n   98  \n   99  class StreamWriter(codecs.StreamWriter):\n  100:     def __init__(self, stream, errors='strict'):\n  101          self.encoder = None\n  102:         codecs.StreamWriter.__init__(self, stream, errors)\n  103  \n  104      def reset(self):\n\nC:\\Users\\johan\\Documents\\GitHub\\sharepad\\venv\\Lib\\encodings\\utf_8_sig.py:\n   24  \n   25  class IncrementalEncoder(codecs.IncrementalEncoder):\n   26:     def __init__(self, errors='strict'):\n   27:         codecs.IncrementalEncoder.__init__(self, errors)\n   28          self.first = 1\n   29  \n   ..\n   46  \n   47  class IncrementalDecoder(codecs.BufferedIncrementalDecoder):\n   48:     def __init__(self, errors='strict'):\n   49:         codecs.BufferedIncrementalDecoder.__init__(self, errors)\n   50          self.first = True\n   51  \n\nC:\\Users\\johan\\Documents\\GitHub\\sharepad\\venv\\Lib\\encodings\\zlib_codec.py:\n   52  \n   53  class IncrementalEncoder(codecs.IncrementalEncoder):\n   54:     def __init__(self, errors='strict'):\n   55          assert errors == 'strict'\n   56          self.errors = errors\n   ..\n   68  \n   69  class IncrementalDecoder(codecs.IncrementalDecoder):\n   70:     def __init__(self, errors='strict'):\n   71          assert errors == 'strict'\n   72          self.errors = errors\n\nC:\\Users\\johan\\Documents\\GitHub\\sharepad\\venv\\Lib\\site-packages\\flask\\app.py:\n   38      request_tearing_down, appcontext_tearing_down\n   39  \n   40: # a lock used for logger initialization\n   41  _logger_lock = Lock()\n   42  \n   ..\n   74      package or the folder the module is contained in depending on if the\n   75      package parameter resolves to an actual python package (a folder with\n   76:     an `__init__.py` file inside) or a standard module (just a `.py` file).\n   77  \n   78      For more information about resource loading, see :func:`open_resource`.\n   79  \n   80      Usually you create a :class:`Flask` instance in your main module or\n   81:     in the `__init__.py` file of your package like this::\n   82  \n   83          from flask import Flask\n   ..\n  285      session_interface = SecureCookieSessionInterface()\n  286  \n  287:     def __init__(self, import_name, static_path=None, static_url_path=None,\n  288                   static_folder='static', template_folder='templates',\n  289                   instance_path=None, instance_relative_config=False):\n  290:         _PackageBoundObject.__init__(self, import_name,\n  291                                       template_folder=template_folder)\n  292          if static_path is not None:\n  ...\n  561          rv = self.create_jinja_environment()\n  562  \n  563:         # Hack to support the init_jinja_globals method which is supported\n  564          # until 1.0 but has an API deficiency.\n  565:         if getattr(self.init_jinja_globals, 'im_func', None) is not \\\n  566:            Flask.init_jinja_globals.im_func:\n  567              from warnings import warn\n  568              warn(DeprecationWarning('This flask class uses a customized '\n  569:                 'init_jinja_globals() method which is deprecated. '\n  570                  'Move the code from that method into the '\n  571                  'create_jinja_environment() method instead.'))\n  572              self.__dict__['jinja_env'] = rv\n  573:             self.init_jinja_globals()\n  574  \n  575          return rv\n  ...\n  625          \"\"\"Creates the Jinja2 environment based on :attr:`jinja_options`\n  626          and :meth:`select_jinja_autoescape`.  Since 0.7 this also adds\n  627:         the Jinja2 globals and filters after initialization.  Override\n  628          this function to customize the behavior.\n  629  \n  ...\n  654          return DispatchingJinjaLoader(self)\n  655  \n  656:     def init_jinja_globals(self):\n  657:         \"\"\"Deprecated.  Used to initialize the Jinja2 globals.\n  658  \n  659          .. versionadded:: 0.5\n\nC:\\Users\\johan\\Documents\\GitHub\\sharepad\\venv\\Lib\\site-packages\\flask\\blueprints.py:\n   22      \"\"\"\n   23  \n   24:     def __init__(self, blueprint, app, options, first_registration):\n   25          #: a reference to the current application\n   26          self.app = app\n   ..\n   90      _got_registered_once = False\n   91  \n   92:     def __init__(self, name, import_name, static_folder=None,\n   93                   static_url_path=None, template_folder=None,\n   94                   url_prefix=None, subdomain=None, url_defaults=None):\n   95:         _PackageBoundObject.__init__(self, import_name, template_folder)\n   96          self.name = name\n   97          self.url_prefix = url_prefix\n\nC:\\Users\\johan\\Documents\\GitHub\\sharepad\\venv\\Lib\\site-packages\\flask\\config.py:\n   22      \"\"\"Makes an attribute forward to the config\"\"\"\n   23  \n   24:     def __init__(self, name, get_converter=None):\n   25          self.__name__ = name\n   26          self.get_converter = get_converter\n   ..\n   82      \"\"\"\n   83  \n   84:     def __init__(self, root_path, defaults=None):\n   85:         dict.__init__(self, defaults or {})\n   86          self.root_path = root_path\n   87  \n\nC:\\Users\\johan\\Documents\\GitHub\\sharepad\\venv\\Lib\\site-packages\\flask\\ctx.py:\n   58          class User(db.Model):\n   59  \n   60:             def __init__(self, username, remote_addr=None):\n   61                  self.username = username\n   62                  if remote_addr is None and has_request_context():\n   ..\n   69          class User(db.Model):\n   70  \n   71:             def __init__(self, username, remote_addr=None):\n   72                  self.username = username\n   73                  if remote_addr is None and request:\n   ..\n   99      \"\"\"\n  100  \n  101:     def __init__(self, app):\n  102          self.app = app\n  103          self.url_adapter = app.create_url_adapter(None)\n  ...\n  161      \"\"\"\n  162  \n  163:     def __init__(self, app, environ):\n  164          self.app = app\n  165          self.request = app.request_class(environ)\n\nC:\\Users\\johan\\Documents\\GitHub\\sharepad\\venv\\Lib\\site-packages\\flask\\debughelpers.py:\n   16      \"\"\"\n   17  \n   18:     def __init__(self, request, key):\n   19          form_matches = request.form.getlist(key)\n   20          buf = ['You tried to access the file \"%s\" in the request.files '\n   ..\n   40      \"\"\"\n   41  \n   42:     def __init__(self, request):\n   43          exc = request.routing_exception\n   44          buf = ['A request was sent to this URL (%s) but a redirect was '\n   ..\n   58                     request.method)\n   59          buf.append('\\n\\nNote: this exception is only raised in debug mode')\n   60:         AssertionError.__init__(self, ''.join(buf).encode('utf-8'))\n   61  \n   62  \n\nC:\\Users\\johan\\Documents\\GitHub\\sharepad\\venv\\Lib\\site-packages\\flask\\exthook.py:\n   30      \"\"\"\n   31  \n   32:     def __init__(self, module_choices, wrapper_module):\n   33          self.module_choices = module_choices\n   34          self.wrapper_module = wrapper_module\n   ..\n  117          test_string = os.path.sep + important_module.replace('.', os.path.sep)\n  118          return test_string + '.py' in filename or \\\n  119:                test_string + os.path.sep + '__init__.py' in filename\n  120  \n\nC:\\Users\\johan\\Documents\\GitHub\\sharepad\\venv\\Lib\\site-packages\\flask\\helpers.py:\n  691          filepath = sys.modules[import_name].__file__\n  692  \n  693:     # filepath is import_name.py for a module, or __init__.py for a package.\n  694      return os.path.dirname(os.path.abspath(filepath))\n  695  \n  ...\n  724              filename = sys.modules[import_name].__file__\n  725          package_path = os.path.abspath(os.path.dirname(filename))\n  726:         # package_path ends with __init__.py for a package\n  727          if loader.is_package(root_mod_name):\n  728              package_path = os.path.dirname(package_path)\n  ...\n  754      \"\"\"\n  755  \n  756:     def __init__(self, func, name=None, doc=None):\n  757          self.__name__ = name or func.__name__\n  758          self.__module__ = func.__module__\n  ...\n  774  class _PackageBoundObject(object):\n  775  \n  776:     def __init__(self, import_name, template_folder=None):\n  777          #: The name of the package or module.  Do not change this once\n  778          #: it was set by the constructor.\n\nC:\\Users\\johan\\Documents\\GitHub\\sharepad\\venv\\Lib\\site-packages\\flask\\module.py:\n   30      \"\"\"\n   31  \n   32:     def __init__(self, import_name, name=None, url_prefix=None,\n   33                   static_path=None, subdomain=None):\n   34          if name is None:\n   ..\n   36                  'does not point to a submodule'\n   37              name = import_name.rsplit('.', 1)[1]\n   38:         Blueprint.__init__(self, name, import_name, url_prefix=url_prefix,\n   39                             subdomain=subdomain, template_folder='templates')\n   40  \n\nC:\\Users\\johan\\Documents\\GitHub\\sharepad\\venv\\Lib\\site-packages\\flask\\signals.py:\n   26          \"\"\"\n   27  \n   28:         def __init__(self, name, doc=None):\n   29              self.name = name\n   30              self.__doc__ = doc\n\nC:\\Users\\johan\\Documents\\GitHub\\sharepad\\venv\\Lib\\site-packages\\flask\\templating.py:\n   37      \"\"\"\n   38  \n   39:     def __init__(self, app, **options):\n   40          if 'loader' not in options:\n   41              options['loader'] = app.create_global_jinja_loader()\n   42:         BaseEnvironment.__init__(self, **options)\n   43          self.app = app\n   44  \n   ..\n   49      \"\"\"\n   50  \n   51:     def __init__(self, app):\n   52          self.app = app\n   53  \n\nC:\\Users\\johan\\Documents\\GitHub\\sharepad\\venv\\Lib\\site-packages\\flask\\testsuite\\__init__.py:\n  143  class _ExceptionCatcher(object):\n  144  \n  145:     def __init__(self, test_case, exc_type):\n  146          self.test_case = test_case\n  147          self.exc_type = exc_type\n\nC:\\Users\\johan\\Documents\\GitHub\\sharepad\\venv\\Lib\\site-packages\\flask\\testsuite\\appctx.py:\n   68      def test_custom_request_globals_class(self):\n   69          class CustomRequestGlobals(object):\n   70:             def __init__(self):\n   71                  self.spam = 'eggs'\n   72          app = flask.Flask(__name__)\n\nC:\\Users\\johan\\Documents\\GitHub\\sharepad\\venv\\Lib\\site-packages\\flask\\testsuite\\basic.py:\n  192      def test_session_using_application_root(self):\n  193          class PrefixPathMiddleware(object):\n  194:             def __init__(self, app, prefix):\n  195                  self.app = app\n  196                  self.prefix = prefix\n\nC:\\Users\\johan\\Documents\\GitHub\\sharepad\\venv\\Lib\\site-packages\\flask\\testsuite\\blueprints.py:\n  205                  self.assert_(0, 'expected exception')\n  206              try:\n  207:                 f('../__init__.py')\n  208              except NotFound:\n  209                  pass\n  ...\n  218              try:\n  219                  try:\n  220:                     f('..\\\\__init__.py')\n  221                  except NotFound:\n  222                      pass\n  ...\n  296          self.assert_equal(c.get('/what-is-a-sideend').data, 'application itself says no')\n  297  \n  298:     def test_blueprint_url_definitions(self):\n  299          bp = flask.Blueprint('test', __name__)\n  300  \n\nC:\\Users\\johan\\Documents\\GitHub\\sharepad\\venv\\Lib\\site-packages\\flask\\testsuite\\config.py:\n  108  \n  109  class LimitedLoaderMockWrapper(object):\n  110:     def __init__(self, loader):\n  111          self.loader = loader\n  112  \n\nC:\\Users\\johan\\Documents\\GitHub\\sharepad\\venv\\Lib\\site-packages\\flask\\testsuite\\deprecations.py:\n   19  class DeprecationsTestCase(FlaskTestCase):\n   20  \n   21:     def test_init_jinja_globals(self):\n   22          class MyFlask(flask.Flask):\n   23:             def init_jinja_globals(self):\n   24                  self.jinja_env.globals['foo'] = '42'\n   25  \n   ..\n   33              self.assert_equal(c.get('/').data, '42')\n   34              self.assert_equal(len(log), 1)\n   35:             self.assert_('init_jinja_globals' in str(log[0]['message']))\n   36  \n   37  \n\nC:\\Users\\johan\\Documents\\GitHub\\sharepad\\venv\\Lib\\site-packages\\flask\\testsuite\\examples.py:\n   18                                  os.pardir, os.pardir, 'examples')\n   19      add_to_path(os.path.join(example_path, 'flaskr'))\n   20:     add_to_path(os.path.join(example_path, 'minitwit'))\n   21  \n   22  \n   ..\n   25      suite = unittest.TestSuite()\n   26      try:\n   27:         from minitwit_tests import MiniTwitTestCase\n   28      except ImportError:\n   29          pass\n   30      else:\n   31:         suite.addTest(unittest.makeSuite(MiniTwitTestCase))\n   32      try:\n   33          from flaskr_tests import FlaskrTestCase\n\nC:\\Users\\johan\\Documents\\GitHub\\sharepad\\venv\\Lib\\site-packages\\flask\\testsuite\\ext.py:\n  115  \n  116              next = tb.tb_next\n  117:             self.assert_('flask_broken/__init__.py' in next.tb_frame.f_code.co_filename)\n  118  \n  119  \n\nC:\\Users\\johan\\Documents\\GitHub\\sharepad\\venv\\Lib\\site-packages\\flask\\testsuite\\helpers.py:\n  434          called = []\n  435          class Wrapper(object):\n  436:             def __init__(self, gen):\n  437                  self._gen = gen\n  438              def __iter__(self):\n\nC:\\Users\\johan\\Documents\\GitHub\\sharepad\\venv\\Lib\\site-packages\\flask\\testsuite\\regression.py:\n   26  class _NoLeakAsserter(object):\n   27  \n   28:     def __init__(self, testcase):\n   29          self.testcase = testcase\n   30  \n\nC:\\Users\\johan\\Documents\\GitHub\\sharepad\\venv\\Lib\\site-packages\\flask\\testsuite\\test_apps\\main_app.py:\n    1  import flask\n    2  \n    3: # Test Flask initialization with main module.\n    4  app = flask.Flask('__main__')\n    5  \n\nC:\\Users\\johan\\Documents\\GitHub\\sharepad\\venv\\Lib\\site-packages\\Flask-0.9-py2.7.egg-info\\installed-files.txt:\n   17  ..\\flask\\views.py\n   18  ..\\flask\\wrappers.py\n   19: ..\\flask\\__init__.py\n   20: ..\\flask\\ext\\__init__.py\n   21  ..\\flask\\testsuite\\appctx.py\n   22  ..\\flask\\testsuite\\basic.py\n   ..\n   33  ..\\flask\\testsuite\\testing.py\n   34  ..\\flask\\testsuite\\views.py\n   35: ..\\flask\\testsuite\\__init__.py\n   36  ..\\flask\\testsuite\\static\\index.html\n   37  ..\\flask\\testsuite\\templates\\_macro.html\n   ..\n   46  ..\\flask\\testsuite\\test_apps\\importerror.py\n   47  ..\\flask\\testsuite\\test_apps\\main_app.py\n   48: ..\\flask\\testsuite\\test_apps\\blueprintapp\\__init__.py\n   49: ..\\flask\\testsuite\\test_apps\\blueprintapp\\apps\\__init__.py\n   50: ..\\flask\\testsuite\\test_apps\\blueprintapp\\apps\\admin\\__init__.py\n   51  ..\\flask\\testsuite\\test_apps\\blueprintapp\\apps\\admin\\static\\test.txt\n   52  ..\\flask\\testsuite\\test_apps\\blueprintapp\\apps\\admin\\static\\css\\test.css\n   53  ..\\flask\\testsuite\\test_apps\\blueprintapp\\apps\\admin\\templates\\admin\\index.html\n   54: ..\\flask\\testsuite\\test_apps\\blueprintapp\\apps\\frontend\\__init__.py\n   55  ..\\flask\\testsuite\\test_apps\\blueprintapp\\apps\\frontend\\templates\\frontend\\index.html\n   56: ..\\flask\\testsuite\\test_apps\\config_package_app\\__init__.py\n   57: ..\\flask\\testsuite\\test_apps\\flask_broken\\__init__.py\n   58  ..\\flask\\testsuite\\test_apps\\flask_broken\\b.py\n   59: ..\\flask\\testsuite\\test_apps\\flask_newext_package\\__init__.py\n   60  ..\\flask\\testsuite\\test_apps\\flask_newext_package\\submodule.py\n   61: ..\\flask\\testsuite\\test_apps\\flaskext\\__init__.py\n   62  ..\\flask\\testsuite\\test_apps\\flaskext\\oldext_simple.py\n   63: ..\\flask\\testsuite\\test_apps\\flaskext\\oldext_package\\__init__.py\n   64  ..\\flask\\testsuite\\test_apps\\flaskext\\oldext_package\\submodule.py\n   65  ..\\flask\\testsuite\\test_apps\\lib\\python2.5\\site-packages\\SiteEgg.egg\n   66  ..\\flask\\testsuite\\test_apps\\lib\\python2.5\\site-packages\\site_app.py\n   67: ..\\flask\\testsuite\\test_apps\\lib\\python2.5\\site-packages\\site_package\\__init__.py\n   68: ..\\flask\\testsuite\\test_apps\\moduleapp\\__init__.py\n   69: ..\\flask\\testsuite\\test_apps\\moduleapp\\apps\\__init__.py\n   70: ..\\flask\\testsuite\\test_apps\\moduleapp\\apps\\admin\\__init__.py\n   71  ..\\flask\\testsuite\\test_apps\\moduleapp\\apps\\admin\\static\\test.txt\n   72  ..\\flask\\testsuite\\test_apps\\moduleapp\\apps\\admin\\static\\css\\test.css\n   73  ..\\flask\\testsuite\\test_apps\\moduleapp\\apps\\admin\\templates\\index.html\n   74: ..\\flask\\testsuite\\test_apps\\moduleapp\\apps\\frontend\\__init__.py\n   75  ..\\flask\\testsuite\\test_apps\\moduleapp\\apps\\frontend\\templates\\index.html\n   76: ..\\flask\\testsuite\\test_apps\\path\\installed_package\\__init__.py\n   77: ..\\flask\\testsuite\\test_apps\\subdomaintestmodule\\__init__.py\n   78  ..\\flask\\testsuite\\test_apps\\subdomaintestmodule\\static\\hello.txt\n   79  ..\\flask\\app.pyc\n   ..\n   95  ..\\flask\\views.pyc\n   96  ..\\flask\\wrappers.pyc\n   97: ..\\flask\\__init__.pyc\n   98: ..\\flask\\ext\\__init__.pyc\n   99  ..\\flask\\testsuite\\appctx.pyc\n  100  ..\\flask\\testsuite\\basic.pyc\n  ...\n  111  ..\\flask\\testsuite\\testing.pyc\n  112  ..\\flask\\testsuite\\views.pyc\n  113: ..\\flask\\testsuite\\__init__.pyc\n  114  ..\\flask\\testsuite\\test_apps\\config_module_app.pyc\n  115  ..\\flask\\testsuite\\test_apps\\flask_newext_simple.pyc\n  116  ..\\flask\\testsuite\\test_apps\\importerror.pyc\n  117  ..\\flask\\testsuite\\test_apps\\main_app.pyc\n  118: ..\\flask\\testsuite\\test_apps\\blueprintapp\\__init__.pyc\n  119: ..\\flask\\testsuite\\test_apps\\blueprintapp\\apps\\__init__.pyc\n  120: ..\\flask\\testsuite\\test_apps\\blueprintapp\\apps\\admin\\__init__.pyc\n  121: ..\\flask\\testsuite\\test_apps\\blueprintapp\\apps\\frontend\\__init__.pyc\n  122: ..\\flask\\testsuite\\test_apps\\config_package_app\\__init__.pyc\n  123: ..\\flask\\testsuite\\test_apps\\flask_broken\\__init__.pyc\n  124  ..\\flask\\testsuite\\test_apps\\flask_broken\\b.pyc\n  125: ..\\flask\\testsuite\\test_apps\\flask_newext_package\\__init__.pyc\n  126  ..\\flask\\testsuite\\test_apps\\flask_newext_package\\submodule.pyc\n  127: ..\\flask\\testsuite\\test_apps\\flaskext\\__init__.pyc\n  128  ..\\flask\\testsuite\\test_apps\\flaskext\\oldext_simple.pyc\n  129: ..\\flask\\testsuite\\test_apps\\flaskext\\oldext_package\\__init__.pyc\n  130  ..\\flask\\testsuite\\test_apps\\flaskext\\oldext_package\\submodule.pyc\n  131  ..\\flask\\testsuite\\test_apps\\lib\\python2.5\\site-packages\\site_app.pyc\n  132: ..\\flask\\testsuite\\test_apps\\lib\\python2.5\\site-packages\\site_package\\__init__.pyc\n  133: ..\\flask\\testsuite\\test_apps\\moduleapp\\__init__.pyc\n  134: ..\\flask\\testsuite\\test_apps\\moduleapp\\apps\\__init__.pyc\n  135: ..\\flask\\testsuite\\test_apps\\moduleapp\\apps\\admin\\__init__.pyc\n  136: ..\\flask\\testsuite\\test_apps\\moduleapp\\apps\\frontend\\__init__.pyc\n  137: ..\\flask\\testsuite\\test_apps\\path\\installed_package\\__init__.pyc\n  138: ..\\flask\\testsuite\\test_apps\\subdomaintestmodule\\__init__.pyc\n  139  .\\\n  140  dependency_links.txt\n\nC:\\Users\\johan\\Documents\\GitHub\\sharepad\\venv\\Lib\\site-packages\\Flask-0.9-py2.7.egg-info\\SOURCES.txt:\n   92  docs/tutorial/css.rst\n   93  docs/tutorial/dbcon.rst\n   94: docs/tutorial/dbinit.rst\n   95  docs/tutorial/folders.rst\n   96  docs/tutorial/index.rst\n   ..\n  103  examples/blueprintexample/blueprintexample.py\n  104  examples/blueprintexample/blueprintexample_test.py\n  105: examples/blueprintexample/simple_page/__init__.py\n  106  examples/blueprintexample/simple_page/simple_page.py\n  107  examples/blueprintexample/simple_page/templates/pages/hello.html\n  ...\n  120  examples/jqueryexample/templates/index.html\n  121  examples/jqueryexample/templates/layout.html\n  122: examples/minitwit/README\n  123: examples/minitwit/minitwit.py\n  124: examples/minitwit/minitwit_tests.py\n  125: examples/minitwit/schema.sql\n  126: examples/minitwit/static/style.css\n  127: examples/minitwit/templates/layout.html\n  128: examples/minitwit/templates/login.html\n  129: examples/minitwit/templates/register.html\n  130: examples/minitwit/templates/timeline.html\n  131: flask/__init__.py\n  132  flask/app.py\n  133  flask/blueprints.py\n  ...\n  148  flask/views.py\n  149  flask/wrappers.py\n  150: flask/ext/__init__.py\n  151: flask/testsuite/__init__.py\n  152  flask/testsuite/appctx.py\n  153  flask/testsuite/basic.py\n  ...\n  176  flask/testsuite/test_apps/importerror.py\n  177  flask/testsuite/test_apps/main_app.py\n  178: flask/testsuite/test_apps/blueprintapp/__init__.py\n  179: flask/testsuite/test_apps/blueprintapp/apps/__init__.py\n  180: flask/testsuite/test_apps/blueprintapp/apps/admin/__init__.py\n  181  flask/testsuite/test_apps/blueprintapp/apps/admin/static/test.txt\n  182  flask/testsuite/test_apps/blueprintapp/apps/admin/static/css/test.css\n  183  flask/testsuite/test_apps/blueprintapp/apps/admin/templates/admin/index.html\n  184: flask/testsuite/test_apps/blueprintapp/apps/frontend/__init__.py\n  185  flask/testsuite/test_apps/blueprintapp/apps/frontend/templates/frontend/index.html\n  186: flask/testsuite/test_apps/config_package_app/__init__.py\n  187: flask/testsuite/test_apps/flask_broken/__init__.py\n  188  flask/testsuite/test_apps/flask_broken/b.py\n  189: flask/testsuite/test_apps/flask_newext_package/__init__.py\n  190  flask/testsuite/test_apps/flask_newext_package/submodule.py\n  191: flask/testsuite/test_apps/flaskext/__init__.py\n  192  flask/testsuite/test_apps/flaskext/oldext_simple.py\n  193: flask/testsuite/test_apps/flaskext/oldext_package/__init__.py\n  194  flask/testsuite/test_apps/flaskext/oldext_package/submodule.py\n  195  flask/testsuite/test_apps/lib/python2.5/site-packages/SiteEgg.egg\n  196  flask/testsuite/test_apps/lib/python2.5/site-packages/site_app.py\n  197: flask/testsuite/test_apps/lib/python2.5/site-packages/site_package/__init__.py\n  198: flask/testsuite/test_apps/moduleapp/__init__.py\n  199: flask/testsuite/test_apps/moduleapp/apps/__init__.py\n  200: flask/testsuite/test_apps/moduleapp/apps/admin/__init__.py\n  201  flask/testsuite/test_apps/moduleapp/apps/admin/static/test.txt\n  202  flask/testsuite/test_apps/moduleapp/apps/admin/static/css/test.css\n  203  flask/testsuite/test_apps/moduleapp/apps/admin/templates/index.html\n  204: flask/testsuite/test_apps/moduleapp/apps/frontend/__init__.py\n  205  flask/testsuite/test_apps/moduleapp/apps/frontend/templates/index.html\n  206: flask/testsuite/test_apps/path/installed_package/__init__.py\n  207: flask/testsuite/test_apps/subdomaintestmodule/__init__.py\n  208  flask/testsuite/test_apps/subdomaintestmodule/static/hello.txt\n\nC:\\Users\\johan\\Documents\\GitHub\\sharepad\\venv\\Lib\\site-packages\\jinja2\\_debugsupport.c:\n   47  #if PY_MAJOR_VERSION < 3\n   48  \n   49: #ifndef PyMODINIT_FUNC	/* declarations for DLL import/export */\n   50: #define PyMODINIT_FUNC void\n   51  #endif\n   52: PyMODINIT_FUNC\n   53: init_debugsupport(void)\n   54  {\n   55: 	Py_InitModule3(\"jinja2._debugsupport\", module_methods, \"\");\n   56  }\n   57  \n   58: #else /* Python 3.x module initialization */\n   59  \n   60: static struct PyModuleDef module_definition = {\n   61:         PyModuleDef_HEAD_INIT,\n   62  	\"jinja2._debugsupport\",\n   63  	NULL,\n   ..\n   70  };\n   71  \n   72: PyMODINIT_FUNC\n   73: PyInit__debugsupport(void)\n   74  {\n   75: 	return PyModule_Create(&module_definition);\n   76  }\n   77  \n\nC:\\Users\\johan\\Documents\\GitHub\\sharepad\\venv\\Lib\\site-packages\\jinja2\\bccache.py:\n   10  \n   11      Situations where this is useful are often forking web applications that\n   12:     are initialized on the first request.\n   13  \n   14      :copyright: (c) 2010 by the Jinja Team.\n   ..\n   62  class Bucket(object):\n   63      \"\"\"Buckets are used to store the bytecode for one template.  It's created\n   64:     and initialized by the bytecode cache and passed to the loading functions.\n   65  \n   66      The buckets get an internal checksum from the cache assigned and use this\n   ..\n   69      \"\"\"\n   70  \n   71:     def __init__(self, environment, key, checksum):\n   72          self.environment = environment\n   73          self.key = key\n   ..\n  123          class MyCache(BytecodeCache):\n  124  \n  125:             def __init__(self, directory):\n  126                  self.directory = directory\n  127  \n  ...\n  206      \"\"\"\n  207  \n  208:     def __init__(self, directory=None, pattern='__jinja2_%s.cache'):\n  209          if directory is None:\n  210              directory = tempfile.gettempdir()\n  ...\n  285      \"\"\"\n  286  \n  287:     def __init__(self, client, prefix='jinja2/bytecode/', timeout=None):\n  288          self.client = client\n  289          self.prefix = prefix\n\nC:\\Users\\johan\\Documents\\GitHub\\sharepad\\venv\\Lib\\site-packages\\jinja2\\compiler.py:\n   56  \n   57  def generate(node, environment, name, filename, stream=None,\n   58:              defer_init=False):\n   59      \"\"\"Generate the python source for a node tree.\"\"\"\n   60      if not isinstance(node, nodes.Template):\n   61          raise TypeError('Can\\'t compile non template nodes')\n   62:     generator = CodeGenerator(environment, name, filename, stream, defer_init)\n   63      generator.visit(node)\n   64      if stream is None:\n   ..\n  104      \"\"\"Tracks the status of identifiers in frames.\"\"\"\n  105  \n  106:     def __init__(self):\n  107          # variables that are known to be declared (probably from outer\n  108          # frames or because they are special for the frame)\n  ...\n  141      \"\"\"Holds compile time information for us.\"\"\"\n  142  \n  143:     def __init__(self, eval_ctx, parent=None):\n  144          self.eval_ctx = eval_ctx\n  145          self.identifiers = Identifiers()\n  ...\n  233      \"\"\"A visitor that collects filter and test calls.\"\"\"\n  234  \n  235:     def __init__(self):\n  236          self.filters = set()\n  237          self.tests = set()\n  ...\n  255      \"\"\"\n  256  \n  257:     def __init__(self, names):\n  258          self.names = set(names)\n  259          self.undeclared = set()\n  ...\n  274      \"\"\"A visitor for `Frame.inspect`.\"\"\"\n  275  \n  276:     def __init__(self, identifiers):\n  277          self.identifiers = identifiers\n  278  \n  ...\n  366  class CodeGenerator(NodeVisitor):\n  367  \n  368:     def __init__(self, environment, name, filename, stream=None,\n  369:                  defer_init=False):\n  370          if stream is None:\n  371              stream = StringIO()\n  ...\n  375          self.stream = stream\n  376          self.created_block_context = False\n  377:         self.defer_init = defer_init\n  378  \n  379          # aliases for imports\n  ...\n  644          the future also recursive loops.  As there is currently\n  645          technical limitation that doesn't allow reading and writing a\n  646:         variable in a scope where the initial value is coming from an\n  647          outer scope, this function tries to fall back with a common\n  648          error message.  Additionally the frame passed is modified so\n  ...\n  732  \n  733      def macro_def(self, node, frame):\n  734:         \"\"\"Dump the macro definition for the def created by macro_body.\"\"\"\n  735          arg_tuple = ', '.join(repr(x.name) for x in node.args)\n  736          name = getattr(node, 'name', None)\n  ...\n  767              self.writeline('dummy = lambda *x: None')\n  768  \n  769:         # if we want a deferred initialization we cannot move the\n  770          # environment into a local name\n  771:         envenv = not self.defer_init and ', environment=environment' or ''\n  772  \n  773          # do we have an extends tag at all?  If not, we can save some\n\nC:\\Users\\johan\\Documents\\GitHub\\sharepad\\venv\\Lib\\site-packages\\jinja2\\debug.py:\n   36      \"\"\"Proxies a traceback frame.\"\"\"\n   37  \n   38:     def __init__(self, tb):\n   39          self.tb = tb\n   40          self._tb_next = None\n   ..\n   80      \"\"\"Holds a Jinja preprocessed traceback for priting or reraising.\"\"\"\n   81  \n   82:     def __init__(self, exc_type, exc_value, frames):\n   83          assert frames, 'no frames for this traceback?'\n   84          self.exc_type = exc_type\n   ..\n  134      if isinstance(exc_value, TemplateSyntaxError):\n  135          exc_info = translate_syntax_error(exc_value, source_hint)\n  136:         initial_skip = 0\n  137      else:\n  138:         initial_skip = 1\n  139:     return translate_exception(exc_info, initial_skip)\n  140  \n  141  \n  ...\n  151  \n  152  \n  153: def translate_exception(exc_info, initial_skip=0):\n  154      \"\"\"If passed an exc_info it will automatically rewrite the exceptions\n  155      all the way down to the correct line numbers and frames.\n  ...\n  159  \n  160      # skip some internal frames if wanted\n  161:     for x in xrange(initial_skip):\n  162          if tb is not None:\n  163              tb = tb.tb_next\n  164:     initial_tb = tb\n  165  \n  166      while tb is not None:\n  ...\n  264  \n  265  \n  266: def _init_ugly_crap():\n  267      \"\"\"This function implements a few ugly things so that we can patch the\n  268      traceback objects.  The function returned allows resetting `tb_next` on\n  ...\n  274  \n  275      # figure out side of _Py_ssize_t\n  276:     if hasattr(ctypes.pythonapi, 'Py_InitModule4_64'):\n  277          _Py_ssize_t = ctypes.c_int64\n  278      else:\n  ...\n  334      except ImportError:\n  335          try:\n  336:             tb_set_next = _init_ugly_crap()\n  337          except:\n  338              pass\n  339:     del _init_ugly_crap\n  340  \n\nC:\\Users\\johan\\Documents\\GitHub\\sharepad\\venv\\Lib\\site-packages\\jinja2\\environment.py:\n   99      will lead to surprising effects and undefined behavior.\n  100  \n  101:     Here the possible initialization parameters:\n  102  \n  103          `block_start_string`\n  ...\n  215      exception_formatter = None\n  216  \n  217:     def __init__(self,\n  218                   block_start_string=BLOCK_START_STRING,\n  219                   block_end_string=BLOCK_END_STRING,\n  ...\n  311          is linked to plus optional extra extensions.\n  312  \n  313:         Creating overlays should happen after the initial environment was set\n  314          up completely.  Not all attributes are truly linked, some are just\n  315          copied over so modifications on the original environment may not shine\n  ...\n  435          return stream\n  436  \n  437:     def _generate(self, source, name, filename, defer_init=False):\n  438          \"\"\"Internal hook that can be overriden to hook a different generate\n  439          method in.\n  ...\n  441          .. versionadded:: 2.5\n  442          \"\"\"\n  443:         return generate(source, self, name, filename, defer_init=defer_init)\n  444  \n  445      def _compile(self, source, filename):\n  ...\n  453      @internalcode\n  454      def compile(self, source, name=None, filename=None, raw=False,\n  455:                 defer_init=False):\n  456          \"\"\"Compile a node or template source code.  The `name` parameter is\n  457          the load name of the template after it was joined using\n  ...\n  466          mainly used internally.\n  467  \n  468:         `defer_init` is use internally to aid the module code generator.  This\n  469          causes the generated code to be able to import without the global\n  470          environment variable to be set.\n  471  \n  472          .. versionadded:: 2.4\n  473:            `defer_init` parameter added.\n  474          \"\"\"\n  475          source_hint = None\n  ...\n  481                  source = optimize(source, self)\n  482              source = self._generate(source, name, filename,\n  483:                                     defer_init=defer_init)\n  484              if raw:\n  485                  return source\n  ...\n  991      \"\"\"\n  992  \n  993:     def __init__(self, template, context):\n  994          self._body_stream = list(template.root_render_func(context))\n  995          self.__dict__.update(context.get_exported())\n  ...\n 1023      \"\"\"\n 1024  \n 1025:     def __init__(self, template, undefined_to_none):\n 1026          self._template = template\n 1027          self._undefined_to_none = undefined_to_none\n ....\n 1047      \"\"\"\n 1048  \n 1049:     def __init__(self, gen):\n 1050          self._gen = gen\n 1051          self.disable_buffering()\n\nC:\\Users\\johan\\Documents\\GitHub\\sharepad\\venv\\Lib\\site-packages\\jinja2\\exceptions.py:\n   14      \"\"\"Baseclass for all template errors.\"\"\"\n   15  \n   16:     def __init__(self, message=None):\n   17          if message is not None:\n   18              message = unicode(message).encode('utf-8')\n   19:         Exception.__init__(self, message)\n   20  \n   21      @property\n   ..\n   34      message = None\n   35  \n   36:     def __init__(self, name, message=None):\n   37:         IOError.__init__(self)\n   38          if message is None:\n   39              message = name\n   ..\n   61      \"\"\"\n   62  \n   63:     def __init__(self, names=(), message=None):\n   64          if message is None:\n   65              message = u'non of the templates given were found: ' + \\\n   66                        u', '.join(map(unicode, names))\n   67:         TemplateNotFound.__init__(self, names and names[-1] or None, message)\n   68          self.templates = list(names)\n   69  \n   ..\n   72      \"\"\"Raised to tell the user that there is a problem with the template.\"\"\"\n   73  \n   74:     def __init__(self, message, lineno, name=None, filename=None):\n   75:         TemplateError.__init__(self, message)\n   76          self.lineno = lineno\n   77          self.name = name\n\nC:\\Users\\johan\\Documents\\GitHub\\sharepad\\venv\\Lib\\site-packages\\jinja2\\ext.py:\n   65      priority = 100\n   66  \n   67:     def __init__(self, environment):\n   68          self.environment = environment\n   69  \n   ..\n  162      # the other time for the n-parameter of the ngettext function.\n  163  \n  164:     def __init__(self, environment):\n  165:         Extension.__init__(self, environment)\n  166          environment.globals['_'] = _gettext_alias\n  167          environment.extend(\n  ...\n  508      \"\"\"\n  509  \n  510:     def __init__(self, tokens, comment_tags):\n  511          self.tokens = tokens\n  512          self.comment_tags = comment_tags\n\nC:\\Users\\johan\\Documents\\GitHub\\sharepad\\venv\\Lib\\site-packages\\jinja2\\lexer.py:\n   94  TOKEN_LINECOMMENT = intern('linecomment')\n   95  TOKEN_DATA = intern('data')\n   96: TOKEN_INITIAL = intern('initial')\n   97  TOKEN_EOF = intern('eof')\n   98  \n   ..\n  212      \"\"\"\n  213  \n  214:     def __init__(self, message, cls=TemplateSyntaxError):\n  215          self.message = message\n  216          self.error_class = cls\n  ...\n  268      \"\"\"\n  269  \n  270:     def __init__(self, stream):\n  271          self.stream = stream\n  272  \n  ...\n  289      \"\"\"\n  290  \n  291:     def __init__(self, generator, name, filename):\n  292          self._next = iter(generator).next\n  293          self._pushed = deque()\n  ...\n  295          self.filename = filename\n  296          self.closed = False\n  297:         self.current = Token(1, TOKEN_INITIAL, '')\n  298          next(self)\n  299  \n  ...\n  400      \"\"\"\n  401  \n  402:     def __init__(self, environment):\n  403          # shortcuts\n  404          c = lambda x: re.compile(x, re.M | re.S)\n  ...\n  638                  # fetch new position into new variable so that we can check\n  639                  # if there is a internal parsing error which would result\n  640:                 # in an infinite loop\n  641                  pos2 = m.end()\n  642  \n\nC:\\Users\\johan\\Documents\\GitHub\\sharepad\\venv\\Lib\\site-packages\\jinja2\\loaders.py:\n   51          class MyLoader(BaseLoader):\n   52  \n   53:             def __init__(self, path):\n   54                  self.path = path\n   55  \n   ..\n  153      \"\"\"\n  154  \n  155:     def __init__(self, searchpath, encoding='utf-8'):\n  156          if isinstance(searchpath, basestring):\n  157              searchpath = [searchpath]\n  ...\n  210      \"\"\"\n  211  \n  212:     def __init__(self, package_name, package_path='templates',\n  213                   encoding='utf-8'):\n  214          from pkg_resources import DefaultProvider, ResourceManager, \\\n  ...\n  269      \"\"\"\n  270  \n  271:     def __init__(self, mapping):\n  272          self.mapping = mapping\n  273  \n  ...\n  300      \"\"\"\n  301  \n  302:     def __init__(self, load_func):\n  303          self.load_func = load_func\n  304  \n  ...\n  327      \"\"\"\n  328  \n  329:     def __init__(self, mapping, delimiter='/'):\n  330          self.mapping = mapping\n  331          self.delimiter = delimiter\n  ...\n  366      \"\"\"\n  367  \n  368:     def __init__(self, loaders):\n  369          self.loaders = loaders\n  370  \n  ...\n  403      has_source_access = False\n  404  \n  405:     def __init__(self, path):\n  406          package_name = '_jinja2_module_templates_%x' % id(self)\n  407  \n\nC:\\Users\\johan\\Documents\\GitHub\\sharepad\\venv\\Lib\\site-packages\\jinja2\\meta.py:\n   17      \"\"\"We abuse the code generator for introspection.\"\"\"\n   18  \n   19:     def __init__(self, environment):\n   20:         CodeGenerator.__init__(self, environment, '<introspection>',\n   21                                 '<introspection>')\n   22          self.undeclared_identifiers = set()\n\nC:\\Users\\johan\\Documents\\GitHub\\sharepad\\venv\\Lib\\site-packages\\jinja2\\nodes.py:\n   77      \"\"\"\n   78  \n   79:     def __init__(self, environment, template_name=None):\n   80          self.environment = environment\n   81          if callable(environment.autoescape):\n   ..\n  124      abstract = True\n  125  \n  126:     def __init__(self, *fields, **attributes):\n  127          if self.abstract:\n  128              raise TypeError('abstract nodes are not instanciable')\n  ...\n  286  \n  287  class Macro(Stmt):\n  288:     \"\"\"A macro definition.  `name` is the name of the macro, `args` a list of\n  289      arguments and `defaults` a list of defaults if there are any.  `body` is\n  290      a list of nodes for the macro body.\n  ...\n  828      fields = ('name',)\n  829  \n  830:     def __init__(self):\n  831          raise TypeError('Can\\'t create internal names.  Use the '\n  832                          '`free_identifier` method on a parser.')\n\nC:\\Users\\johan\\Documents\\GitHub\\sharepad\\venv\\Lib\\site-packages\\jinja2\\optimizer.py:\n   30  class Optimizer(NodeTransformer):\n   31  \n   32:     def __init__(self, environment):\n   33          self.environment = environment\n   34  \n\nC:\\Users\\johan\\Documents\\GitHub\\sharepad\\venv\\Lib\\site-packages\\jinja2\\parser.py:\n   27      \"\"\"\n   28  \n   29:     def __init__(self, environment, source, name=None, filename=None,\n   30                   state=None):\n   31          self.environment = environment\n   ..\n  108          self._last_identifier += 1\n  109          rv = object.__new__(nodes.InternalName)\n  110:         nodes.Node.__init__(rv, 'fi%d' % self._last_identifier, lineno=lineno)\n  111          return rv\n  112  \n\nC:\\Users\\johan\\Documents\\GitHub\\sharepad\\venv\\Lib\\site-packages\\jinja2\\runtime.py:\n   71      \"\"\"The `self` in templates.\"\"\"\n   72  \n   73:     def __init__(self, context):\n   74          self.__context = context\n   75  \n   ..\n  107                   'name', 'blocks', '__weakref__')\n  108  \n  109:     def __init__(self, environment, parent, name, blocks):\n  110          self.parent = parent\n  111          self.vars = {}\n  ...\n  115          self.name = name\n  116  \n  117:         # create the initial mapping of blocks.  Whenever template inheritance\n  118          # takes place the runtime will update this mapping with the new blocks\n  119          # from the template.\n  ...\n  241      \"\"\"One block on a template reference.\"\"\"\n  242  \n  243:     def __init__(self, name, context, stack, depth):\n  244          self.name = name\n  245          self._context = context\n  ...\n  268      \"\"\"A loop context for dynamic iteration.\"\"\"\n  269  \n  270:     def __init__(self, iterable, recurse=None):\n  271          self._iterator = iter(iterable)\n  272          self._recurse = recurse\n  ...\n  336      __slots__ = ('context',)\n  337  \n  338:     def __init__(self, context):\n  339          self.context = context\n  340  \n  ...\n  351      \"\"\"Wraps a macro function.\"\"\"\n  352  \n  353:     def __init__(self, environment, func, name, arguments, defaults,\n  354                   catch_kwargs, catch_varargs, caller):\n  355          self._environment = environment\n  ...\n  429                   '_undefined_exception')\n  430  \n  431:     def __init__(self, hint=None, obj=missing, name=None, exc=UndefinedError):\n  432          self._undefined_hint = hint\n  433          self._undefined_obj = obj\n\nC:\\Users\\johan\\Documents\\GitHub\\sharepad\\venv\\Lib\\site-packages\\jinja2\\sandbox.py:\n  253  \n  254  \n  255:     def __init__(self, *args, **kwargs):\n  256:         Environment.__init__(self, *args, **kwargs)\n  257          self.globals['range'] = safe_range\n  258          self.binop_table = self.default_binop_table.copy()\n\nC:\\Users\\johan\\Documents\\GitHub\\sharepad\\venv\\Lib\\site-packages\\jinja2\\utils.py:\n  357      # won't do any harm.\n  358  \n  359:     def __init__(self, capacity):\n  360          self.capacity = capacity\n  361          self._mapping = {}\n  362          self._queue = deque()\n  363:         self._postinit()\n  364  \n  365:     def _postinit(self):\n  366          # alias all queue methods for faster lookup\n  367          self._popleft = self._queue.popleft\n  ...\n  388      def __setstate__(self, d):\n  389          self.__dict__.update(d)\n  390:         self._postinit()\n  391  \n  392      def __getnewargs__(self):\n  ...\n  542      \"\"\"A cycle helper for templates.\"\"\"\n  543  \n  544:     def __init__(self, *items):\n  545          if not items:\n  546              raise RuntimeError('at least one item has to be provided')\n  ...\n  567      \"\"\"A joining helper for templates.\"\"\"\n  568  \n  569:     def __init__(self, sep=u', '):\n  570          self.sep = sep\n  571          self.used = False\n  ...\n  593  except ImportError:\n  594      class partial(object):\n  595:         def __init__(self, _func, *args, **kwargs):\n  596              self._func = _func\n  597              self._args = args\n\nC:\\Users\\johan\\Documents\\GitHub\\sharepad\\venv\\Lib\\site-packages\\jinja2\\_markupsafe\\__init__.py:\n  207      \"\"\"Helper for Markup.__mod__\"\"\"\n  208  \n  209:     def __init__(self, obj):\n  210          self.obj = obj\n  211  \n\nC:\\Users\\johan\\Documents\\GitHub\\sharepad\\venv\\Lib\\site-packages\\jinja2\\testsuite\\filters.py:\n  131      def test_join_attribute(self):\n  132          class User(object):\n  133:             def __init__(self, username):\n  134                  self.username = username\n  135          tmpl = env.from_string('''{{ users|join(', ', 'username') }}''')\n  ...\n  267      def test_sort4(self):\n  268          class Magic(object):\n  269:             def __init__(self, value):\n  270                  self.value = value\n  271              def __unicode__(self):\n  ...\n  298      def test_groupby_multidot(self):\n  299          class Date(object):\n  300:             def __init__(self, day, month, year):\n  301                  self.day = day\n  302                  self.month = month\n  303                  self.year = year\n  304          class Article(object):\n  305:             def __init__(self, title, *date):\n  306                  self.date = Date(*date)\n  307                  self.title = title\n\nC:\\Users\\johan\\Documents\\GitHub\\sharepad\\venv\\Lib\\site-packages\\Jinja2-2.6-py2.7.egg-info\\installed-files.txt:\n   20  ..\\jinja2\\visitor.py\n   21  ..\\jinja2\\_stringdefs.py\n   22: ..\\jinja2\\__init__.py\n   23  ..\\jinja2\\testsuite\\api.py\n   24  ..\\jinja2\\testsuite\\core_tags.py\n   ..\n   35  ..\\jinja2\\testsuite\\tests.py\n   36  ..\\jinja2\\testsuite\\utils.py\n   37: ..\\jinja2\\testsuite\\__init__.py\n   38: ..\\jinja2\\testsuite\\res\\__init__.py\n   39  ..\\jinja2\\_markupsafe\\tests.py\n   40  ..\\jinja2\\_markupsafe\\_bundle.py\n   41  ..\\jinja2\\_markupsafe\\_constants.py\n   42  ..\\jinja2\\_markupsafe\\_native.py\n   43: ..\\jinja2\\_markupsafe\\__init__.py\n   44  ..\\jinja2\\_debugsupport.c\n   45  ..\\jinja2\\testsuite\\res\\templates\\broken.html\n   ..\n   68  ..\\jinja2\\visitor.pyc\n   69  ..\\jinja2\\_stringdefs.pyc\n   70: ..\\jinja2\\__init__.pyc\n   71  ..\\jinja2\\testsuite\\api.pyc\n   72  ..\\jinja2\\testsuite\\core_tags.pyc\n   ..\n   83  ..\\jinja2\\testsuite\\tests.pyc\n   84  ..\\jinja2\\testsuite\\utils.pyc\n   85: ..\\jinja2\\testsuite\\__init__.pyc\n   86: ..\\jinja2\\testsuite\\res\\__init__.pyc\n   87  ..\\jinja2\\_markupsafe\\tests.pyc\n   88  ..\\jinja2\\_markupsafe\\_bundle.pyc\n   89  ..\\jinja2\\_markupsafe\\_constants.pyc\n   90  ..\\jinja2\\_markupsafe\\_native.pyc\n   91: ..\\jinja2\\_markupsafe\\__init__.pyc\n   92  .\\\n   93  dependency_links.txt\n\nC:\\Users\\johan\\Documents\\GitHub\\sharepad\\venv\\Lib\\site-packages\\Jinja2-2.6-py2.7.egg-info\\SOURCES.txt:\n   14  Jinja2.egg-info/top_level.txt\n   15  artwork/jinjalogo.svg\n   16: custom_fixers/__init__.py\n   17  custom_fixers/fix_alt_unicode.py\n   18  custom_fixers/fix_broken_reraising.py\n   ..\n   88  ext/django2jinja/templates/layout.html\n   89  ext/django2jinja/templates/subtemplate.html\n   90: jinja2/__init__.py\n   91  jinja2/_debugsupport.c\n   92  jinja2/_stringdefs.py\n   ..\n  111  jinja2/utils.py\n  112  jinja2/visitor.py\n  113: jinja2/_markupsafe/__init__.py\n  114  jinja2/_markupsafe/_bundle.py\n  115  jinja2/_markupsafe/_constants.py\n  116  jinja2/_markupsafe/_native.py\n  117  jinja2/_markupsafe/tests.py\n  118: jinja2/testsuite/__init__.py\n  119  jinja2/testsuite/api.py\n  120  jinja2/testsuite/core_tags.py\n  ...\n  131  jinja2/testsuite/tests.py\n  132  jinja2/testsuite/utils.py\n  133: jinja2/testsuite/res/__init__.py\n  134  jinja2/testsuite/res/templates/broken.html\n  135  jinja2/testsuite/res/templates/syntaxerror.html\n\nC:\\Users\\johan\\Documents\\GitHub\\sharepad\\venv\\Lib\\site-packages\\pip-1.3-py2.7.egg\\EGG-INFO\\PKG-INFO:\n   38              Location: /my/env/lib/pythonx.x/site-packages\n   39              Files:\n   40:              ../somepackage/__init__.py\n   41               [...]\n   42          \n   ..\n  368          * Fixed issue #138 - Git revisions ignored. Thanks John-Scott Atlakson.\n  369          \n  370:         * Fixed issue #95 - Initial editable install of github package from a tag fails. Thanks John-Scott Atlakson.\n  371          \n  372          * Fixed issue #107 - Can't install if a directory in cwd has the same name as the package you're installing.\n  ...\n  484          \n  485          * Fixed an issue in the package finder that could result in an\n  486:           infinite loop while looking for links.\n  487          \n  488          * Fixed issue with ``pip bundle`` and local files (which weren't being\n  ...\n  754          ---\n  755          \n  756:         * Initial release\n  757          \n  758  Keywords: easy_install distutils setuptools egg virtualenv\n\nC:\\Users\\johan\\Documents\\GitHub\\sharepad\\venv\\Lib\\site-packages\\pip-1.3-py2.7.egg\\EGG-INFO\\SOURCES.txt:\n   17  docs/quickstart.txt\n   18  docs/usage.txt\n   19: pip/__init__.py\n   20  pip/__main__.py\n   21  pip/basecommand.py\n   ..\n   39  pip.egg-info/requires.txt\n   40  pip.egg-info/top_level.txt\n   41: pip/backwardcompat/__init__.py\n   42  pip/backwardcompat/socket_create_connection.py\n   43  pip/backwardcompat/ssl_match_hostname.py\n   44: pip/commands/__init__.py\n   45  pip/commands/bundle.py\n   46  pip/commands/completion.py\n   ..\n   54  pip/commands/unzip.py\n   55  pip/commands/zip.py\n   56: pip/vcs/__init__.py\n   57  pip/vcs/bazaar.py\n   58  pip/vcs/git.py\n\nC:\\Users\\johan\\Documents\\GitHub\\sharepad\\venv\\Lib\\site-packages\\pip-1.3-py2.7.egg\\pip\\__init__.py:\n  132  \n  133  \n  134: def main(initial_args=None):\n  135:     if initial_args is None:\n  136:         initial_args = sys.argv[1:]\n  137  \n  138      autocomplete()\n  139  \n  140      try:\n  141:         cmd_name, options, args, parser = parseopts(initial_args)\n  142      except PipError:\n  143          e = sys.exc_info()[1]\n  ...\n  162  class FrozenRequirement(object):\n  163  \n  164:     def __init__(self, name, req, editable, comments=()):\n  165          self.name = name\n  166          self.req = req\n\nC:\\Users\\johan\\Documents\\GitHub\\sharepad\\venv\\Lib\\site-packages\\pip-1.3-py2.7.egg\\pip\\basecommand.py:\n   31      hidden = False\n   32  \n   33:     def __init__(self, main_parser):\n   34          parser_kw = {\n   35              'usage': self.usage,\n   ..\n   68          parser.add_option_group(new_group)\n   69  \n   70:     def merge_options(self, initial_options, options):\n   71          # Make sure we have all global options carried over\n   72          attrs = ['log', 'proxy', 'require_venv',\n   ..\n   79              attrs.append('insecure')\n   80          for attr in attrs:\n   81:             setattr(options, attr, getattr(initial_options, attr) or getattr(options, attr))\n   82:         options.quiet += initial_options.quiet\n   83:         options.verbose += initial_options.verbose\n   84  \n   85      def setup_logging(self):\n   86          pass\n   87  \n   88:     def main(self, args, initial_options):\n   89          options, args = self.parser.parse_args(args)\n   90:         self.merge_options(initial_options, options)\n   91  \n   92          level = 1  # Notify\n\nC:\\Users\\johan\\Documents\\GitHub\\sharepad\\venv\\Lib\\site-packages\\pip-1.3-py2.7.egg\\pip\\baseparser.py:\n   15      \"\"\"A prettier/less verbose help formatter for optparse.\"\"\"\n   16  \n   17:     def __init__(self, *args, **kwargs):\n   18:         # help position must be aligned with __init__.parseopts.description\n   19          kwargs['max_help_position'] = 30\n   20          kwargs['indent_increment'] = 1\n   21          kwargs['width'] = get_terminal_size()[0] - 2\n   22:         optparse.IndentedHelpFormatter.__init__(self, *args, **kwargs)\n   23  \n   24      def format_option_strings(self, option):\n   ..\n   68              else:\n   69                  label = 'Description'\n   70:             #some doc strings have inital newlines, some don't\n   71              description = description.lstrip('\\n')\n   72              #some doc strings have final newlines and spaces, some don't\n   ..\n  126      configuration files and environmental variables\"\"\"\n  127  \n  128:     def __init__(self, *args, **kwargs):\n  129          self.config = ConfigParser.RawConfigParser()\n  130          self.name = kwargs.pop('name')\n  ...\n  132          self.config.read(self.files)\n  133          assert self.name\n  134:         optparse.OptionParser.__init__(self, *args, **kwargs)\n  135  \n  136      def get_config_files(self):\n\nC:\\Users\\johan\\Documents\\GitHub\\sharepad\\venv\\Lib\\site-packages\\pip-1.3-py2.7.egg\\pip\\download.py:\n  117      A HTTPSHandler that uses our own VerifiedHTTPSConnection.\n  118      \"\"\"\n  119:     def __init__(self, connection_class = VerifiedHTTPSConnection):\n  120          self.specialized_conn_class = connection_class\n  121:         urllib2.HTTPSHandler.__init__(self)\n  122      def https_open(self, req):\n  123          return self.do_open(self.specialized_conn_class, req)\n  ...\n  128      pip's own URL helper that adds HTTP auth and proxy support\n  129      \"\"\"\n  130:     def __init__(self):\n  131          self.passman = urllib2.HTTPPasswordMgrWithDefaultRealm()\n  132  \n\nC:\\Users\\johan\\Documents\\GitHub\\sharepad\\venv\\Lib\\site-packages\\pip-1.3-py2.7.egg\\pip\\index.py:\n   43      \"\"\"\n   44  \n   45:     def __init__(self, find_links, index_urls,\n   46              use_mirrors=False, mirrors=None, main_mirror_url=None):\n   47          self.find_links = find_links\n   ..\n  380      failure_limit = 3\n  381  \n  382:     def __init__(self):\n  383          self._failures = {}\n  384          self._pages = {}\n  ...\n  416      _base_re = re.compile(r\"\"\"<base\\s+href\\s*=\\s*['\"]?([^'\">]+)\"\"\", re.I)\n  417  \n  418:     def __init__(self, content, url, headers=None):\n  419          self.content = content\n  420          self.url = url\n  ...\n  601  class Link(object):\n  602  \n  603:     def __init__(self, url, comes_from=None):\n  604          self.url = url\n  605          self.comes_from = comes_from\n  ...\n  687          return posixpath.basename(self.url.split('#', 1)[0].split('?', 1)[0])\n  688  \n  689: #An \"Infinite Link\" that compares greater than other links\n  690  InfLink = Link(Inf) #this object is not currently used as a sortable\n  691  \n\nC:\\Users\\johan\\Documents\\GitHub\\sharepad\\venv\\Lib\\site-packages\\pip-1.3-py2.7.egg\\pip\\log.py:\n   23      LEVELS = [VERBOSE_DEBUG, DEBUG, INFO, NOTIFY, WARN, ERROR, FATAL]\n   24  \n   25:     def __init__(self):\n   26          self.consumers = []\n   27          self.indent = 0\n\nC:\\Users\\johan\\Documents\\GitHub\\sharepad\\venv\\Lib\\site-packages\\pip-1.3-py2.7.egg\\pip\\req.py:\n   37  class InstallRequirement(object):\n   38  \n   39:     def __init__(self, req, comes_from, source_dir=None, editable=False,\n   40                   url=None, as_egg=False, update=True):\n   41          self.extras = ()\n   ..\n  103              link = Link(path_to_url(name))\n  104  \n  105:         # If the line has an egg= definition, but isn't editable, pull the requirement out.\n  106          # Otherwise, assume the name is the req for the non URL/path/archive case.\n  107          if link and req is None:\n  ...\n  784  class Requirements(object):\n  785  \n  786:     def __init__(self):\n  787          self._keys = []\n  788          self._dict = {}\n  ...\n  812  class RequirementSet(object):\n  813  \n  814:     def __init__(self, build_dir, src_dir, download_dir, download_cache=None,\n  815                   upgrade=False, ignore_installed=False, as_egg=False,\n  816                   ignore_dependencies=False, force_reinstall=False, use_user_site=False):\n  ...\n 1424      \"\"\"A set of file paths to be removed in the uninstallation of a\n 1425      requirement.\"\"\"\n 1426:     def __init__(self, dist):\n 1427          self.paths = set()\n 1428          self._refuse = set()\n ....\n 1546  \n 1547  class UninstallPthEntries(object):\n 1548:     def __init__(self, pth_file):\n 1549          if not os.path.isfile(pth_file):\n 1550              raise UninstallationError(\"Cannot remove entries from nonexistent file %s\" % pth_file)\n ....\n 1598      \"\"\"Wrap a list of lines in an object with readline() to make\n 1599      ConfigParser happy.\"\"\"\n 1600:     def __init__(self, lines):\n 1601          self._gen = (l for l in lines)\n 1602  \n\nC:\\Users\\johan\\Documents\\GitHub\\sharepad\\venv\\Lib\\site-packages\\pip-1.3-py2.7.egg\\pip\\commands\\bundle.py:\n   14      bundle = True\n   15  \n   16:     def __init__(self, *args, **kw):\n   17:         super(BundleCommand, self).__init__(*args, **kw)\n   18          # bundle uses different default source and build dirs\n   19          build_opt = self.parser.get_option(\"--build\")\n\nC:\\Users\\johan\\Documents\\GitHub\\sharepad\\venv\\Lib\\site-packages\\pip-1.3-py2.7.egg\\pip\\commands\\completion.py:\n   34      hidden = True\n   35  \n   36:     def __init__(self, *args, **kw):\n   37:         super(CompletionCommand, self).__init__(*args, **kw)\n   38          self.parser.add_option(\n   39              '--bash', '-b',\n\nC:\\Users\\johan\\Documents\\GitHub\\sharepad\\venv\\Lib\\site-packages\\pip-1.3-py2.7.egg\\pip\\commands\\freeze.py:\n   16      summary = 'Output installed packages in requirements format.'\n   17  \n   18:     def __init__(self, *args, **kw):\n   19:         super(FreezeCommand, self).__init__(*args, **kw)\n   20  \n   21          self.cmd_opts.add_option(\n\nC:\\Users\\johan\\Documents\\GitHub\\sharepad\\venv\\Lib\\site-packages\\pip-1.3-py2.7.egg\\pip\\commands\\help.py:\n   14  \n   15          try:\n   16:             # 'pip help' with no args is handled by pip.__init__.parseopt()\n   17              cmd_name = args[0]  # the command we need help for\n   18          except IndexError:\n\nC:\\Users\\johan\\Documents\\GitHub\\sharepad\\venv\\Lib\\site-packages\\pip-1.3-py2.7.egg\\pip\\commands\\install.py:\n   40      bundle = False\n   41  \n   42:     def __init__(self, *args, **kw):\n   43:         super(InstallCommand, self).__init__(*args, **kw)\n   44  \n   45          cmd_opts = self.cmd_opts\n\nC:\\Users\\johan\\Documents\\GitHub\\sharepad\\venv\\Lib\\site-packages\\pip-1.3-py2.7.egg\\pip\\commands\\list.py:\n   15      summary = 'List installed packages.'\n   16  \n   17:     def __init__(self, *args, **kw):\n   18:         super(ListCommand, self).__init__(*args, **kw)\n   19  \n   20          cmd_opts = self.cmd_opts\n\nC:\\Users\\johan\\Documents\\GitHub\\sharepad\\venv\\Lib\\site-packages\\pip-1.3-py2.7.egg\\pip\\commands\\search.py:\n   19      summary = 'Search PyPI for packages.'\n   20  \n   21:     def __init__(self, *args, **kw):\n   22:         super(SearchCommand, self).__init__(*args, **kw)\n   23          self.cmd_opts.add_option(\n   24              '--index',\n\nC:\\Users\\johan\\Documents\\GitHub\\sharepad\\venv\\Lib\\site-packages\\pip-1.3-py2.7.egg\\pip\\commands\\show.py:\n   12      summary = 'Show information about installed packages.'\n   13  \n   14:     def __init__(self, *args, **kw):\n   15:         super(ShowCommand, self).__init__(*args, **kw)\n   16          self.cmd_opts.add_option(\n   17              '-f', '--files',\n\nC:\\Users\\johan\\Documents\\GitHub\\sharepad\\venv\\Lib\\site-packages\\pip-1.3-py2.7.egg\\pip\\commands\\uninstall.py:\n   20      summary = 'Uninstall packages.'\n   21  \n   22:     def __init__(self, *args, **kw):\n   23:         super(UninstallCommand, self).__init__(*args, **kw)\n   24          self.cmd_opts.add_option(\n   25              '-r', '--requirement',\n\nC:\\Users\\johan\\Documents\\GitHub\\sharepad\\venv\\Lib\\site-packages\\pip-1.3-py2.7.egg\\pip\\commands\\zip.py:\n   18      summary = 'Zip individual packages.'\n   19  \n   20:     def __init__(self, *args, **kw):\n   21:         super(ZipCommand, self).__init__(*args, **kw)\n   22          if self.name == 'zip':\n   23              self.cmd_opts.add_option(\n   ..\n  269                  zip = zipfile.ZipFile(path, 'r')\n  270                  try:\n  271:                     zip.read(os.path.join(package, '__init__.py'))\n  272                  except KeyError:\n  273                      pass\n\nC:\\Users\\johan\\Documents\\GitHub\\sharepad\\venv\\Lib\\site-packages\\pip-1.3-py2.7.egg\\pip\\vcs\\__init__.py:\n   17      schemes = ['ssh', 'git', 'hg', 'bzr', 'sftp', 'svn']\n   18  \n   19:     def __init__(self):\n   20          # Register more schemes with urlparse for various version control systems\n   21          urlparse.uses_netloc.extend(self.schemes)\n   ..\n   23          if getattr(urlparse, 'uses_fragment', None):\n   24              urlparse.uses_fragment.extend(self.schemes)\n   25:         super(VcsSupport, self).__init__()\n   26  \n   27      def __iter__(self):\n   ..\n   88      dirname = ''\n   89  \n   90:     def __init__(self, url=None, *args, **kwargs):\n   91          self.url = url\n   92          self._cmd = None\n   93:         super(VersionControl, self).__init__(*args, **kwargs)\n   94  \n   95      def _filter(self, line):\n\nC:\\Users\\johan\\Documents\\GitHub\\sharepad\\venv\\Lib\\site-packages\\pip-1.3-py2.7.egg\\pip\\vcs\\bazaar.py:\n   18               'bzr branch -r %(rev)s %(url)s .\\n')\n   19  \n   20:     def __init__(self, url=None, *args, **kwargs):\n   21:         super(Bazaar, self).__init__(url, *args, **kwargs)\n   22          # Python >= 2.7.4, 3.3 doesn't have uses_fragment or non_hierarchical\n   23          # Register lp but do not expose as a scheme to support bzr+lp.\n\nC:\\Users\\johan\\Documents\\GitHub\\sharepad\\venv\\Lib\\site-packages\\pip-1.3-py2.7.egg\\pip\\vcs\\git.py:\n   18      bundle_file = 'git-clone.txt'\n   19      guide = ('# This was a Git repo; to make it a repo again run:\\n'\n   20:         'git init\\ngit remote add origin %(url)s -f\\ngit checkout %(rev)s\\n')\n   21  \n   22:     def __init__(self, url=None, *args, **kwargs):\n   23  \n   24          # Works around an apparent Git bug\n   ..\n   27              scheme, netloc, path, query, fragment = urlsplit(url)\n   28              if scheme.endswith('file'):\n   29:                 initial_slashes = path[:-len(path.lstrip('/'))]\n   30:                 newpath = initial_slashes + url2pathname(path).replace('\\\\', '/').lstrip('/')\n   31                  url = urlunsplit((scheme, netloc, newpath, query, fragment))\n   32                  after_plus = scheme.find('+') + 1\n   33                  url = scheme[:after_plus] + urlunsplit((scheme[after_plus:], netloc, newpath, query, fragment))\n   34  \n   35:         super(Git, self).__init__(url, *args, **kwargs)\n   36  \n   37      def parse_vcs_bundle_file(self, content):\n   ..\n  215          if not os.path.exists(os.path.join(location, '.gitmodules')):\n  216              return\n  217:         call_subprocess([self.cmd, 'submodule', 'update', '--init', '--recursive', '-q'],\n  218                          cwd=location)\n  219  \n\nC:\\Users\\johan\\Documents\\GitHub\\sharepad\\venv\\Lib\\site-packages\\pip-1.3-py2.7.egg\\pip\\vcs\\mercurial.py:\n   18      bundle_file = 'hg-clone.txt'\n   19      guide = ('# This was a Mercurial repo; to make it a repo again run:\\n'\n   20:             'hg init\\nhg pull %(url)s\\nhg update -r %(rev)s\\n')\n   21  \n   22      def parse_vcs_bundle_file(self, content):\n\nC:\\Users\\johan\\Documents\\GitHub\\sharepad\\venv\\Lib\\site-packages\\werkzeug\\_internal.py:\n  225              p = os.path.join(path, filename)\n  226              modname = getmodulename(filename)\n  227:             if modname and modname != '__init__':\n  228                  if modname not in found:\n  229                      found.add(modname)\n  ...\n  268      _reserved.update(Morsel._reserved)\n  269  \n  270:     def __init__(self, name=None, value=None):\n  271:         Morsel.__init__(self)\n  272          if name is not None:\n  273              self.set(name, value, value)\n  ...\n  300      read_only = False\n  301  \n  302:     def __init__(self, name, default=None, load_func=None, dump_func=None,\n  303                   read_only=None, doc=None):\n  304          self.name = name\n\nC:\\Users\\johan\\Documents\\GitHub\\sharepad\\venv\\Lib\\site-packages\\werkzeug\\datastructures.py:\n  121      def fromkeys(cls, keys, value=None):\n  122          instance = super(cls, cls).__new__(cls)\n  123:         instance.__init__(zip(keys, repeat(value)))\n  124          return instance\n  125  \n  ...\n  309      onwards some keyword parameters.\n  310  \n  311:     :param mapping: the initial value for the :class:`MultiDict`.  Either a\n  312                      regular dict, an iterable of ``(key, value)`` tuples\n  313                      or `None`.\n  314      \"\"\"\n  315  \n  316:     def __init__(self, mapping=None):\n  317          if isinstance(mapping, MultiDict):\n  318:             dict.__init__(self, ((k, l[:]) for k, l in mapping.iterlists()))\n  319          elif isinstance(mapping, dict):\n  320              tmp = {}\n  ...\n  325                      value = [value]\n  326                  tmp[key] = value\n  327:             dict.__init__(self, tmp)\n  328          else:\n  329              tmp = {}\n  330              for key, value in mapping or ():\n  331                  tmp.setdefault(key, []).append(value)\n  332:             dict.__init__(self, tmp)\n  333  \n  334      def __getstate__(self):\n  ...\n  599      __slots__ = ('prev', 'key', 'value', 'next')\n  600  \n  601:     def __init__(self, omd, key, value):\n  602          self.prev = omd._last_bucket\n  603          self.key = key\n  ...\n  638      \"\"\"\n  639  \n  640:     def __init__(self, mapping=None):\n  641:         dict.__init__(self)\n  642          self._first_bucket = self._last_bucket = None\n  643          if mapping is not None:\n  ...\n  826      \"\"\"\n  827  \n  828:     def __init__(self, defaults=None, _list=None):\n  829          if _list is None:\n  830              _list = []\n  ...\n 1210      \"\"\"\n 1211  \n 1212:     def __init__(self, environ):\n 1213          self.environ = environ\n 1214  \n ....\n 1216      def linked(cls, environ):\n 1217          raise TypeError('%r object is always linked to environment, '\n 1218:                         'no separate initializer' % cls.__name__)\n 1219  \n 1220      def __eq__(self, other):\n ....\n 1272          return type(self), (self.dicts,)\n 1273  \n 1274:     def __init__(self, dicts=None):\n 1275          self.dicts = dicts or []\n 1276  \n ....\n 1501      \"\"\"\n 1502  \n 1503:     def __init__(self, values=()):\n 1504          if values is None:\n 1505:             list.__init__(self)\n 1506              self.provided = False\n 1507          elif isinstance(values, Accept):\n 1508              self.provided = values.provided\n 1509:             list.__init__(self, values)\n 1510          else:\n 1511              self.provided = True\n ....\n 1513              values.sort()\n 1514              values.reverse()\n 1515:             list.__init__(self, [(a, b) for b, a in values])\n 1516  \n 1517      def _value_matches(self, value, item):\n ....\n 1746      no_transform = cache_property('no-transform', None, None)\n 1747  \n 1748:     def __init__(self, values=(), on_update=None):\n 1749:         dict.__init__(self, values or ())\n 1750          self.on_update = on_update\n 1751          self.provided = values is not None\n ....\n 1852      \"\"\"\n 1853  \n 1854:     def __init__(self, initial=None, on_update=None):\n 1855:         dict.__init__(self, initial or ())\n 1856          self.on_update = on_update\n 1857  \n ....\n 1876      \"\"\"\n 1877  \n 1878:     def __init__(self, headers=None, on_update=None):\n 1879          self._headers = list(headers or ())\n 1880          self._set = set([x.lower() for x in self._headers])\n ....\n 2021      \"\"\"\n 2022  \n 2023:     def __init__(self, strong_etags=None, weak_etags=None, star_tag=False):\n 2024          self._strong = frozenset(not star_tag and strong_etags or ())\n 2025          self._weak = frozenset(weak_etags or ())\n ....\n 2103      \"\"\"\n 2104  \n 2105:     def __init__(self, etag=None, date=None):\n 2106          #: The etag parsed and unquoted.  Ranges always operate on strong\n 2107          #: etags so the weakness information is not necessary.\n ....\n 2133      \"\"\"\n 2134  \n 2135:     def __init__(self, units, ranges):\n 2136          #: The units of this range.  Usually \"bytes\".\n 2137          self.units = units\n ....\n 2186      \"\"\"\n 2187  \n 2188:     def __init__(self, units, start, stop, length=None, on_update=None):\n 2189          assert is_byte_range_valid(start, stop, length), \\\n 2190              'Bad range provided'\n ....\n 2267      \"\"\"\n 2268  \n 2269:     def __init__(self, auth_type, data=None):\n 2270:         dict.__init__(self, data or {})\n 2271          self.type = auth_type\n 2272  \n ....\n 2320      _require_quoting = frozenset(['domain', 'nonce', 'opaque', 'realm'])\n 2321  \n 2322:     def __init__(self, auth_type=None, values=None, on_update=None):\n 2323:         dict.__init__(self, values or ())\n 2324          if auth_type:\n 2325              self['__auth_type__'] = auth_type\n ....\n 2456      \"\"\"\n 2457  \n 2458:     def __init__(self, stream=None, filename=None, name=None,\n 2459                   content_type=None, content_length=None,\n 2460                   headers=None):\n\nC:\\Users\\johan\\Documents\\GitHub\\sharepad\\venv\\Lib\\site-packages\\werkzeug\\exceptions.py:\n   72      description = None\n   73  \n   74:     def __init__(self, description=None):\n   75:         Exception.__init__(self, '%d %s' % (self.code, self.name))\n   76          if description is not None:\n   77              self.description = description\n   ..\n   83          \"\"\"\n   84          class newcls(cls, exception):\n   85:             def __init__(self, arg=None, description=None):\n   86:                 cls.__init__(self, description)\n   87:                 exception.__init__(self, arg)\n   88          newcls.__module__ = sys._getframe(1).f_globals.get('__name__')\n   89          newcls.__name__ = name or cls.__name__ + exception.__name__\n   ..\n  159      \"\"\"An HTTP exception that expands renders a WSGI application on error.\"\"\"\n  160  \n  161:     def __init__(self, response):\n  162:         Exception.__init__(self, 'proxy exception for %r' % response)\n  163          self.response = response\n  164  \n  ...\n  250      code = 405\n  251  \n  252:     def __init__(self, valid_methods=None, description=None):\n  253          \"\"\"Takes an optional list of valid http methods\n  254          starting with werkzeug 0.3 the list will be mandatory.\"\"\"\n  255:         HTTPException.__init__(self, description)\n  256          self.valid_methods = valid_methods\n  257  \n  ...\n  511      \"\"\"\n  512  \n  513:     def __init__(self, mapping=None, extra=None):\n  514          if mapping is None:\n  515              mapping = default_exceptions\n\nC:\\Users\\johan\\Documents\\GitHub\\sharepad\\venv\\Lib\\site-packages\\werkzeug\\formparser.py:\n  130      \"\"\"\n  131  \n  132:     def __init__(self, stream_factory=None, charset='utf-8',\n  133                   errors='replace', max_form_memory_size=None,\n  134                   max_content_length=None, cls=None,\n  ...\n  266  class MultiPartParser(object):\n  267  \n  268:     def __init__(self, stream_factory=None, charset='utf-8', errors='replace',\n  269                   max_form_memory_size=None, cls=None, buffer_size=10 * 1024):\n  270          self.stream_factory = stream_factory\n\nC:\\Users\\johan\\Documents\\GitHub\\sharepad\\venv\\Lib\\site-packages\\werkzeug\\local.py:\n   50      __slots__ = ('__storage__', '__ident_func__')\n   51  \n   52:     def __init__(self):\n   53          object.__setattr__(self, '__storage__', {})\n   54          object.__setattr__(self, '__ident_func__', get_ident)\n   ..\n  112      \"\"\"\n  113  \n  114:     def __init__(self):\n  115          self._local = Local()\n  116  \n  ...\n  182      \"\"\"\n  183  \n  184:     def __init__(self, locals=None, ident_func=None):\n  185          if locals is None:\n  186              self.locals = []\n  ...\n  283      __slots__ = ('__local', '__dict__', '__name__')\n  284  \n  285:     def __init__(self, local, name=None):\n  286          object.__setattr__(self, '_LocalProxy__local', local)\n  287          object.__setattr__(self, '__name__', name)\n\nC:\\Users\\johan\\Documents\\GitHub\\sharepad\\venv\\Lib\\site-packages\\werkzeug\\routing.py:\n  236      code = 301\n  237  \n  238:     def __init__(self, new_url):\n  239:         RoutingException.__init__(self, new_url)\n  240          self.new_url = new_url\n  241  \n  ...\n  251      \"\"\"This rule is an alias and wants to redirect to the canonical URL.\"\"\"\n  252  \n  253:     def __init__(self, matched_values):\n  254          self.matched_values = matched_values\n  255  \n  ...\n  260      \"\"\"\n  261  \n  262:     def __init__(self, endpoint, values, method):\n  263:         LookupError.__init__(self, endpoint, values, method)\n  264          self.endpoint = endpoint\n  265          self.values = values\n  ...\n  304      \"\"\"\n  305  \n  306:     def __init__(self, subdomain, rules):\n  307          self.subdomain = subdomain\n  308          self.rules = rules\n  ...\n  330      \"\"\"\n  331  \n  332:     def __init__(self, path, rules):\n  333          self.path = path.rstrip('/')\n  334          self.rules = rules\n  ...\n  355      \"\"\"\n  356  \n  357:     def __init__(self, prefix, rules):\n  358          self.prefix = prefix\n  359          self.rules = rules\n  ...\n  386      \"\"\"\n  387  \n  388:     def __init__(self, rules):\n  389          self.rules = list(rules)\n  390  \n  ...\n  400      \"\"\"\n  401  \n  402:     def __init__(self, rules, context):\n  403          self.rules = rules\n  404          self.context = context\n  ...\n  544      \"\"\"\n  545  \n  546:     def __init__(self, string, defaults=None, subdomain=None, methods=None,\n  547                   build_only=False, endpoint=None, strict_slashes=None,\n  548                   redirect_to=None, alias=False, host=None):\n  ...\n  831      weight = 100\n  832  \n  833:     def __init__(self, map):\n  834          self.map = map\n  835  \n  ...\n  859      \"\"\"\n  860  \n  861:     def __init__(self, map, minlength=1, maxlength=None, length=None):\n  862:         BaseConverter.__init__(self, map)\n  863          if length is not None:\n  864              length = '{%d}' % int(length)\n  ...\n  886      \"\"\"\n  887  \n  888:     def __init__(self, map, *items):\n  889:         BaseConverter.__init__(self, map)\n  890          self.regex = '(?:%s)' % '|'.join([re.escape(x) for x in items])\n  891  \n  ...\n  911      weight = 50\n  912  \n  913:     def __init__(self, map, fixed_digits=0, min=None, max=None):\n  914:         BaseConverter.__init__(self, map)\n  915          self.fixed_digits = fixed_digits\n  916          self.min = min\n  ...\n  966      num_convert = float\n  967  \n  968:     def __init__(self, map, min=None, max=None):\n  969:         NumberConverter.__init__(self, map, 0, min, max)\n  970  \n  971  \n  ...\n 1019      default_converters = ImmutableDict(DEFAULT_CONVERTERS)\n 1020  \n 1021:     def __init__(self, rules=None, default_subdomain='', charset='utf-8',\n 1022                   strict_slashes=True, redirect_defaults=True,\n 1023                   converters=None, sort_parameters=False, sort_key=None,\n ....\n 1217      \"\"\"\n 1218  \n 1219:     def __init__(self, map, server_name, script_name, subdomain,\n 1220                   url_scheme, path_info, default_method, query_args=None):\n 1221          self.map = map\n\nC:\\Users\\johan\\Documents\\GitHub\\sharepad\\venv\\Lib\\site-packages\\werkzeug\\script.py:\n   12      Most of the time you have recurring tasks while writing an application\n   13      such as starting up an interactive python interpreter with some prefilled\n   14:     imports, starting the development server, initializing the database or\n   15      something similar.\n   16  \n   ..\n  225          raise TypeError('variable length arguments for action not allowed.')\n  226      if len(args) != len(defaults or ()):\n  227:         raise TypeError('not all arguments have proper definitions')\n  228  \n  229:     for idx, (arg, definition) in enumerate(zip(args, defaults or ())):\n  230          if arg.startswith('_'):\n  231              raise TypeError('arguments may not start with an underscore')\n  232:         if not isinstance(definition, tuple):\n  233              shortcut = None\n  234:             default = definition\n  235          else:\n  236:             shortcut, default = definition\n  237          argument_type = argument_types[type(default)]\n  238          if isinstance(default, bool) and default is True:\n  ...\n  243  \n  244  \n  245: def make_shell(init_func=None, banner=None, use_ipython=True):\n  246      \"\"\"Returns an action callback that spawns a new interactive\n  247      python shell.\n  248  \n  249:     :param init_func: an optional initialization function that is\n  250                        called before the shell is started.  The return\n  251:                       value of this function is the initial namespace.\n  252      :param banner: the banner that is displayed before the shell.  If\n  253                     not specified a generic banner is used instead.\n  ...\n  256      if banner is None:\n  257          banner = 'Interactive Werkzeug Shell'\n  258:     if init_func is None:\n  259:         init_func = dict\n  260      def action(ipython=use_ipython):\n  261          \"\"\"Start a new interactive python session.\"\"\"\n  262:         namespace = init_func()\n  263          if ipython:\n  264              try:\n\nC:\\Users\\johan\\Documents\\GitHub\\sharepad\\venv\\Lib\\site-packages\\werkzeug\\serving.py:\n  187                  raise\n  188          if self.server.shutdown_signal:\n  189:             self.initiate_shutdown()\n  190          return rv\n  191  \n  192:     def initiate_shutdown(self):\n  193          \"\"\"A horrible, horrible way to kill the server for Python 2.6 and\n  194          later.  It's the best we can do.\n  ...\n  292      \"\"\"Wrapper around SSL connection to provide a working makefile().\"\"\"\n  293  \n  294:     def __init__(self, con):\n  295          self._con = con\n  296  \n  ...\n  327      request_queue_size = 128\n  328  \n  329:     def __init__(self, host, port, app, handler=None,\n  330                   passthrough_errors=False, ssl_context=None):\n  331          if handler is None:\n  332              handler = WSGIRequestHandler\n  333          self.address_family = select_ip_version(host, port)\n  334:         HTTPServer.__init__(self, (host, int(port)), handler)\n  335          self.app = app\n  336          self.passthrough_errors = passthrough_errors\n  ...\n  382      multiprocess = True\n  383  \n  384:     def __init__(self, host, port, app, processes=40, handler=None,\n  385                   passthrough_errors=False, ssl_context=None):\n  386:         BaseWSGIServer.__init__(self, host, port, app, handler,\n  387                                  passthrough_errors, ssl_context)\n  388          self.max_children = processes\n\nC:\\Users\\johan\\Documents\\GitHub\\sharepad\\venv\\Lib\\site-packages\\werkzeug\\templates.py:\n   96  class TemplateSyntaxError(SyntaxError):\n   97  \n   98:     def __init__(self, msg, filename, lineno):\n   99          from linecache import getline\n  100          l = getline(filename, lineno)\n  101:         SyntaxError.__init__(self, msg, (filename, lineno, len(l) or 1, l))\n  102  \n  103  \n  104  class Parser(object):\n  105  \n  106:     def __init__(self, gen, filename):\n  107          self.gen = gen\n  108          self.filename = filename\n  ...\n  266  class Context(object):\n  267  \n  268:     def __init__(self, namespace, charset, errors):\n  269          self.charset = charset\n  270          self.errors = errors\n  ...\n  313  class TemplateCodeGenerator(ModuleCodeGenerator):\n  314  \n  315:     def __init__(self, node, filename):\n  316:         ModuleCodeGenerator.__init__(self, transform(node, filename))\n  317  \n  318      def _nameOp(self, prefix, name):\n  ...\n  334      }\n  335  \n  336:     def __init__(self, source, filename='<template>', charset='utf-8',\n  337                   errors='strict', unicode_mode=True):\n  338          if isinstance(source, str):\n\nC:\\Users\\johan\\Documents\\GitHub\\sharepad\\venv\\Lib\\site-packages\\werkzeug\\test.py:\n  117      \"\"\"\n  118  \n  119:     def __init__(self, headers):\n  120          self.headers = headers\n  121  \n  ...\n  134      \"\"\"\n  135  \n  136:     def __init__(self, headers):\n  137          self.headers = _TestCookieHeaders(headers)\n  138  \n  ...\n  255      request_class = BaseRequest\n  256  \n  257:     def __init__(self, path='/', base_url=None, query_string=None,\n  258                   method='GET', input_stream=None, content_type=None,\n  259                   content_length=None, errors_stream=None, multithread=False,\n  ...\n  598      \"\"\"\n  599  \n  600:     def __init__(self, application, response_wrapper=None, use_cookies=True,\n  601                   allow_subdomain_redirects=False):\n  602          self.application = application\n\nC:\\Users\\johan\\Documents\\GitHub\\sharepad\\venv\\Lib\\site-packages\\werkzeug\\urls.py:\n  501      \"\"\"\n  502  \n  503:     def __init__(self, base='./', charset='utf-8', sort=False, key=None):\n  504          if not base:\n  505              base = './'\n\nC:\\Users\\johan\\Documents\\GitHub\\sharepad\\venv\\Lib\\site-packages\\werkzeug\\useragents.py:\n   61      )\n   62  \n   63:     def __init__(self):\n   64          self.platforms = [(b, re.compile(a, re.I)) for a, b in self.platforms]\n   65          self.browsers = [(b, re.compile(self._browser_version_re % a))\n   ..\n  154      _parser = UserAgentParser()\n  155  \n  156:     def __init__(self, environ_or_string):\n  157          if isinstance(environ_or_string, dict):\n  158              environ_or_string = environ_or_string.get('HTTP_USER_AGENT', '')\n\nC:\\Users\\johan\\Documents\\GitHub\\sharepad\\venv\\Lib\\site-packages\\werkzeug\\utils.py:\n   57      # in __get__ for manual invocation.\n   58  \n   59:     def __init__(self, func, name=None, doc=None, writeable=False):\n   60          if writeable:\n   61              from warnings import warn\n   ..\n  157      del name2codepoint\n  158  \n  159:     def __init__(self, dialect):\n  160          self._dialect = dialect\n  161  \n  ...\n  548      \"\"\"Raised if :func:`validate_arguments` fails to validate\"\"\"\n  549  \n  550:     def __init__(self, missing=None, extra=None, extra_positional=None):\n  551          self.missing = set(missing or ())\n  552          self.extra = extra or {}\n  553          self.extra_positional = extra_positional or []\n  554:         ValueError.__init__(self, 'function arguments invalid.  ('\n  555                              '%d missing, %d additional)' % (\n  556              len(self.missing),\n  ...\n  567      exception = None\n  568  \n  569:     def __init__(self, import_name, exception):\n  570          self.import_name = import_name\n  571          self.exception = exception\n  ...\n  573          msg = (\n  574              'import_string() failed for %r. Possible reasons are:\\n\\n'\n  575:             '- missing __init__.py in a package;\\n'\n  576              '- package or module path not included in sys.path;\\n'\n  577              '- duplicated package or module name taking precedence in '\n  ...\n  595                  break\n  596  \n  597:         ImportError.__init__(self, msg)\n  598  \n  599      def __repr__(self):\n\nC:\\Users\\johan\\Documents\\GitHub\\sharepad\\venv\\Lib\\site-packages\\werkzeug\\wrappers.py:\n  101      If you don't want that, set `populate_request` to `False`.\n  102  \n  103:     If `shallow` is `True` the environment is initialized as shallow\n  104      object around the environ.  Every operation that would modify the\n  105      environ in any way (such as consuming form data) raises an exception\n  ...\n  172      form_data_parser_class = FormDataParser\n  173  \n  174:     def __init__(self, environ, populate_request=True, shallow=False):\n  175          self.environ = environ\n  176          if populate_request and not shallow:\n  ...\n  519  class BaseResponse(object):\n  520      \"\"\"Base response class.  The most important fact about a response object\n  521:     is that it's a regular WSGI application.  It's initialized with a couple\n  522      of response parameters (headers, body, status code etc.) and will start a\n  523      valid WSGI response when called with the environ and start response\n  ...\n  618      automatically_set_content_length = True\n  619  \n  620:     def __init__(self, response=None, status=None, headers=None,\n  621                   mimetype=None, content_type=None, direct_passthrough=False):\n  622          if isinstance(headers, Headers):\n  ...\n 1347      mode = 'wb+'\n 1348  \n 1349:     def __init__(self, response):\n 1350          self.response = response\n 1351          self.closed = False\n\nC:\\Users\\johan\\Documents\\GitHub\\sharepad\\venv\\Lib\\site-packages\\werkzeug\\wsgi.py:\n  307      \"\"\"\n  308  \n  309:     def __init__(self, app, exports, disallow=None, cache=True,\n  310                   cache_timeout=60 * 60 * 12, fallback_mimetype='text/plain'):\n  311          self.app = app\n  ...\n  450      \"\"\"\n  451  \n  452:     def __init__(self, app, mounts=None):\n  453          self.app = app\n  454          self.mounts = mounts or {}\n  ...\n  493      \"\"\"\n  494  \n  495:     def __init__(self, iterable, callbacks=None):\n  496          iterator = iter(iterable)\n  497          self._next = iterator.next\n  ...\n  555      \"\"\"\n  556  \n  557:     def __init__(self, file, buffer_size=8192):\n  558          self.file = file\n  559          self.buffer_size = buffer_size\n  ...\n  733      \"\"\"\n  734  \n  735:     def __init__(self, stream, limit, silent=True):\n  736          self._read = stream.read\n  737          self._readline = stream.readline\n\nC:\\Users\\johan\\Documents\\GitHub\\sharepad\\venv\\Lib\\site-packages\\werkzeug\\contrib\\atom.py:\n   95      default_generator = ('Werkzeug', None, None)\n   96  \n   97:     def __init__(self, title=None, entries=None, **kwargs):\n   98          self.title = title\n   99          self.title_type = kwargs.get('title_type', 'text')\n  ...\n  246                     multiple authors. Required if not every entry has an\n  247                     author element.\n  248:     :param published: the time the entry was initially published.  Must\n  249                        be a :class:`datetime.datetime` object.\n  250      :param rights: copyright information for the entry.\n  ...\n  264      \"\"\"\n  265  \n  266:     def __init__(self, title=None, content=None, feed_url=None, **kwargs):\n  267          self.title = title\n  268          self.title_type = kwargs.get('title_type', 'text')\n\nC:\\Users\\johan\\Documents\\GitHub\\sharepad\\venv\\Lib\\site-packages\\werkzeug\\contrib\\cache.py:\n   97      \"\"\"\n   98  \n   99:     def __init__(self, default_timeout=300):\n  100          self.default_timeout = default_timeout\n  101  \n  ...\n  191      def inc(self, key, delta=1):\n  192          \"\"\"Increments the value of a key by `delta`.  If the key does\n  193:         not yet exist it is initialized with `delta`.\n  194  \n  195          For supporting caches this is an atomic operation.\n  ...\n  202      def dec(self, key, delta=1):\n  203          \"\"\"Decrements the value of a key by `delta`.  If the key does\n  204:         not yet exist it is initialized with `-delta`.\n  205  \n  206          For supporting caches this is an atomic operation.\n  ...\n  232      \"\"\"\n  233  \n  234:     def __init__(self, threshold=500, default_timeout=300):\n  235:         BaseCache.__init__(self, default_timeout)\n  236          self._cache = {}\n  237          self.clear = self._cache.clear\n  ...\n  299      \"\"\"\n  300  \n  301:     def __init__(self, servers=None, default_timeout=300, key_prefix=None):\n  302:         BaseCache.__init__(self, default_timeout)\n  303          if servers is None or isinstance(servers, (list, tuple)):\n  304              if servers is None:\n  ...\n  308                  raise RuntimeError('no memcache module found')\n  309          else:\n  310:             # NOTE: servers is actually an already initialized memcache\n  311              # client.\n  312              self._client = servers\n  ...\n  420  \n  421      def import_preferred_memcache_lib(self, servers):\n  422:         \"\"\"Returns an initialized memcache client.  Used by the constructor.\"\"\"\n  423          try:\n  424              import pylibmc\n  ...\n  472      \"\"\"\n  473  \n  474:     def __init__(self, host='localhost', port=6379, password=None,\n  475                   default_timeout=300, key_prefix=None):\n  476:         BaseCache.__init__(self, default_timeout)\n  477          if isinstance(host, basestring):\n  478              try:\n  ...\n  581      _fs_transaction_suffix = '.__wz_cache'\n  582  \n  583:     def __init__(self, cache_dir, threshold=500, default_timeout=300, mode=0600):\n  584:         BaseCache.__init__(self, default_timeout)\n  585          self._path = cache_dir\n  586          self._threshold = threshold\n\nC:\\Users\\johan\\Documents\\GitHub\\sharepad\\venv\\Lib\\site-packages\\werkzeug\\contrib\\fixers.py:\n   31      \"\"\"\n   32  \n   33:     def __init__(self, app):\n   34          self.app = app\n   35  \n   ..\n   63      \"\"\"\n   64  \n   65:     def __init__(self, app):\n   66          self.app = app\n   67  \n   ..\n   93      \"\"\"\n   94  \n   95:     def __init__(self, app):\n   96          self.app = app\n   97  \n   ..\n  142      \"\"\"\n  143  \n  144:     def __init__(self, app, remove_headers=None, add_headers=None):\n  145          self.app = app\n  146          self.remove_headers = set(x.lower() for x in (remove_headers or ()))\n  ...\n  180      #     http://code.djangoproject.com/ticket/4148\n  181  \n  182:     def __init__(self, app, fix_vary=True, fix_attach=True):\n  183          self.app = app\n  184          self.fix_vary = fix_vary\n\nC:\\Users\\johan\\Documents\\GitHub\\sharepad\\venv\\Lib\\site-packages\\werkzeug\\contrib\\kickstart.py:\n   16      are, of course, not neccessary to use the template engines in Werkzeug,\n   17      but they provide a common interface.  Currently supported template engines\n   18:     include Werkzeug's minitmpl and Genshi_.  Support for other engines can be\n   19      added in a trivial way.  These loaders provide a template interface\n   20      similar to the one used by Django_.\n   ..\n   45      \"\"\"\n   46  \n   47:     def __init__(self, environ, url_map,\n   48              session_store=None, cookie_name=None):\n   49:         # call the parent for initialization\n   50:         RequestBase.__init__(self, environ)\n   51          # create an adapter\n   52          self.url_adapter = url_map.bind_to_environ(environ)\n   ..\n  126      \"\"\"\n  127  \n  128:     def __init__(self, name, url_map, session=False, processors=None):\n  129          # save the name and the URL-map, as it'll be needed later on\n  130          self.name = name\n  ...\n  201      \"\"\"\n  202  \n  203:     def __init__(self, name):\n  204:         IOError.__init__(self, name)\n  205          self.name = name\n  206  \n  ...\n  208  class TemplateLoader(object):\n  209      \"\"\"\n  210:     A simple loader interface for the werkzeug minitmpl\n  211      template language.\n  212      \"\"\"\n  213  \n  214:     def __init__(self, search_path, encoding='utf-8'):\n  215          self.search_path = path.abspath(search_path)\n  216          self.encoding = encoding\n  ...\n  247      the `output_type` attribute.\n  248      \"\"\"\n  249:     def __init__(self, search_path, encoding='utf-8', **kwargs):\n  250:         TemplateLoader.__init__(self, search_path, encoding)\n  251          # import Genshi here, because we don't want a general Genshi\n  252          # dependency, only a local one\n\nC:\\Users\\johan\\Documents\\GitHub\\sharepad\\venv\\Lib\\site-packages\\werkzeug\\contrib\\limiter.py:\n   27      \"\"\"\n   28  \n   29:     def __init__(self, app, maximum_size=1024 * 1024 * 10):\n   30          self.app = app\n   31          self.maximum_size = maximum_size\n\nC:\\Users\\johan\\Documents\\GitHub\\sharepad\\venv\\Lib\\site-packages\\werkzeug\\contrib\\lint.py:\n   44  class InputStream(object):\n   45  \n   46:     def __init__(self, stream):\n   47          self._stream = stream\n   48  \n   ..\n   88  class ErrorStream(object):\n   89  \n   90:     def __init__(self, stream):\n   91          self._stream = stream\n   92  \n   ..\n  110  class GuardedWrite(object):\n  111  \n  112:     def __init__(self, write, chunks):\n  113          self._write = write\n  114          self._chunks = chunks\n  ...\n  122  class GuardedIterator(object):\n  123  \n  124:     def __init__(self, iterator, headers_set, chunks):\n  125          self._iterator = iterator\n  126          self._next = iter(iterator).next\n  ...\n  207      \"\"\"\n  208  \n  209:     def __init__(self, app):\n  210          self.app = app\n  211  \n\nC:\\Users\\johan\\Documents\\GitHub\\sharepad\\venv\\Lib\\site-packages\\werkzeug\\contrib\\profiler.py:\n   38      \"\"\"\n   39  \n   40:     def __init__(self, *streams):\n   41          if not streams:\n   42              raise TypeError('at least one stream must be given')\n   ..\n   62      \"\"\"\n   63  \n   64:     def __init__(self, app, stream=None,\n   65                   sort_by=('time', 'calls'), restrictions=()):\n   66          if not available:\n\nC:\\Users\\johan\\Documents\\GitHub\\sharepad\\venv\\Lib\\site-packages\\werkzeug\\contrib\\securecookie.py:\n  137      True\n  138  \n  139:     :param data: the initial data.  Either a dict, list of tuples or `None`.\n  140      :param secret_key: the secret key.  If not set `None` or not specified\n  141                         it has to be set before :meth:`serialize` is called.\n  142:     :param new: The initial value of the `new` flag.\n  143      \"\"\"\n  144  \n  ...\n  159      quote_base64 = True\n  160  \n  161:     def __init__(self, data=None, secret_key=None, new=True):\n  162:         ModificationTrackingDict.__init__(self, data or ())\n  163          # explicitly convert it into a bytestring because python 2.6\n  164          # no longer performs an implicit string conversion on hmac\n\nC:\\Users\\johan\\Documents\\GitHub\\sharepad\\venv\\Lib\\site-packages\\werkzeug\\contrib\\sessions.py:\n   87      __slots__ = ('modified',)\n   88  \n   89:     def __init__(self, *args, **kwargs):\n   90          def on_update(self):\n   91              self.modified = True\n   92          self.modified = False\n   93:         CallbackDict.__init__(self, on_update=on_update)\n   94          dict.update(self, *args, **kwargs)\n   95  \n   ..\n  115      __slots__ = ModificationTrackingDict.__slots__ + ('sid', 'new')\n  116  \n  117:     def __init__(self, data, sid, new=False):\n  118:         ModificationTrackingDict.__init__(self, data)\n  119          self.sid = sid\n  120          self.new = new\n  ...\n  147      \"\"\"\n  148  \n  149:     def __init__(self, session_class=None):\n  150          if session_class is None:\n  151              session_class = Session\n  ...\n  209      \"\"\"\n  210  \n  211:     def __init__(self, path=None, filename_template='werkzeug_%s.sess',\n  212                   session_class=None, renew_missing=False, mode=0644):\n  213:         SessionStore.__init__(self, session_class)\n  214          if path is None:\n  215              path = tempfile.gettempdir()\n  ...\n  308      \"\"\"\n  309  \n  310:     def __init__(self, app, store, cookie_name='session_id',\n  311                   cookie_age=None, cookie_expires=None, cookie_path='/',\n  312                   cookie_domain=None, cookie_secure=None,\n\nC:\\Users\\johan\\Documents\\GitHub\\sharepad\\venv\\Lib\\site-packages\\werkzeug\\contrib\\wrappers.py:\n   72      #: by default the :class:`ProtobufRequestMixin` will raise a\n   73      #: :exc:`~werkzeug.exceptions.BadRequest` if the object is not\n   74:     #: initialized.  You can bypass that check by setting this\n   75      #: attribute to `False`.\n   76:     protobuf_check_initialization = True\n   77  \n   78      def parse_protobuf(self, proto_type):\n   ..\n   88  \n   89          # Fail if not all required fields are set\n   90:         if self.protobuf_check_initialization and not obj.IsInitialized():\n   91              raise BadRequest(\"Partial Protobuf request\")\n   92  \n\nC:\\Users\\johan\\Documents\\GitHub\\sharepad\\venv\\Lib\\site-packages\\werkzeug\\debug\\__init__.py:\n   27      \"\"\"\n   28  \n   29:     def __init__(self, namespace):\n   30          self.console = Console(namespace)\n   31          self.id = 0\n   ..\n   52                          versions.\n   53      :param console_path: the URL for a general purpose console.\n   54:     :param console_init_func: the function that is executed before starting\n   55                                the general purpose console.  The return value\n   56:                               is used as initial namespace.\n   57      :param show_hidden_frames: by default hidden traceback frames are skipped.\n   58                                 You can show them by setting this parameter\n   ..\n   65      __module__ = 'werkzeug'\n   66  \n   67:     def __init__(self, app, evalex=False, request_key='werkzeug.request',\n   68:                  console_path='/console', console_init_func=None,\n   69                   show_hidden_frames=False,\n   70                   lodgeit_url='http://paste.pocoo.org/'):\n   71:         if not console_init_func:\n   72:             console_init_func = dict\n   73          self.app = app\n   74          self.evalex = evalex\n   ..\n   77          self.request_key = request_key\n   78          self.console_path = console_path\n   79:         self.console_init_func = console_init_func\n   80          self.show_hidden_frames = show_hidden_frames\n   81          self.lodgeit_url = lodgeit_url\n   ..\n  129          \"\"\"Display a standalone shell.\"\"\"\n  130          if 0 not in self.frames:\n  131:             self.frames[0] = _ConsoleFrame(self.console_init_func())\n  132          return Response(render_console_html(secret=self.secret),\n  133                          mimetype='text/html')\n\nC:\\Users\\johan\\Documents\\GitHub\\sharepad\\venv\\Lib\\site-packages\\werkzeug\\debug\\console.py:\n   23      \"\"\"A StringO version that HTML escapes on write.\"\"\"\n   24  \n   25:     def __init__(self):\n   26          self._buffer = []\n   27  \n   ..\n  116  class _ConsoleLoader(object):\n  117  \n  118:     def __init__(self):\n  119          self._storage = {}\n  120  \n  ...\n  144  class _InteractiveConsole(code.InteractiveInterpreter):\n  145  \n  146:     def __init__(self, globals, locals):\n  147:         code.InteractiveInterpreter.__init__(self, locals)\n  148          self.globals = dict(globals)\n  149          self.globals['dump'] = dump\n  ...\n  194      \"\"\"An interactive console.\"\"\"\n  195  \n  196:     def __init__(self, globals=None, locals=None):\n  197          if locals is None:\n  198              locals = {}\n\nC:\\Users\\johan\\Documents\\GitHub\\sharepad\\venv\\Lib\\site-packages\\werkzeug\\debug\\repr.py:\n  104  class DebugReprGenerator(object):\n  105  \n  106:     def __init__(self):\n  107          self._stack = []\n  108  \n\nC:\\Users\\johan\\Documents\\GitHub\\sharepad\\venv\\Lib\\site-packages\\werkzeug\\debug\\tbtools.py:\n   97  <div class=\"explanation\">\n   98  In this console you can execute Python expressions in the context of the\n   99: application.  The initial namespace was created by the debugger automatically.\n  100  </div>\n  101  <div class=\"console\"><div class=\"inner\">The Console requires JavaScript.</div></div>\n  ...\n  163      __slots__ = ('lineno', 'code', 'in_frame', 'current')\n  164  \n  165:     def __init__(self, lineno, code):\n  166          self.lineno = lineno\n  167          self.code = code\n  ...\n  189      \"\"\"Wraps a traceback.\"\"\"\n  190  \n  191:     def __init__(self, exc_type, exc_value, tb):\n  192          self.exc_type = exc_type\n  193          self.exc_value = exc_value\n  ...\n  339      \"\"\"A single frame in a traceback.\"\"\"\n  340  \n  341:     def __init__(self, exc_type, exc_value, tb):\n  342          self.lineno = tb.tb_lineno\n  343          self.function_name = tb.tb_frame.f_code.co_name\n  ...\n  380          lines = [Line(idx + 1, x) for idx, x in enumerate(self.sourcelines)]\n  381  \n  382:         # find function definition and mark lines\n  383          if hasattr(self.code, 'co_firstlineno'):\n  384              lineno = self.code.co_firstlineno - 1\n\nC:\\Users\\johan\\Documents\\GitHub\\sharepad\\venv\\Lib\\site-packages\\werkzeug\\debug\\shared\\debugger.js:\n  121  \n  122  /**\n  123:  * Helper function for shell initialization\n  124   */\n  125  function openShell(consoleNode, target, frameID) {\n\nC:\\Users\\johan\\Documents\\GitHub\\sharepad\\venv\\Lib\\site-packages\\werkzeug\\debug\\shared\\FONT_LICENSE:\n   14  the fonts.\n   15  \n   16: DEFINITIONS\n   17  \"Font Software\" refers to the set of files released by the Copyright\n   18  Holder(s) under this licence and clearly marked as such. This may\n\nC:\\Users\\johan\\Documents\\GitHub\\sharepad\\venv\\Lib\\site-packages\\werkzeug\\debug\\shared\\jquery.js:\n   20  e);if(e=e&&e.events){delete f.handle;f.events={};for(var h in e)for(var l in e[h])c.event.add(this,h,e[h][l],e[h][l].data)}}})}function Oa(a,b){b.src?c.ajax({url:b.src,async:false,dataType:\"script\"}):c.globalEval(b.text||b.textContent||b.innerHTML||\"\");b.parentNode&&b.parentNode.removeChild(b)}function oa(a,b,d){var e=b===\"width\"?a.offsetWidth:a.offsetHeight;if(d===\"border\")return e;c.each(b===\"width\"?Pa:Qa,function(){d||(e-=parseFloat(c.css(a,\"padding\"+this))||0);if(d===\"margin\")e+=parseFloat(c.css(a,\n   21  \"margin\"+this))||0;else e-=parseFloat(c.css(a,\"border\"+this+\"Width\"))||0});return e}function da(a,b,d,e){if(c.isArray(b)&&b.length)c.each(b,function(f,h){d||Ra.test(a)?e(a,h):da(a+\"[\"+(typeof h===\"object\"||c.isArray(h)?f:\"\")+\"]\",h,d,e)});else if(!d&&b!=null&&typeof b===\"object\")c.isEmptyObject(b)?e(a,\"\"):c.each(b,function(f,h){da(a+\"[\"+f+\"]\",h,d,e)});else e(a,b)}function S(a,b){var d={};c.each(pa.concat.apply([],pa.slice(0,b)),function(){d[this]=a});return d}function qa(a){if(!ea[a]){var b=c(\"<\"+\n   22: a+\">\").appendTo(\"body\"),d=b.css(\"display\");b.remove();if(d===\"none\"||d===\"\")d=\"block\";ea[a]=d}return ea[a]}function fa(a){return c.isWindow(a)?a:a.nodeType===9?a.defaultView||a.parentWindow:false}var t=E.document,c=function(){function a(){if(!b.isReady){try{t.documentElement.doScroll(\"left\")}catch(j){setTimeout(a,1);return}b.ready()}}var b=function(j,s){return new b.fn.init(j,s)},d=E.jQuery,e=E.$,f,h=/^(?:[^<]*(<[\\w\\W]+>)[^>]*$|#([\\w\\-]+)$)/,l=/\\S/,k=/^\\s+/,o=/\\s+$/,x=/\\W/,r=/\\d/,A=/^<(\\w+)\\s*\\/?>(?:<\\/\\1>)?$/,\n   23: C=/^[\\],:{}\\s]*$/,J=/\\\\(?:[\"\\\\\\/bfnrt]|u[0-9a-fA-F]{4})/g,w=/\"[^\"\\\\\\n\\r]*\"|true|false|null|-?\\d+(?:\\.\\d*)?(?:[eE][+\\-]?\\d+)?/g,I=/(?:^|:|,)(?:\\s*\\[)+/g,L=/(webkit)[ \\/]([\\w.]+)/,g=/(opera)(?:.*version)?[ \\/]([\\w.]+)/,i=/(msie) ([\\w.]+)/,n=/(mozilla)(?:.*? rv:([\\w.]+))?/,m=navigator.userAgent,p=false,q=[],u,y=Object.prototype.toString,F=Object.prototype.hasOwnProperty,M=Array.prototype.push,N=Array.prototype.slice,O=String.prototype.trim,D=Array.prototype.indexOf,R={};b.fn=b.prototype={init:function(j,\n   24  s){var v,z,H;if(!j)return this;if(j.nodeType){this.context=this[0]=j;this.length=1;return this}if(j===\"body\"&&!s&&t.body){this.context=t;this[0]=t.body;this.selector=\"body\";this.length=1;return this}if(typeof j===\"string\")if((v=h.exec(j))&&(v[1]||!s))if(v[1]){H=s?s.ownerDocument||s:t;if(z=A.exec(j))if(b.isPlainObject(s)){j=[t.createElement(z[1])];b.fn.attr.call(j,s,true)}else j=[H.createElement(z[1])];else{z=b.buildFragment([v[1]],[H]);j=(z.cacheable?z.fragment.cloneNode(true):z.fragment).childNodes}return b.merge(this,\n   25  j)}else{if((z=t.getElementById(v[2]))&&z.parentNode){if(z.id!==v[2])return f.find(j);this.length=1;this[0]=z}this.context=t;this.selector=j;return this}else if(!s&&!x.test(j)){this.selector=j;this.context=t;j=t.getElementsByTagName(j);return b.merge(this,j)}else return!s||s.jquery?(s||f).find(j):b(s).find(j);else if(b.isFunction(j))return f.ready(j);if(j.selector!==B){this.selector=j.selector;this.context=j.context}return b.makeArray(j,this)},selector:\"\",jquery:\"1.4.4\",length:0,size:function(){return this.length},\n   26  toArray:function(){return N.call(this,0)},get:function(j){return j==null?this.toArray():j<0?this.slice(j)[0]:this[j]},pushStack:function(j,s,v){var z=b();b.isArray(j)?M.apply(z,j):b.merge(z,j);z.prevObject=this;z.context=this.context;if(s===\"find\")z.selector=this.selector+(this.selector?\" \":\"\")+v;else if(s)z.selector=this.selector+\".\"+s+\"(\"+v+\")\";return z},each:function(j,s){return b.each(this,j,s)},ready:function(j){b.bindReady();if(b.isReady)j.call(t,b);else q&&q.push(j);return this},eq:function(j){return j===\n   27: -1?this.slice(j):this.slice(j,+j+1)},first:function(){return this.eq(0)},last:function(){return this.eq(-1)},slice:function(){return this.pushStack(N.apply(this,arguments),\"slice\",N.call(arguments).join(\",\"))},map:function(j){return this.pushStack(b.map(this,function(s,v){return j.call(s,v,s)}))},end:function(){return this.prevObject||b(null)},push:M,sort:[].sort,splice:[].splice};b.fn.init.prototype=b.fn;b.extend=b.fn.extend=function(){var j,s,v,z,H,G=arguments[0]||{},K=1,Q=arguments.length,ga=false;\n   28  if(typeof G===\"boolean\"){ga=G;G=arguments[1]||{};K=2}if(typeof G!==\"object\"&&!b.isFunction(G))G={};if(Q===K){G=this;--K}for(;K<Q;K++)if((j=arguments[K])!=null)for(s in j){v=G[s];z=j[s];if(G!==z)if(ga&&z&&(b.isPlainObject(z)||(H=b.isArray(z)))){if(H){H=false;v=v&&b.isArray(v)?v:[]}else v=v&&b.isPlainObject(v)?v:{};G[s]=b.extend(ga,v,z)}else if(z!==B)G[s]=z}return G};b.extend({noConflict:function(j){E.$=e;if(j)E.jQuery=d;return b},isReady:false,readyWait:1,ready:function(j){j===true&&b.readyWait--;\n   29  if(!b.readyWait||j!==true&&!b.isReady){if(!t.body)return setTimeout(b.ready,1);b.isReady=true;if(!(j!==true&&--b.readyWait>0))if(q){var s=0,v=q;for(q=null;j=v[s++];)j.call(t,b);b.fn.trigger&&b(t).trigger(\"ready\").unbind(\"ready\")}}},bindReady:function(){if(!p){p=true;if(t.readyState===\"complete\")return setTimeout(b.ready,1);if(t.addEventListener){t.addEventListener(\"DOMContentLoaded\",u,false);E.addEventListener(\"load\",b.ready,false)}else if(t.attachEvent){t.attachEvent(\"onreadystatechange\",u);E.attachEvent(\"onload\",\n   ..\n  156  c.timers,b=0;b<a.length;b++)a[b]()||a.splice(b--,1);a.length||c.fx.stop()},interval:13,stop:function(){clearInterval(ba);ba=null},speeds:{slow:600,fast:200,_default:400},step:{opacity:function(a){c.style(a.elem,\"opacity\",a.now)},_default:function(a){if(a.elem.style&&a.elem.style[a.prop]!=null)a.elem.style[a.prop]=(a.prop===\"width\"||a.prop===\"height\"?Math.max(0,a.now):a.now)+a.unit;else a.elem[a.prop]=a.now}}});if(c.expr&&c.expr.filters)c.expr.filters.animated=function(a){return c.grep(c.timers,function(b){return a===\n  157  b.elem}).length};var xb=/^t(?:able|d|h)$/i,Ia=/^(?:body|html)$/i;c.fn.offset=\"getBoundingClientRect\"in t.documentElement?function(a){var b=this[0],d;if(a)return this.each(function(l){c.offset.setOffset(this,a,l)});if(!b||!b.ownerDocument)return null;if(b===b.ownerDocument.body)return c.offset.bodyOffset(b);try{d=b.getBoundingClientRect()}catch(e){}var f=b.ownerDocument,h=f.documentElement;if(!d||!c.contains(h,b))return d||{top:0,left:0};b=f.body;f=fa(f);return{top:d.top+(f.pageYOffset||c.support.boxModel&&\n  158: h.scrollTop||b.scrollTop)-(h.clientTop||b.clientTop||0),left:d.left+(f.pageXOffset||c.support.boxModel&&h.scrollLeft||b.scrollLeft)-(h.clientLeft||b.clientLeft||0)}}:function(a){var b=this[0];if(a)return this.each(function(x){c.offset.setOffset(this,a,x)});if(!b||!b.ownerDocument)return null;if(b===b.ownerDocument.body)return c.offset.bodyOffset(b);c.offset.initialize();var d,e=b.offsetParent,f=b.ownerDocument,h=f.documentElement,l=f.body;d=(f=f.defaultView)?f.getComputedStyle(b,null):b.currentStyle;\n  159  for(var k=b.offsetTop,o=b.offsetLeft;(b=b.parentNode)&&b!==l&&b!==h;){if(c.offset.supportsFixedPosition&&d.position===\"fixed\")break;d=f?f.getComputedStyle(b,null):b.currentStyle;k-=b.scrollTop;o-=b.scrollLeft;if(b===e){k+=b.offsetTop;o+=b.offsetLeft;if(c.offset.doesNotAddBorder&&!(c.offset.doesAddBorderForTableAndCells&&xb.test(b.nodeName))){k+=parseFloat(d.borderTopWidth)||0;o+=parseFloat(d.borderLeftWidth)||0}e=b.offsetParent}if(c.offset.subtractsBorderForOverflowNotVisible&&d.overflow!==\"visible\"){k+=\n  160: parseFloat(d.borderTopWidth)||0;o+=parseFloat(d.borderLeftWidth)||0}d=d}if(d.position===\"relative\"||d.position===\"static\"){k+=l.offsetTop;o+=l.offsetLeft}if(c.offset.supportsFixedPosition&&d.position===\"fixed\"){k+=Math.max(h.scrollTop,l.scrollTop);o+=Math.max(h.scrollLeft,l.scrollLeft)}return{top:k,left:o}};c.offset={initialize:function(){var a=t.body,b=t.createElement(\"div\"),d,e,f,h=parseFloat(c.css(a,\"marginTop\"))||0;c.extend(b.style,{position:\"absolute\",top:0,left:0,margin:0,border:0,width:\"1px\",\n  161  height:\"1px\",visibility:\"hidden\"});b.innerHTML=\"<div style='position:absolute;top:0;left:0;margin:0;border:5px solid #000;padding:0;width:1px;height:1px;'><div></div></div><table style='position:absolute;top:0;left:0;margin:0;border:5px solid #000;padding:0;width:1px;height:1px;' cellpadding='0' cellspacing='0'><tr><td></td></tr></table>\";a.insertBefore(b,a.firstChild);d=b.firstChild;e=d.firstChild;f=d.nextSibling.firstChild.firstChild;this.doesNotAddBorder=e.offsetTop!==5;this.doesAddBorderForTableAndCells=\n  162: f.offsetTop===5;e.style.position=\"fixed\";e.style.top=\"20px\";this.supportsFixedPosition=e.offsetTop===20||e.offsetTop===15;e.style.position=e.style.top=\"\";d.style.overflow=\"hidden\";d.style.position=\"relative\";this.subtractsBorderForOverflowNotVisible=e.offsetTop===-5;this.doesNotIncludeMarginInBodyOffset=a.offsetTop!==h;a.removeChild(b);c.offset.initialize=c.noop},bodyOffset:function(a){var b=a.offsetTop,d=a.offsetLeft;c.offset.initialize();if(c.offset.doesNotIncludeMarginInBodyOffset){b+=parseFloat(c.css(a,\n  163  \"marginTop\"))||0;d+=parseFloat(c.css(a,\"marginLeft\"))||0}return{top:b,left:d}},setOffset:function(a,b,d){var e=c.css(a,\"position\");if(e===\"static\")a.style.position=\"relative\";var f=c(a),h=f.offset(),l=c.css(a,\"top\"),k=c.css(a,\"left\"),o=e===\"absolute\"&&c.inArray(\"auto\",[l,k])>-1;e={};var x={};if(o)x=f.position();l=o?x.top:parseInt(l,10)||0;k=o?x.left:parseInt(k,10)||0;if(c.isFunction(b))b=b.call(a,d,h);if(b.top!=null)e.top=b.top-h.top+l;if(b.left!=null)e.left=b.left-h.left+k;\"using\"in b?b.using.call(a,\n  164  e):f.css(e)}};c.fn.extend({position:function(){if(!this[0])return null;var a=this[0],b=this.offsetParent(),d=this.offset(),e=Ia.test(b[0].nodeName)?{top:0,left:0}:b.offset();d.top-=parseFloat(c.css(a,\"marginTop\"))||0;d.left-=parseFloat(c.css(a,\"marginLeft\"))||0;e.top+=parseFloat(c.css(b[0],\"borderTopWidth\"))||0;e.left+=parseFloat(c.css(b[0],\"borderLeftWidth\"))||0;return{top:d.top-e.top,left:d.left-e.left}},offsetParent:function(){return this.map(function(){for(var a=this.offsetParent||t.body;a&&!Ia.test(a.nodeName)&&\n\nC:\\Users\\johan\\Documents\\GitHub\\sharepad\\venv\\Lib\\site-packages\\werkzeug\\testsuite\\__init__.py:\n   74  class _ExceptionCatcher(object):\n   75  \n   76:     def __init__(self, test_case, exc_type):\n   77          self.test_case = test_case\n   78          self.exc_type = exc_type\n\nC:\\Users\\johan\\Documents\\GitHub\\sharepad\\venv\\Lib\\site-packages\\werkzeug\\testsuite\\debug.py:\n  104              x = 42\n  105              y = 23\n  106:             def __init__(self):\n  107                  self.z = 15\n  108  \n\nC:\\Users\\johan\\Documents\\GitHub\\sharepad\\venv\\Lib\\site-packages\\werkzeug\\testsuite\\test.py:\n  104          assert 'test' in c.cookie_jar._cookies['localhost.local']['/']\n  105  \n  106:     def test_no_initial_cookie(self):\n  107          c = Client(cookie_app)\n  108          appiter, code, headers = c.open()\n\nC:\\Users\\johan\\Documents\\GitHub\\sharepad\\venv\\Lib\\site-packages\\werkzeug\\testsuite\\utils.py:\n  134          got_close = []\n  135          class CloseIter(object):\n  136:             def __init__(self):\n  137                  self.iterated = False\n  138              def __iter__(self):\n\nC:\\Users\\johan\\Documents\\GitHub\\sharepad\\venv\\Lib\\site-packages\\werkzeug\\testsuite\\wrappers.py:\n   29      \"\"\"\n   30  \n   31:     def __init__(self, response, status, headers):\n   32:         wrappers.BaseResponse.__init__(self, response, status, headers)\n   33          self.body_data = pickle.loads(self.data)\n   34  \n\nC:\\Users\\johan\\Documents\\GitHub\\sharepad\\venv\\Lib\\site-packages\\Werkzeug-0.8.3-py2.7.egg-info\\installed-files.txt:\n   18  ..\\werkzeug\\wsgi.py\n   19  ..\\werkzeug\\_internal.py\n   20: ..\\werkzeug\\__init__.py\n   21  ..\\werkzeug\\debug\\console.py\n   22  ..\\werkzeug\\debug\\repr.py\n   23  ..\\werkzeug\\debug\\tbtools.py\n   24: ..\\werkzeug\\debug\\__init__.py\n   25  ..\\werkzeug\\contrib\\atom.py\n   26  ..\\werkzeug\\contrib\\cache.py\n   ..\n   36  ..\\werkzeug\\contrib\\testtools.py\n   37  ..\\werkzeug\\contrib\\wrappers.py\n   38: ..\\werkzeug\\contrib\\__init__.py\n   39  ..\\werkzeug\\testsuite\\compat.py\n   40  ..\\werkzeug\\testsuite\\datastructures.py\n   ..\n   53  ..\\werkzeug\\testsuite\\wrappers.py\n   54  ..\\werkzeug\\testsuite\\wsgi.py\n   55: ..\\werkzeug\\testsuite\\__init__.py\n   56  ..\\werkzeug\\testsuite\\contrib\\cache.py\n   57  ..\\werkzeug\\testsuite\\contrib\\fixers.py\n   ..\n   60  ..\\werkzeug\\testsuite\\contrib\\sessions.py\n   61  ..\\werkzeug\\testsuite\\contrib\\wrappers.py\n   62: ..\\werkzeug\\testsuite\\contrib\\__init__.py\n   63  ..\\werkzeug\\debug\\shared\\FONT_LICENSE\n   64  ..\\werkzeug\\debug\\shared\\console.png\n   ..\n  112  ..\\werkzeug\\wsgi.pyc\n  113  ..\\werkzeug\\_internal.pyc\n  114: ..\\werkzeug\\__init__.pyc\n  115  ..\\werkzeug\\debug\\console.pyc\n  116  ..\\werkzeug\\debug\\repr.pyc\n  117  ..\\werkzeug\\debug\\tbtools.pyc\n  118: ..\\werkzeug\\debug\\__init__.pyc\n  119  ..\\werkzeug\\contrib\\atom.pyc\n  120  ..\\werkzeug\\contrib\\cache.pyc\n  ...\n  130  ..\\werkzeug\\contrib\\testtools.pyc\n  131  ..\\werkzeug\\contrib\\wrappers.pyc\n  132: ..\\werkzeug\\contrib\\__init__.pyc\n  133  ..\\werkzeug\\testsuite\\compat.pyc\n  134  ..\\werkzeug\\testsuite\\datastructures.pyc\n  ...\n  147  ..\\werkzeug\\testsuite\\wrappers.pyc\n  148  ..\\werkzeug\\testsuite\\wsgi.pyc\n  149: ..\\werkzeug\\testsuite\\__init__.pyc\n  150  ..\\werkzeug\\testsuite\\contrib\\cache.pyc\n  151  ..\\werkzeug\\testsuite\\contrib\\fixers.pyc\n  ...\n  154  ..\\werkzeug\\testsuite\\contrib\\sessions.pyc\n  155  ..\\werkzeug\\testsuite\\contrib\\wrappers.pyc\n  156: ..\\werkzeug\\testsuite\\contrib\\__init__.pyc\n  157  ..\\werkzeug\\testsuite\\multipart\\collect.pyc\n  158  .\\\n\nC:\\Users\\johan\\Documents\\GitHub\\sharepad\\venv\\Lib\\site-packages\\Werkzeug-0.8.3-py2.7.egg-info\\SOURCES.txt:\n  101  examples/contrib/securecookie.py\n  102  examples/contrib/sessions.py\n  103: examples/coolmagic/__init__.py\n  104  examples/coolmagic/application.py\n  105  examples/coolmagic/helpers.py\n  ...\n  110  examples/coolmagic/templates/static/index.html\n  111  examples/coolmagic/templates/static/not_found.html\n  112: examples/coolmagic/views/__init__.py\n  113  examples/coolmagic/views/static.py\n  114  examples/couchy/README\n  115: examples/couchy/__init__.py\n  116  examples/couchy/application.py\n  117  examples/couchy/models.py\n  ...\n  124  examples/couchy/templates/new.html\n  125  examples/couchy/templates/not_found.html\n  126: examples/cupoftee/__init__.py\n  127  examples/cupoftee/application.py\n  128  examples/cupoftee/db.py\n  ...\n  142  examples/cupoftee/templates/server.html\n  143  examples/cupoftee/templates/serverlist.html\n  144: examples/i18nurls/__init__.py\n  145  examples/i18nurls/application.py\n  146  examples/i18nurls/urls.py\n  ...\n  152  examples/partial/README\n  153  examples/partial/complex_routing.py\n  154: examples/plnt/__init__.py\n  155  examples/plnt/database.py\n  156  examples/plnt/sync.py\n  ...\n  168  examples/shortly/templates/new_url.html\n  169  examples/shortly/templates/short_link_details.html\n  170: examples/shorty/__init__.py\n  171  examples/shorty/application.py\n  172  examples/shorty/models.py\n  ...\n  179  examples/shorty/templates/new.html\n  180  examples/shorty/templates/not_found.html\n  181: examples/simplewiki/__init__.py\n  182  examples/simplewiki/actions.py\n  183  examples/simplewiki/application.py\n  ...\n  199  examples/webpylike/example.py\n  200  examples/webpylike/webpylike.py\n  201: werkzeug/__init__.py\n  202  werkzeug/_internal.py\n  203  werkzeug/datastructures.py\n  ...\n  219  werkzeug/wrappers.py\n  220  werkzeug/wsgi.py\n  221: werkzeug/contrib/__init__.py\n  222  werkzeug/contrib/atom.py\n  223  werkzeug/contrib/cache.py\n  ...\n  233  werkzeug/contrib/testtools.py\n  234  werkzeug/contrib/wrappers.py\n  235: werkzeug/debug/__init__.py\n  236  werkzeug/debug/console.py\n  237  werkzeug/debug/repr.py\n  ...\n  246  werkzeug/debug/shared/style.css\n  247  werkzeug/debug/shared/ubuntu.ttf\n  248: werkzeug/testsuite/__init__.py\n  249  werkzeug/testsuite/compat.py\n  250  werkzeug/testsuite/datastructures.py\n  ...\n  263  werkzeug/testsuite/wrappers.py\n  264  werkzeug/testsuite/wsgi.py\n  265: werkzeug/testsuite/contrib/__init__.py\n  266  werkzeug/testsuite/contrib/cache.py\n  267  werkzeug/testsuite/contrib/fixers.py\n\n980 matches across 173 files\n\n\nSearching 536 files for \"chourico\"\n\nC:\\Users\\johan\\Documents\\GitHub\\sharepad\\sharepad_db.py:\n   50      [\"bacon\", \"Bacon\", \"meat_fish_and_poultry\"],\n   51      [\"biltong\", \"Biltong\", \"meat_fish_and_poultry\"],\n   52:     [\"chourico\", \"Chourico\", \"meat_fish_and_poultry\"],\n   53      [\"egg_x2\", \"Egg [x2]\", \"meat_fish_and_poultry\"],\n   54      [\"ham\", \"Ham\", \"meat_fish_and_poultry\"],\n\nC:\\Users\\johan\\Documents\\GitHub\\sharepad\\templates\\app.html:\n  125                        <input type=\"checkbox\" name=\"meat_fish_and_poultry\" id=\"meat_fish_and_poultry_004\" value=\"bacon\"/>\n  126  \n  127:                       <label for=\"meat_fish_and_poultry_005\">Chourico</label>\n  128                        <input type=\"checkbox\" name=\"meat_fish_and_poultry\" id=\"meat_fish_and_poultry_005\" value=\"chourizo\"/>\n  129  \n\nC:\\Users\\johan\\Documents\\GitHub\\sharepad\\templates\\share.html:\n  115          </li>\n  116          <li>\n  117:           <label for=\"meat_fish_and_poultry\">Chourico</label>\n  118:           <input type=\"checkbox\" name=\"meat_fish_and_poultry\" value=\"chourico\" />\n  119          </li>\n  120          <li>\n\n5 matches across 3 files\n\n\nSearching 536 files for \"chourizo\"\n\nC:\\Users\\johan\\Documents\\GitHub\\sharepad\\templates\\app.html:\n  126  \n  127                        <label for=\"meat_fish_and_poultry_005\">Chourico</label>\n  128:                       <input type=\"checkbox\" name=\"meat_fish_and_poultry\" id=\"meat_fish_and_poultry_005\" value=\"chourico\"/>\n  129  \n  130                        <label for=\"meat_fish_and_poultry_006\">Egg (x2)</label>\n\n1 match in 1 file\n\n\nSearching 537 files for \"chouric\"\n\nC:\\Users\\johan\\Documents\\GitHub\\sharepad\\sharepad_db.py:\n   50      [\"bacon\", \"Bacon\", \"meat_fish_and_poultry\"],\n   51      [\"biltong\", \"Biltong\", \"meat_fish_and_poultry\"],\n   52:     [\"chourico\", \"Chourico\", \"meat_fish_and_poultry\"],\n   53      [\"egg_x2\", \"Egg [x2]\", \"meat_fish_and_poultry\"],\n   54      [\"ham\", \"Ham\", \"meat_fish_and_poultry\"],\n\nC:\\Users\\johan\\Documents\\GitHub\\sharepad\\templates\\app.html:\n  125                          <input type=\"checkbox\" name=\"meat_fish_and_poultry\" id=\"meat_fish_and_poultry_004\" value=\"bacon\"/>\n  126  \n  127:                         <label for=\"meat_fish_and_poultry_005\">Chourico</label>\n  128:                         <input type=\"checkbox\" name=\"meat_fish_and_poultry\" id=\"meat_fish_and_poultry_005\" value=\"chouriccco\"/>\n  129  \n  130                          <label for=\"meat_fish_and_poultry_006\">Egg (x2)</label>\n\nC:\\Users\\johan\\Documents\\GitHub\\sharepad\\templates\\share.html:\n  115          </li>\n  116          <li>\n  117:           <label for=\"meat_fish_and_poultry\">Chourico</label>\n  118:           <input type=\"checkbox\" name=\"meat_fish_and_poultry\" value=\"chourico\" />\n  119          </li>\n  120          <li>\n\n6 matches across 3 files\n\n\nSearching 537 files for \"chouri\"\n\nC:\\Users\\johan\\Documents\\GitHub\\sharepad\\sharepad_db.py:\n   50      [\"bacon\", \"Bacon\", \"meat_fish_and_poultry\"],\n   51      [\"biltong\", \"Biltong\", \"meat_fish_and_poultry\"],\n   52:     [\"chourico\", \"Chourico\", \"meat_fish_and_poultry\"],\n   53      [\"egg_x2\", \"Egg [x2]\", \"meat_fish_and_poultry\"],\n   54      [\"ham\", \"Ham\", \"meat_fish_and_poultry\"],\n\nC:\\Users\\johan\\Documents\\GitHub\\sharepad\\templates\\app.html:\n  125                        <input type=\"checkbox\" name=\"meat_fish_and_poultry\" id=\"meat_fish_and_poultry_004\" value=\"bacon\"/>\n  126  \n  127:                       <label for=\"meat_fish_and_poultry_005\">Chourico</label>\n  128:                       <input type=\"checkbox\" name=\"meat_fish_and_poultry\" id=\"meat_fish_and_poultry_005\" value=\"chourizo\"/>\n  129  \n  130                        <label for=\"meat_fish_and_poultry_006\">Egg (x2)</label>\n\nC:\\Users\\johan\\Documents\\GitHub\\sharepad\\templates\\share.html:\n  115          </li>\n  116          <li>\n  117:           <label for=\"meat_fish_and_poultry\">Chourico</label>\n  118:           <input type=\"checkbox\" name=\"meat_fish_and_poultry\" value=\"chourico\" />\n  119          </li>\n  120          <li>\n\n6 matches across 3 files\n",
			"settings":
			{
				"buffer_size": 186087,
				"line_ending": "Windows",
				"name": "Find Results",
				"scratch": true
			}
		},
		{
			"file": "templates/app.html",
			"settings":
			{
				"buffer_size": 16145,
				"line_ending": "Windows"
			}
		},
		{
			"file": "sharepad_db.py",
			"settings":
			{
				"buffer_size": 8300,
				"line_ending": "Windows"
			}
		},
		{
			"contents": "  {% extends \"layout.html\" %}\n  {% block body %}\n  <h1>Share your own...</h1>\n  <img alt=\"Andiccio24 logo\" src=\"/static/andiccio24-logo.png\"/>\n  <div class=\"message\">\n    Here you go!\n  </div>\n  <ul class=\"pizza\">\n    {%if pizza is none %}\n    Something went wrong...\n    {% else %}  \n    {% for k in (pizza.keys()) %}\n    <h2>{{ k }}</h2>\n    {% for v in (pizza[k]) %}\n    {{ v }}\n    {% endfor %}\n    {% endfor %}\n    {% endif %}\n\n  </ul>\n  <div class=\"social\">\n    Share this pizza on\n    <ul class=\"icons\">\n      <li>Facebook</li>\n      <li>Twitter</li>\n    </ul>\n  </div>\n  {% endblock %}\n\n",
			"file": "templates/random.html",
			"file_size": 624,
			"file_write_time": 130073875114880487,
			"settings":
			{
				"buffer_size": 595,
				"line_ending": "Windows"
			}
		}
	],
	"build_system": "",
	"command_palette":
	{
		"height": 311.0,
		"selected_items":
		[
			[
				"Package Control: ",
				"Package Control: Install Package"
			],
			[
				"Package Control: disc",
				"Package Control: Discover Packages"
			],
			[
				"Package Control:",
				"Package Control: Discover Packages"
			]
		],
		"width": 512.0
	},
	"console":
	{
		"height": 174.0
	},
	"distraction_free":
	{
		"menu_visible": true,
		"show_minimap": false,
		"show_open_files": false,
		"show_tabs": false,
		"side_bar_visible": false,
		"status_bar_visible": false
	},
	"file_history":
	[
		"/C/Users/johan/Documents/GitHub/sharepad/templates/index.html",
		"/C/Users/johan/Documents/GitHub/sharepad/sharepad.sublime-project",
		"/C/Users/johan/AppData/Roaming/Sublime Text 2/Packages/User/Preferences.sublime-settings"
	],
	"find":
	{
		"height": 35.0
	},
	"find_in_files":
	{
		"height": 105.0,
		"where_history":
		[
			""
		]
	},
	"find_state":
	{
		"case_sensitive": false,
		"find_history":
		[
			"chouri",
			"chouric",
			"add_",
			"bacon",
			"SELECT",
			"rows",
			"fetchall",
			"get_ra",
			"random",
			"chourizo",
			"chourico",
			"init"
		],
		"highlight": true,
		"in_selection": false,
		"preserve_case": false,
		"regex": false,
		"replace_history":
		[
		],
		"reverse": false,
		"show_context": true,
		"use_buffer2": true,
		"whole_word": false,
		"wrap": true
	},
	"groups":
	[
		{
			"selected": 4,
			"sheets":
			[
				{
					"buffer": 0,
					"file": "sharepad.py",
					"settings":
					{
						"buffer_size": 3297,
						"regions":
						{
						},
						"selection":
						[
							[
								2082,
								2082
							]
						],
						"settings":
						{
							"syntax": "Packages/Python/Python.tmLanguage",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 1679.0,
						"zoom_level": 1.0
					},
					"type": "text"
				},
				{
					"buffer": 1,
					"settings":
					{
						"buffer_size": 186087,
						"regions":
						{
							"match":
							{
								"flags": 112,
								"regions":
								[
									[
										266,
										270
									],
									[
										422,
										426
									],
									[
										537,
										541
									],
									[
										859,
										863
									],
									[
										1154,
										1158
									],
									[
										1300,
										1304
									],
									[
										1325,
										1329
									],
									[
										1363,
										1367
									],
									[
										1403,
										1407
									],
									[
										1526,
										1530
									],
									[
										1748,
										1752
									],
									[
										2038,
										2042
									],
									[
										2379,
										2383
									],
									[
										2430,
										2434
									],
									[
										2625,
										2629
									],
									[
										2675,
										2679
									],
									[
										2965,
										2969
									],
									[
										3110,
										3114
									],
									[
										3352,
										3356
									],
									[
										3618,
										3622
									],
									[
										3747,
										3751
									],
									[
										4060,
										4064
									],
									[
										4349,
										4353
									],
									[
										4710,
										4714
									],
									[
										4967,
										4971
									],
									[
										5278,
										5282
									],
									[
										5513,
										5517
									],
									[
										5707,
										5711
									],
									[
										5719,
										5723
									],
									[
										5906,
										5910
									],
									[
										6151,
										6155
									],
									[
										6339,
										6343
									],
									[
										6390,
										6394
									],
									[
										6504,
										6508
									],
									[
										6524,
										6528
									],
									[
										6579,
										6583
									],
									[
										6612,
										6616
									],
									[
										6668,
										6672
									],
									[
										6684,
										6688
									],
									[
										6892,
										6896
									],
									[
										7167,
										7171
									],
									[
										7368,
										7372
									],
									[
										7529,
										7533
									],
									[
										7633,
										7637
									],
									[
										7648,
										7652
									],
									[
										7772,
										7776
									],
									[
										7947,
										7951
									],
									[
										7978,
										7982
									],
									[
										7993,
										7997
									],
									[
										8050,
										8054
									],
									[
										8065,
										8069
									],
									[
										8156,
										8160
									],
									[
										8370,
										8374
									],
									[
										8409,
										8413
									],
									[
										8532,
										8536
									],
									[
										8577,
										8581
									],
									[
										8909,
										8913
									],
									[
										9146,
										9150
									],
									[
										9245,
										9249
									],
									[
										9308,
										9312
									],
									[
										9527,
										9531
									],
									[
										9574,
										9578
									],
									[
										9656,
										9660
									],
									[
										9706,
										9710
									],
									[
										9771,
										9775
									],
									[
										10141,
										10145
									],
									[
										10436,
										10440
									],
									[
										10448,
										10452
									],
									[
										10607,
										10611
									],
									[
										10762,
										10766
									],
									[
										10903,
										10907
									],
									[
										11159,
										11163
									],
									[
										11417,
										11421
									],
									[
										11752,
										11756
									],
									[
										12155,
										12159
									],
									[
										12505,
										12509
									],
									[
										12536,
										12540
									],
									[
										12714,
										12718
									],
									[
										12989,
										12993
									],
									[
										12995,
										12999
									],
									[
										13390,
										13394
									],
									[
										13416,
										13420
									],
									[
										13422,
										13426
									],
									[
										13559,
										13563
									],
									[
										13635,
										13639
									],
									[
										13977,
										13981
									],
									[
										14102,
										14106
									],
									[
										14176,
										14180
									],
									[
										14361,
										14365
									],
									[
										14537,
										14541
									],
									[
										14803,
										14807
									],
									[
										14892,
										14896
									],
									[
										14898,
										14902
									],
									[
										15013,
										15017
									],
									[
										15305,
										15309
									],
									[
										15310,
										15314
									],
									[
										15433,
										15437
									],
									[
										15735,
										15739
									],
									[
										16036,
										16040
									],
									[
										16224,
										16228
									],
									[
										16501,
										16505
									],
									[
										16600,
										16604
									],
									[
										16809,
										16813
									],
									[
										16936,
										16940
									],
									[
										17100,
										17104
									],
									[
										17259,
										17263
									],
									[
										17417,
										17421
									],
									[
										17589,
										17593
									],
									[
										17799,
										17803
									],
									[
										17812,
										17816
									],
									[
										17858,
										17862
									],
									[
										17869,
										17873
									],
									[
										18063,
										18067
									],
									[
										18266,
										18270
									],
									[
										18450,
										18454
									],
									[
										18848,
										18852
									],
									[
										19167,
										19171
									],
									[
										19591,
										19595
									],
									[
										19852,
										19856
									],
									[
										19994,
										19998
									],
									[
										20162,
										20166
									],
									[
										20391,
										20395
									],
									[
										20558,
										20562
									],
									[
										20616,
										20620
									],
									[
										20905,
										20909
									],
									[
										21028,
										21032
									],
									[
										21088,
										21092
									],
									[
										21351,
										21355
									],
									[
										21435,
										21439
									],
									[
										21537,
										21541
									],
									[
										21588,
										21592
									],
									[
										21683,
										21687
									],
									[
										21744,
										21748
									],
									[
										21938,
										21942
									],
									[
										22003,
										22007
									],
									[
										22205,
										22209
									],
									[
										22216,
										22220
									],
									[
										22255,
										22259
									],
									[
										22293,
										22297
									],
									[
										22315,
										22319
									],
									[
										22348,
										22352
									],
									[
										22360,
										22364
									],
									[
										22396,
										22400
									],
									[
										22424,
										22428
									],
									[
										22434,
										22438
									],
									[
										22478,
										22482
									],
									[
										22498,
										22502
									],
									[
										22626,
										22630
									],
									[
										22976,
										22980
									],
									[
										23051,
										23055
									],
									[
										23067,
										23071
									],
									[
										23477,
										23481
									],
									[
										23714,
										23718
									],
									[
										23908,
										23912
									],
									[
										24078,
										24082
									],
									[
										24256,
										24260
									],
									[
										24536,
										24540
									],
									[
										24565,
										24569
									],
									[
										24969,
										24973
									],
									[
										25211,
										25215
									],
									[
										25352,
										25356
									],
									[
										25646,
										25650
									],
									[
										25804,
										25808
									],
									[
										25957,
										25961
									],
									[
										26191,
										26195
									],
									[
										26275,
										26279
									],
									[
										26374,
										26378
									],
									[
										26507,
										26511
									],
									[
										26853,
										26857
									],
									[
										27181,
										27185
									],
									[
										27215,
										27219
									],
									[
										27378,
										27382
									],
									[
										27415,
										27419
									],
									[
										27431,
										27435
									],
									[
										27702,
										27706
									],
									[
										27747,
										27751
									],
									[
										27837,
										27841
									],
									[
										28082,
										28086
									],
									[
										28142,
										28146
									],
									[
										28191,
										28195
									],
									[
										28237,
										28241
									],
									[
										28280,
										28284
									],
									[
										28331,
										28335
									],
									[
										28375,
										28379
									],
									[
										28417,
										28421
									],
									[
										28460,
										28464
									],
									[
										28505,
										28509
									],
									[
										28552,
										28556
									],
									[
										28598,
										28602
									],
									[
										28781,
										28785
									],
									[
										29012,
										29016
									],
									[
										29229,
										29233
									],
									[
										29446,
										29450
									],
									[
										29589,
										29593
									],
									[
										29867,
										29871
									],
									[
										30069,
										30073
									],
									[
										30089,
										30093
									],
									[
										30397,
										30401
									],
									[
										30417,
										30421
									],
									[
										30677,
										30681
									],
									[
										30915,
										30919
									],
									[
										31085,
										31089
									],
									[
										31285,
										31289
									],
									[
										31516,
										31520
									],
									[
										31698,
										31702
									],
									[
										31975,
										31979
									],
									[
										32174,
										32178
									],
									[
										32299,
										32303
									],
									[
										32366,
										32370
									],
									[
										32604,
										32608
									],
									[
										32802,
										32806
									],
									[
										33055,
										33059
									],
									[
										33215,
										33219
									],
									[
										33282,
										33286
									],
									[
										33465,
										33469
									],
									[
										33629,
										33633
									],
									[
										33905,
										33909
									],
									[
										34157,
										34161
									],
									[
										34346,
										34350
									],
									[
										34601,
										34605
									],
									[
										34620,
										34624
									],
									[
										34654,
										34658
									],
									[
										34867,
										34871
									],
									[
										35093,
										35097
									],
									[
										35419,
										35423
									],
									[
										35673,
										35677
									],
									[
										35861,
										35865
									],
									[
										36037,
										36041
									],
									[
										36291,
										36295
									],
									[
										36500,
										36504
									],
									[
										36798,
										36802
									],
									[
										36864,
										36868
									],
									[
										37116,
										37120
									],
									[
										37182,
										37186
									],
									[
										37419,
										37423
									],
									[
										37495,
										37499
									],
									[
										37582,
										37586
									],
									[
										37687,
										37691
									],
									[
										37879,
										37883
									],
									[
										38104,
										38108
									],
									[
										38149,
										38153
									],
									[
										38339,
										38343
									],
									[
										38599,
										38603
									],
									[
										38923,
										38927
									],
									[
										39162,
										39166
									],
									[
										39372,
										39376
									],
									[
										39602,
										39606
									],
									[
										39755,
										39759
									],
									[
										39882,
										39886
									],
									[
										40029,
										40033
									],
									[
										40315,
										40319
									],
									[
										40559,
										40563
									],
									[
										40919,
										40923
									],
									[
										41139,
										41143
									],
									[
										41401,
										41405
									],
									[
										41560,
										41564
									],
									[
										41760,
										41764
									],
									[
										42059,
										42063
									],
									[
										42276,
										42280
									],
									[
										42489,
										42493
									],
									[
										42646,
										42650
									],
									[
										42879,
										42883
									],
									[
										43064,
										43068
									],
									[
										43291,
										43295
									],
									[
										43540,
										43544
									],
									[
										43739,
										43743
									],
									[
										44005,
										44009
									],
									[
										44093,
										44097
									],
									[
										44251,
										44255
									],
									[
										44339,
										44343
									],
									[
										44491,
										44495
									],
									[
										44578,
										44582
									],
									[
										44736,
										44740
									],
									[
										44823,
										44827
									],
									[
										45150,
										45154
									],
									[
										45281,
										45285
									],
									[
										45486,
										45490
									],
									[
										45619,
										45623
									],
									[
										45752,
										45756
									],
									[
										45885,
										45889
									],
									[
										46020,
										46024
									],
									[
										46151,
										46155
									],
									[
										46284,
										46288
									],
									[
										46624,
										46628
									],
									[
										46759,
										46763
									],
									[
										46890,
										46894
									],
									[
										47021,
										47025
									],
									[
										47347,
										47351
									],
									[
										47611,
										47615
									],
									[
										47808,
										47812
									],
									[
										47939,
										47943
									],
									[
										48070,
										48074
									],
									[
										48201,
										48205
									],
									[
										48332,
										48336
									],
									[
										48529,
										48533
									],
									[
										48736,
										48740
									],
									[
										49026,
										49030
									],
									[
										49424,
										49428
									],
									[
										49618,
										49622
									],
									[
										50022,
										50026
									],
									[
										50315,
										50319
									],
									[
										50582,
										50586
									],
									[
										50913,
										50917
									],
									[
										51206,
										51210
									],
									[
										51473,
										51477
									],
									[
										51804,
										51808
									],
									[
										52097,
										52101
									],
									[
										52364,
										52368
									],
									[
										52695,
										52699
									],
									[
										52988,
										52992
									],
									[
										53255,
										53259
									],
									[
										53586,
										53590
									],
									[
										53879,
										53883
									],
									[
										54146,
										54150
									],
									[
										54466,
										54470
									],
									[
										54796,
										54800
									],
									[
										54928,
										54932
									],
									[
										55067,
										55071
									],
									[
										55133,
										55137
									],
									[
										55199,
										55203
									],
									[
										55264,
										55268
									],
									[
										55330,
										55334
									],
									[
										55662,
										55666
									],
									[
										55729,
										55733
									],
									[
										55794,
										55798
									],
									[
										55859,
										55863
									],
									[
										56056,
										56060
									],
									[
										56123,
										56127
									],
									[
										56406,
										56410
									],
									[
										56471,
										56475
									],
									[
										56536,
										56540
									],
									[
										56601,
										56605
									],
									[
										56667,
										56671
									],
									[
										56733,
										56737
									],
									[
										56798,
										56802
									],
									[
										57004,
										57008
									],
									[
										57305,
										57309
									],
									[
										57645,
										57649
									],
									[
										57781,
										57785
									],
									[
										57924,
										57928
									],
									[
										57992,
										57996
									],
									[
										58060,
										58064
									],
									[
										58127,
										58131
									],
									[
										58195,
										58199
									],
									[
										58537,
										58541
									],
									[
										58606,
										58610
									],
									[
										58673,
										58677
									],
									[
										58740,
										58744
									],
									[
										58943,
										58947
									],
									[
										59012,
										59016
									],
									[
										59305,
										59309
									],
									[
										59372,
										59376
									],
									[
										59439,
										59443
									],
									[
										59506,
										59510
									],
									[
										59574,
										59578
									],
									[
										59642,
										59646
									],
									[
										59709,
										59713
									],
									[
										59921,
										59925
									],
									[
										60207,
										60211
									],
									[
										60559,
										60563
									],
									[
										60821,
										60825
									],
									[
										61026,
										61030
									],
									[
										61159,
										61163
									],
									[
										61292,
										61296
									],
									[
										61423,
										61427
									],
									[
										61556,
										61560
									],
									[
										61895,
										61899
									],
									[
										62030,
										62034
									],
									[
										62161,
										62165
									],
									[
										62292,
										62296
									],
									[
										62618,
										62622
									],
									[
										62882,
										62886
									],
									[
										63079,
										63083
									],
									[
										63210,
										63214
									],
									[
										63341,
										63345
									],
									[
										63472,
										63476
									],
									[
										63605,
										63609
									],
									[
										63738,
										63742
									],
									[
										63869,
										63873
									],
									[
										64199,
										64203
									],
									[
										64627,
										64631
									],
									[
										64920,
										64924
									],
									[
										65187,
										65191
									],
									[
										65542,
										65546
									],
									[
										65891,
										65895
									],
									[
										66244,
										66248
									],
									[
										66595,
										66599
									],
									[
										66992,
										66996
									],
									[
										67345,
										67349
									],
									[
										67649,
										67653
									],
									[
										67891,
										67895
									],
									[
										67965,
										67969
									],
									[
										68128,
										68132
									],
									[
										68210,
										68214
									],
									[
										68353,
										68357
									],
									[
										68429,
										68433
									],
									[
										68658,
										68662
									],
									[
										68732,
										68736
									],
									[
										68895,
										68899
									],
									[
										68977,
										68981
									],
									[
										69120,
										69124
									],
									[
										69231,
										69235
									],
									[
										69456,
										69460
									],
									[
										69530,
										69534
									],
									[
										69688,
										69692
									],
									[
										69770,
										69774
									],
									[
										69993,
										69997
									],
									[
										70192,
										70196
									],
									[
										70476,
										70480
									],
									[
										70712,
										70716
									],
									[
										70977,
										70981
									],
									[
										71161,
										71165
									],
									[
										71418,
										71422
									],
									[
										71667,
										71671
									],
									[
										71797,
										71801
									],
									[
										71867,
										71871
									],
									[
										72045,
										72049
									],
									[
										72307,
										72311
									],
									[
										72577,
										72581
									],
									[
										72747,
										72751
									],
									[
										72812,
										72816
									],
									[
										73014,
										73018
									],
									[
										73231,
										73235
									],
									[
										73465,
										73469
									],
									[
										73749,
										73753
									],
									[
										73921,
										73925
									],
									[
										73983,
										73987
									],
									[
										74211,
										74215
									],
									[
										74450,
										74454
									],
									[
										74645,
										74649
									],
									[
										74803,
										74807
									],
									[
										75046,
										75050
									],
									[
										75256,
										75260
									],
									[
										75569,
										75573
									],
									[
										75751,
										75755
									],
									[
										76105,
										76109
									],
									[
										76346,
										76350
									],
									[
										76625,
										76629
									],
									[
										76811,
										76815
									],
									[
										77027,
										77031
									],
									[
										77325,
										77329
									],
									[
										77614,
										77618
									],
									[
										77892,
										77896
									],
									[
										78122,
										78126
									],
									[
										78300,
										78304
									],
									[
										78408,
										78412
									],
									[
										78624,
										78628
									],
									[
										78965,
										78969
									],
									[
										79289,
										79293
									],
									[
										79610,
										79614
									],
									[
										79780,
										79784
									],
									[
										80012,
										80016
									],
									[
										80254,
										80258
									],
									[
										80496,
										80500
									],
									[
										80588,
										80592
									],
									[
										80831,
										80835
									],
									[
										81174,
										81178
									],
									[
										81284,
										81288
									],
									[
										81306,
										81310
									],
									[
										81439,
										81443
									],
									[
										81710,
										81714
									],
									[
										81957,
										81961
									],
									[
										82213,
										82217
									],
									[
										82437,
										82441
									],
									[
										82697,
										82701
									],
									[
										82729,
										82733
									],
									[
										82916,
										82920
									],
									[
										83174,
										83178
									],
									[
										83240,
										83244
									],
									[
										83312,
										83316
									],
									[
										83630,
										83634
									],
									[
										83790,
										83794
									],
									[
										83851,
										83855
									],
									[
										83974,
										83978
									],
									[
										84101,
										84105
									],
									[
										84235,
										84239
									],
									[
										84549,
										84553
									],
									[
										84607,
										84611
									],
									[
										84670,
										84674
									],
									[
										84739,
										84743
									],
									[
										85039,
										85043
									],
									[
										85191,
										85195
									],
									[
										85259,
										85263
									],
									[
										85445,
										85449
									],
									[
										85478,
										85482
									],
									[
										85670,
										85674
									],
									[
										85951,
										85955
									],
									[
										86018,
										86022
									],
									[
										86091,
										86095
									],
									[
										86167,
										86171
									],
									[
										86235,
										86239
									],
									[
										86297,
										86301
									],
									[
										86422,
										86426
									],
									[
										86551,
										86555
									],
									[
										86687,
										86691
									],
									[
										86928,
										86932
									],
									[
										86987,
										86991
									],
									[
										87051,
										87055
									],
									[
										87121,
										87125
									],
									[
										87194,
										87198
									],
									[
										87266,
										87270
									],
									[
										87335,
										87339
									],
									[
										87570,
										87574
									],
									[
										87807,
										87811
									],
									[
										88075,
										88079
									],
									[
										88107,
										88111
									],
									[
										88116,
										88120
									],
									[
										88144,
										88148
									],
									[
										88153,
										88157
									],
									[
										88187,
										88191
									],
									[
										88223,
										88227
									],
									[
										88265,
										88269
									],
									[
										88312,
										88316
									],
									[
										88358,
										88362
									],
									[
										88407,
										88411
									],
									[
										88454,
										88458
									],
									[
										88583,
										88587
									],
									[
										88618,
										88622
									],
									[
										88840,
										88844
									],
									[
										88903,
										88907
									],
									[
										88972,
										88976
									],
									[
										89278,
										89282
									],
									[
										89432,
										89436
									],
									[
										89490,
										89494
									],
									[
										89607,
										89611
									],
									[
										89728,
										89732
									],
									[
										89856,
										89860
									],
									[
										90158,
										90162
									],
									[
										90213,
										90217
									],
									[
										90273,
										90277
									],
									[
										90339,
										90343
									],
									[
										90627,
										90631
									],
									[
										90773,
										90777
									],
									[
										90838,
										90842
									],
									[
										91067,
										91071
									],
									[
										91138,
										91142
									],
									[
										91179,
										91183
									],
									[
										91196,
										91200
									],
									[
										91240,
										91244
									],
									[
										91348,
										91352
									],
									[
										91417,
										91421
									],
									[
										91461,
										91465
									],
									[
										91549,
										91553
									],
									[
										91568,
										91572
									],
									[
										91644,
										91648
									],
									[
										91861,
										91865
									],
									[
										92089,
										92093
									],
									[
										92299,
										92303
									],
									[
										92501,
										92505
									],
									[
										92630,
										92634
									],
									[
										92825,
										92829
									],
									[
										93147,
										93151
									],
									[
										93421,
										93425
									],
									[
										93582,
										93586
									],
									[
										93828,
										93832
									],
									[
										94048,
										94052
									],
									[
										94178,
										94182
									],
									[
										94356,
										94360
									],
									[
										94509,
										94513
									],
									[
										94594,
										94598
									],
									[
										94798,
										94802
									],
									[
										94811,
										94815
									],
									[
										95060,
										95064
									],
									[
										95338,
										95342
									],
									[
										95618,
										95622
									],
									[
										95738,
										95742
									],
									[
										96017,
										96021
									],
									[
										96210,
										96214
									],
									[
										96507,
										96511
									],
									[
										96556,
										96560
									],
									[
										96621,
										96625
									],
									[
										96714,
										96718
									],
									[
										96970,
										96974
									],
									[
										97065,
										97069
									],
									[
										97156,
										97160
									],
									[
										97441,
										97445
									],
									[
										97611,
										97615
									],
									[
										97691,
										97695
									],
									[
										97906,
										97910
									],
									[
										98046,
										98050
									],
									[
										98312,
										98316
									],
									[
										98612,
										98616
									],
									[
										98863,
										98867
									],
									[
										98874,
										98878
									],
									[
										99071,
										99075
									],
									[
										99313,
										99317
									],
									[
										99575,
										99579
									],
									[
										99828,
										99832
									],
									[
										99839,
										99843
									],
									[
										99955,
										99959
									],
									[
										100170,
										100174
									],
									[
										100359,
										100363
									],
									[
										100613,
										100617
									],
									[
										100769,
										100773
									],
									[
										100877,
										100881
									],
									[
										100936,
										100940
									],
									[
										101064,
										101068
									],
									[
										101308,
										101312
									],
									[
										101526,
										101530
									],
									[
										101614,
										101618
									],
									[
										101835,
										101839
									],
									[
										102021,
										102025
									],
									[
										102075,
										102079
									],
									[
										102239,
										102243
									],
									[
										102538,
										102542
									],
									[
										102556,
										102560
									],
									[
										102653,
										102657
									],
									[
										102823,
										102827
									],
									[
										102935,
										102939
									],
									[
										103189,
										103193
									],
									[
										103282,
										103286
									],
									[
										103596,
										103600
									],
									[
										103813,
										103817
									],
									[
										103927,
										103931
									],
									[
										104116,
										104120
									],
									[
										104335,
										104339
									],
									[
										104450,
										104454
									],
									[
										104571,
										104575
									],
									[
										104735,
										104739
									],
									[
										104872,
										104876
									],
									[
										105141,
										105145
									],
									[
										105199,
										105203
									],
									[
										105474,
										105478
									],
									[
										105677,
										105681
									],
									[
										105886,
										105890
									],
									[
										106138,
										106142
									],
									[
										106449,
										106453
									],
									[
										106653,
										106657
									],
									[
										106927,
										106931
									],
									[
										107169,
										107173
									],
									[
										107328,
										107332
									],
									[
										107517,
										107521
									],
									[
										107780,
										107784
									],
									[
										107980,
										107984
									],
									[
										108171,
										108175
									],
									[
										108312,
										108316
									],
									[
										108559,
										108563
									],
									[
										108829,
										108833
									],
									[
										108889,
										108893
									],
									[
										109174,
										109178
									],
									[
										109334,
										109338
									],
									[
										109369,
										109373
									],
									[
										109599,
										109603
									],
									[
										109729,
										109733
									],
									[
										109938,
										109942
									],
									[
										110114,
										110118
									],
									[
										110392,
										110396
									],
									[
										110645,
										110649
									],
									[
										110897,
										110901
									],
									[
										111112,
										111116
									],
									[
										111327,
										111331
									],
									[
										111635,
										111639
									],
									[
										111826,
										111830
									],
									[
										111869,
										111873
									],
									[
										112071,
										112075
									],
									[
										112254,
										112258
									],
									[
										112450,
										112454
									],
									[
										112494,
										112498
									],
									[
										112701,
										112705
									],
									[
										112943,
										112947
									],
									[
										113157,
										113161
									],
									[
										113308,
										113312
									],
									[
										113493,
										113497
									],
									[
										113673,
										113677
									],
									[
										114018,
										114022
									],
									[
										114214,
										114218
									],
									[
										114563,
										114567
									],
									[
										114759,
										114763
									],
									[
										115024,
										115028
									],
									[
										115184,
										115188
									],
									[
										115318,
										115322
									],
									[
										115471,
										115475
									],
									[
										115660,
										115664
									],
									[
										115694,
										115698
									],
									[
										115731,
										115735
									],
									[
										115876,
										115880
									],
									[
										116026,
										116030
									],
									[
										116290,
										116294
									],
									[
										116485,
										116489
									],
									[
										116769,
										116773
									],
									[
										116851,
										116855
									],
									[
										116907,
										116911
									],
									[
										117035,
										117039
									],
									[
										117147,
										117151
									],
									[
										117413,
										117417
									],
									[
										117498,
										117502
									],
									[
										117729,
										117733
									],
									[
										117937,
										117941
									],
									[
										118196,
										118200
									],
									[
										118454,
										118458
									],
									[
										118732,
										118736
									],
									[
										118890,
										118894
									],
									[
										119118,
										119122
									],
									[
										119349,
										119353
									],
									[
										119565,
										119569
									],
									[
										119758,
										119762
									],
									[
										119926,
										119930
									],
									[
										120150,
										120154
									],
									[
										120482,
										120486
									],
									[
										120723,
										120727
									],
									[
										120988,
										120992
									],
									[
										121239,
										121243
									],
									[
										121383,
										121387
									],
									[
										121749,
										121753
									],
									[
										121912,
										121916
									],
									[
										122219,
										122223
									],
									[
										122451,
										122455
									],
									[
										122522,
										122526
									],
									[
										122833,
										122837
									],
									[
										122908,
										122912
									],
									[
										123207,
										123211
									],
									[
										123278,
										123282
									],
									[
										123545,
										123549
									],
									[
										123826,
										123830
									],
									[
										123898,
										123902
									],
									[
										124144,
										124148
									],
									[
										124213,
										124217
									],
									[
										124462,
										124466
									],
									[
										124533,
										124537
									],
									[
										124820,
										124824
									],
									[
										124889,
										124893
									],
									[
										125164,
										125168
									],
									[
										125238,
										125242
									],
									[
										125518,
										125522
									],
									[
										125586,
										125590
									],
									[
										125840,
										125844
									],
									[
										126118,
										126122
									],
									[
										126448,
										126452
									],
									[
										126551,
										126555
									],
									[
										126699,
										126703
									],
									[
										126951,
										126955
									],
									[
										127029,
										127033
									],
									[
										127457,
										127461
									],
									[
										127547,
										127551
									],
									[
										127795,
										127799
									],
									[
										127876,
										127880
									],
									[
										128246,
										128250
									],
									[
										128513,
										128517
									],
									[
										128845,
										128849
									],
									[
										129195,
										129199
									],
									[
										129375,
										129379
									],
									[
										129436,
										129440
									],
									[
										129593,
										129597
									],
									[
										129963,
										129967
									],
									[
										130124,
										130128
									],
									[
										130334,
										130338
									],
									[
										130438,
										130442
									],
									[
										130686,
										130690
									],
									[
										130892,
										130896
									],
									[
										131040,
										131044
									],
									[
										131191,
										131195
									],
									[
										131241,
										131245
									],
									[
										131400,
										131404
									],
									[
										131550,
										131554
									],
									[
										131783,
										131787
									],
									[
										131935,
										131939
									],
									[
										132055,
										132059
									],
									[
										132140,
										132144
									],
									[
										132319,
										132323
									],
									[
										132502,
										132506
									],
									[
										132702,
										132706
									],
									[
										132765,
										132769
									],
									[
										132930,
										132934
									],
									[
										132943,
										132947
									],
									[
										132996,
										133000
									],
									[
										133009,
										133013
									],
									[
										133120,
										133124
									],
									[
										133328,
										133332
									],
									[
										133573,
										133577
									],
									[
										133806,
										133810
									],
									[
										133976,
										133980
									],
									[
										134191,
										134195
									],
									[
										134249,
										134253
									],
									[
										134430,
										134434
									],
									[
										134511,
										134515
									],
									[
										134666,
										134670
									],
									[
										134965,
										134969
									],
									[
										135024,
										135028
									],
									[
										135259,
										135263
									],
									[
										135330,
										135334
									],
									[
										135391,
										135395
									],
									[
										135678,
										135682
									],
									[
										135729,
										135733
									],
									[
										135880,
										135884
									],
									[
										136099,
										136103
									],
									[
										136229,
										136233
									],
									[
										136481,
										136485
									],
									[
										136729,
										136733
									],
									[
										137101,
										137105
									],
									[
										137289,
										137293
									],
									[
										137394,
										137398
									],
									[
										137598,
										137602
									],
									[
										137890,
										137894
									],
									[
										137947,
										137951
									],
									[
										138129,
										138133
									],
									[
										138265,
										138269
									],
									[
										138334,
										138338
									],
									[
										138495,
										138499
									],
									[
										138649,
										138653
									],
									[
										138800,
										138804
									],
									[
										138945,
										138949
									],
									[
										139060,
										139064
									],
									[
										139208,
										139212
									],
									[
										139474,
										139478
									],
									[
										139577,
										139581
									],
									[
										139669,
										139673
									],
									[
										139820,
										139824
									],
									[
										139878,
										139882
									],
									[
										140037,
										140041
									],
									[
										140123,
										140127
									],
									[
										140281,
										140285
									],
									[
										140353,
										140357
									],
									[
										140497,
										140501
									],
									[
										140755,
										140759
									],
									[
										141226,
										141230
									],
									[
										141496,
										141500
									],
									[
										141544,
										141548
									],
									[
										141750,
										141754
									],
									[
										141834,
										141838
									],
									[
										141905,
										141909
									],
									[
										142083,
										142087
									],
									[
										142253,
										142257
									],
									[
										142276,
										142280
									],
									[
										142444,
										142448
									],
									[
										142717,
										142721
									],
									[
										142751,
										142755
									],
									[
										142900,
										142904
									],
									[
										143149,
										143153
									],
									[
										143217,
										143221
									],
									[
										143482,
										143486
									],
									[
										143607,
										143611
									],
									[
										143898,
										143902
									],
									[
										144091,
										144095
									],
									[
										144250,
										144254
									],
									[
										144566,
										144570
									],
									[
										144722,
										144726
									],
									[
										144846,
										144850
									],
									[
										145006,
										145010
									],
									[
										145210,
										145214
									],
									[
										145277,
										145281
									],
									[
										145413,
										145417
									],
									[
										145701,
										145705
									],
									[
										145816,
										145820
									],
									[
										145975,
										145979
									],
									[
										146238,
										146242
									],
									[
										146532,
										146536
									],
									[
										146782,
										146786
									],
									[
										147030,
										147034
									],
									[
										147358,
										147362
									],
									[
										147551,
										147555
									],
									[
										147724,
										147728
									],
									[
										147966,
										147970
									],
									[
										148177,
										148181
									],
									[
										148442,
										148446
									],
									[
										148694,
										148698
									],
									[
										148969,
										148973
									],
									[
										149231,
										149235
									],
									[
										149565,
										149569
									],
									[
										149837,
										149841
									],
									[
										150080,
										150084
									],
									[
										150302,
										150306
									],
									[
										150517,
										150521
									],
									[
										150667,
										150671
									],
									[
										150836,
										150840
									],
									[
										150998,
										151002
									],
									[
										151300,
										151304
									],
									[
										151629,
										151633
									],
									[
										151834,
										151838
									],
									[
										152131,
										152135
									],
									[
										152386,
										152390
									],
									[
										152644,
										152648
									],
									[
										152791,
										152795
									],
									[
										152868,
										152872
									],
									[
										153022,
										153026
									],
									[
										153115,
										153119
									],
									[
										153412,
										153416
									],
									[
										153608,
										153612
									],
									[
										153766,
										153770
									],
									[
										153913,
										153917
									],
									[
										154096,
										154100
									],
									[
										154195,
										154199
									],
									[
										154439,
										154443
									],
									[
										154542,
										154546
									],
									[
										154645,
										154649
									],
									[
										154748,
										154752
									],
									[
										155010,
										155014
									],
									[
										155427,
										155431
									],
									[
										155654,
										155658
									],
									[
										155780,
										155784
									],
									[
										155824,
										155828
									],
									[
										155994,
										155998
									],
									[
										156209,
										156213
									],
									[
										156254,
										156258
									],
									[
										156426,
										156430
									],
									[
										156504,
										156508
									],
									[
										156727,
										156731
									],
									[
										156814,
										156818
									],
									[
										157106,
										157110
									],
									[
										157384,
										157388
									],
									[
										157516,
										157520
									],
									[
										157649,
										157653
									],
									[
										157819,
										157823
									],
									[
										157999,
										158003
									],
									[
										158191,
										158195
									],
									[
										158364,
										158368
									],
									[
										158648,
										158652
									],
									[
										158896,
										158900
									],
									[
										159014,
										159018
									],
									[
										159108,
										159112
									],
									[
										159440,
										159444
									],
									[
										159614,
										159618
									],
									[
										159812,
										159816
									],
									[
										159890,
										159894
									],
									[
										160015,
										160019
									],
									[
										160179,
										160183
									],
									[
										160348,
										160352
									],
									[
										160502,
										160506
									],
									[
										160951,
										160955
									],
									[
										161069,
										161073
									],
									[
										161257,
										161261
									],
									[
										161286,
										161290
									],
									[
										161506,
										161510
									],
									[
										161751,
										161755
									],
									[
										161940,
										161944
									],
									[
										162193,
										162197
									],
									[
										162314,
										162318
									],
									[
										162474,
										162478
									],
									[
										162512,
										162516
									],
									[
										162723,
										162727
									],
									[
										162743,
										162747
									],
									[
										163017,
										163021
									],
									[
										163335,
										163339
									],
									[
										163458,
										163462
									],
									[
										163608,
										163612
									],
									[
										163684,
										163688
									],
									[
										163864,
										163868
									],
									[
										164125,
										164129
									],
									[
										164409,
										164413
									],
									[
										164672,
										164676
									],
									[
										164835,
										164839
									],
									[
										165035,
										165039
									],
									[
										165311,
										165315
									],
									[
										165602,
										165606
									],
									[
										165823,
										165827
									],
									[
										167482,
										167486
									],
									[
										168124,
										168128
									],
									[
										170122,
										170126
									],
									[
										172699,
										172703
									],
									[
										173688,
										173692
									],
									[
										174749,
										174753
									],
									[
										174833,
										174837
									],
									[
										176121,
										176125
									],
									[
										176409,
										176413
									],
									[
										176668,
										176672
									],
									[
										176966,
										176970
									],
									[
										177201,
										177205
									],
									[
										177281,
										177285
									],
									[
										177581,
										177585
									],
									[
										177723,
										177727
									],
									[
										177918,
										177922
									],
									[
										178129,
										178133
									],
									[
										178375,
										178379
									],
									[
										178562,
										178566
									],
									[
										178708,
										178712
									],
									[
										178908,
										178912
									],
									[
										179124,
										179128
									],
									[
										179375,
										179379
									],
									[
										179659,
										179663
									],
									[
										179899,
										179903
									],
									[
										180006,
										180010
									],
									[
										180210,
										180214
									],
									[
										180422,
										180426
									],
									[
										180608,
										180612
									],
									[
										180816,
										180820
									],
									[
										181022,
										181026
									],
									[
										181212,
										181216
									],
									[
										181369,
										181373
									],
									[
										181547,
										181551
									],
									[
										181733,
										181737
									],
									[
										181937,
										181941
									],
									[
										182288,
										182296
									],
									[
										182300,
										182308
									],
									[
										182715,
										182723
									],
									[
										183028,
										183036
									],
									[
										183121,
										183129
									],
									[
										183512,
										183520
									],
									[
										183859,
										183866
									],
									[
										183871,
										183878
									],
									[
										184290,
										184297
									],
									[
										184428,
										184435
									],
									[
										184694,
										184701
									],
									[
										184787,
										184794
									],
									[
										185089,
										185095
									],
									[
										185101,
										185107
									],
									[
										185516,
										185522
									],
									[
										185652,
										185658
									],
									[
										185914,
										185920
									],
									[
										186007,
										186013
									]
								],
								"scope": ""
							}
						},
						"selection":
						[
							[
								185658,
								185658
							]
						],
						"settings":
						{
							"detect_indentation": false,
							"output_tag": 5,
							"result_base_dir": "",
							"result_file_regex": "^([A-Za-z\\\\/<].*):$",
							"result_line_regex": "^ +([0-9]+):",
							"scroll_past_end": true,
							"syntax": "Packages/Default/Find Results.hidden-tmLanguage"
						},
						"translation.x": 0.0,
						"translation.y": 101982.0,
						"zoom_level": 1.0
					},
					"type": "text"
				},
				{
					"buffer": 2,
					"file": "templates/app.html",
					"settings":
					{
						"buffer_size": 16145,
						"regions":
						{
						},
						"selection":
						[
							[
								7514,
								7514
							]
						],
						"settings":
						{
							"syntax": "Packages/HTML/HTML.tmLanguage",
							"tab_size": 2,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 2592.0,
						"zoom_level": 1.0
					},
					"type": "text"
				},
				{
					"buffer": 3,
					"file": "sharepad_db.py",
					"settings":
					{
						"buffer_size": 8300,
						"regions":
						{
						},
						"selection":
						[
							[
								5666,
								5666
							]
						],
						"settings":
						{
							"syntax": "Packages/Python/Python.tmLanguage",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 2962.0,
						"zoom_level": 1.0
					},
					"type": "text"
				},
				{
					"buffer": 4,
					"file": "templates/random.html",
					"settings":
					{
						"buffer_size": 595,
						"regions":
						{
						},
						"selection":
						[
							[
								192,
								192
							]
						],
						"settings":
						{
							"syntax": "Packages/HTML/HTML.tmLanguage",
							"tab_size": 2,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"type": "text"
				}
			]
		}
	],
	"incremental_find":
	{
		"height": 38.0
	},
	"input":
	{
		"height": 0.0
	},
	"layout":
	{
		"cells":
		[
			[
				0,
				0,
				1,
				1
			]
		],
		"cols":
		[
			0.0,
			1.0
		],
		"rows":
		[
			0.0,
			1.0
		]
	},
	"menu_visible": true,
	"output.exec":
	{
		"height": 142.0
	},
	"replace":
	{
		"height": 0.0
	},
	"save_all_on_build": true,
	"select_file":
	{
		"height": 0.0,
		"selected_items":
		[
			[
				"index",
				"templates/index.html"
			],
			[
				"app",
				"templates/app.html"
			]
		],
		"width": 0.0
	},
	"select_project":
	{
		"height": 0.0,
		"selected_items":
		[
		],
		"width": 0.0
	},
	"show_minimap": true,
	"show_open_files": false,
	"show_tabs": true,
	"side_bar_visible": true,
	"side_bar_width": 50.0,
	"status_bar_visible": true
}
